{"version":3,"file":"react-src-components-verbs-__tests__-Workflows-stories.5ccf348c.iframe.bundle.js","mappings":";;;;;;AAyFA;;;;;AAKA;AAGA;;;;AAMA;;;;AAMA;AAGA;;;;AAMA;;;;;AAKA;;;AC/GA;;;;;;ACGA;;;;;AAOA;;;AAGA;AAGA;;;AAGA;AAGA;;;AAGA;AAGA;;;AAKA;;;AC5BA;;ACPA;;;AAKA;;;AAKA;;AAIA;;;;AAMA;;;;;ACrBA;AAGA;;ACEA;;ACJA","sources":["webpack://@datashaper/stories/../react/src/components/verbs/descriptions/VerbDescription.tsx","webpack://@datashaper/stories/../react/src/components/StepDescription/StepDescription.tsx","webpack://@datashaper/stories/../react/src/components/verbs/__tests__/WorkflowExample/components/Section.styles.ts","webpack://@datashaper/stories/../react/src/components/verbs/__tests__/WorkflowExample/components/Section.tsx","webpack://@datashaper/stories/../react/src/components/verbs/__tests__/WorkflowExample/components/StepOutput.styles.ts","webpack://@datashaper/stories/../react/src/components/verbs/__tests__/WorkflowExample/components/Table.styles.ts","webpack://@datashaper/stories/../react/src/components/verbs/__tests__/WorkflowExample/components/Table.tsx","webpack://@datashaper/stories/../react/src/components/verbs/__tests__/WorkflowExample/WorkflowExample.styles.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { isOutputColumnStep, NodeInput } from '@datashaper/workflow'\nimport styled from '@essex/styled-components'\nimport isNil from 'lodash-es/isNil.js'\nimport { memo, useMemo } from 'react'\n\nimport type { DescriptionRow, VerbDescriptionProps } from './types.js'\n\nfunction VerbDescriptionFn<T extends object | void>({\n\tstep,\n\trows,\n\toutput,\n\tshowInput,\n\tshowOutput,\n\tshowOutputColumn,\n\tstyle,\n}: VerbDescriptionProps<T>) {\n\tconst rws = useMemo(() => {\n\t\tfunction loop(rows: DescriptionRow[]) {\n\t\t\treturn rows.map((row, index) => (\n\t\t\t\t<Row\n\t\t\t\t\tkey={`verb-description-row-${row.value}-${index}`}\n\t\t\t\t\ttitle={row.title}\n\t\t\t\t>\n\t\t\t\t\t<KeyValue>\n\t\t\t\t\t\t{row.before ? <Key>{row.before}</Key> : null}\n\t\t\t\t\t\t{isNil(row.value) ? (\n\t\t\t\t\t\t\t<Unset />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Value title={row.value}>{row.value}</Value>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{row.after ? <Key>{row.after}</Key> : null}\n\t\t\t\t\t</KeyValue>\n\t\t\t\t\t{row.sub ? loop(row.sub) : null}\n\t\t\t\t</Row>\n\t\t\t))\n\t\t}\n\t\treturn loop(rows)\n\t}, [rows])\n\tconst shouldShowOutputColumn = showOutputColumn && isOutputColumnStep(step)\n\tconst input = step.input[NodeInput.Source]\n\treturn (\n\t\t<Container style={style}>\n\t\t\t<Verb>{step.verb}</Verb>\n\t\t\t{showInput ? (\n\t\t\t\t<Row>\n\t\t\t\t\t<KeyValue>\n\t\t\t\t\t\t<Key>table</Key>\n\t\t\t\t\t\t{!input ? <Unset /> : <Value>{input}</Value>}\n\t\t\t\t\t</KeyValue>\n\t\t\t\t</Row>\n\t\t\t) : null}\n\t\t\t{rws}\n\t\t\t{showOutput ? (\n\t\t\t\t<Row>\n\t\t\t\t\t<KeyValue>\n\t\t\t\t\t\t<Key>into table</Key>\n\t\t\t\t\t\t{!output ? <Unset /> : <Value>{output}</Value>}\n\t\t\t\t\t</KeyValue>\n\t\t\t\t</Row>\n\t\t\t) : null}\n\t\t\t{shouldShowOutputColumn ? (\n\t\t\t\t<Row>\n\t\t\t\t\t<KeyValue>\n\t\t\t\t\t\t<Key>as column</Key>\n\t\t\t\t\t\t{!(step.args as any).to ? (\n\t\t\t\t\t\t\t<Unset />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Value>{(step.args as any).to}</Value>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</KeyValue>\n\t\t\t\t</Row>\n\t\t\t) : null}\n\t\t</Container>\n\t)\n}\n\nexport const VerbDescription = memo(VerbDescriptionFn)\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tmin-height: 180px;\n`\n\nconst Verb = styled.div`\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\talign-items: center;\n\twidth: 100%;\n\tcolor: ${({ theme }) => theme.palette.neutralTertiary};\n`\n\nconst Row = styled.div`\n\tpadding-left: 8px;\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nconst KeyValue = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tgap: 4px;\n`\n\nconst Key = styled.div``\n\nconst Unset = styled.div`\n\tcolor: ${({ theme }) => theme.palette.neutralTertiaryAlt};\n\t&:before {\n\t\tcontent: 'unset';\n\t}\n`\n\nconst Value = styled.div`\n\tmax-width: 240px;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.palette.neutralTertiary};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { memo, useMemo } from 'react'\n\nimport { selectStepDescription } from './selectStepDescription.js'\nimport { Container } from './StepDescription.styles.js'\nimport type { StepDescriptionProps } from './StepDescription.types.js'\n\n/**\n * Let's us render the Steps in a loop while memoizing all the functions\n */\nexport const StepDescription: React.FC<StepDescriptionProps> = memo(\n\tfunction StepComponent({ step, output }) {\n\t\tconst Description = useMemo(() => selectStepDescription(step), [step])\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Description\n\t\t\t\t\tstep={step}\n\t\t\t\t\toutput={output}\n\t\t\t\t\tshowInput\n\t\t\t\t\tshowOutput\n\t\t\t\t\tshowOutputColumn\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Separator } from '@fluentui/react'\nimport styled from 'styled-components'\n\nexport const Container = styled.section`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\tmargin-bottom: 40px;\n`\n\nexport const Titles = styled.div`\n\twidth: 140px;\n\tmin-width: 140px;\n\ttext-align: right;\n\ttext-transform: uppercase;\n`\n\nexport const H1 = styled.h1`\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n\tcolor: ${({ theme }) => theme.palette.neutralTertiaryAlt};\n`\n\nexport const H2 = styled.h2`\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n\tcolor: ${({ theme }) => theme.palette.themePrimary};\n`\n\nexport const H3 = styled.h2`\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n\tcolor: ${({ theme }) => theme.palette.themeTertiary};\n`\n\nexport const StyledSeparator = styled(Separator)`\n\tmargin-left: 8px;\n\tmargin-right: 8px;\n`\n\nexport const ChildrenContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { memo, useMemo } from 'react'\n\nimport {\n\tChildrenContainer,\n\tContainer,\n\tH1,\n\tH2,\n\tH3,\n\tStyledSeparator,\n\tTitles,\n} from './Section.styles.js'\nimport type { SectionProps } from './Section.types.js'\n\nexport const Section: React.FC<React.PropsWithChildren<SectionProps>> = memo(\n\tfunction Section({ title, subtitle, children }) {\n\t\tconst subtitleParts = useMemo(\n\t\t\t() => subtitle?.split('.') || [subtitle],\n\t\t\t[subtitle],\n\t\t)\n\t\treturn (\n\t\t\t<Container className='section'>\n\t\t\t\t<Titles>\n\t\t\t\t\t<H1>{title}</H1>\n\t\t\t\t\t<H2>{subtitleParts[0]}</H2>\n\t\t\t\t\t{subtitleParts.slice(1).map((part, i) => (\n\t\t\t\t\t\t<H3 key={`sub-${part}-${i}`}>{part}</H3>\n\t\t\t\t\t))}\n\t\t\t\t</Titles>\n\t\t\t\t<StyledSeparator vertical />\n\t\t\t\t<ChildrenContainer>{children}</ChildrenContainer>\n\t\t\t</Container>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const StepBlock = styled.div`\n\tdisplay: flex;\n`\n\nexport const StepColumn = styled.div`\n\tdisplay: flex;\n\tgap: 8px;\n`\n\nexport const StepConfig = styled.div`\n\tpadding-left: 32px;\n\twidth: 284px;\n`\n\nexport const StepDisplay = styled.div`\n\twidth: 220px;\n`\n\nexport const OutputColumn = styled.div`\n\tmargin-left: 40px;\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport const TableSection = styled.div`\n\tmax-height: 400px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n\twidth: 600px;\n\theight: 300px;\n\tborder: 1px solid ${({ theme }) => theme.palette.neutralLighter};\n`\n\nexport const TableContainer = styled.div`\n\theight: 264px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { IColumn, IDropdownOption } from '@fluentui/react'\nimport { CommandBar } from '@fluentui/react'\nimport { memo, useCallback, useState } from 'react'\n\nimport { ArqueroDetailsList } from '../../../../ArqueroDetailsList/ArqueroDetailsList.js'\nimport { ArqueroTableHeader } from '../../../../ArqueroTableHeader/ArqueroTableHeader.js'\nimport { useColumns, useFarCommandBar } from './Table.hooks.js'\nimport { Container, TableContainer } from './Table.styles.js'\nimport type { TableProps } from './Table.types.js'\n\nexport const Table: React.FC<TableProps> = memo(function Table({\n\tname,\n\ttable,\n\tmetadata,\n\tconfig,\n\tfeatures = {},\n\tcompact,\n\tonRenameTable,\n}) {\n\tconst [selectedColumn, setSelectedColumn] = useState<string | undefined>()\n\n\tconst columns = useColumns(config)\n\n\tconst farCommandBar = useFarCommandBar(table)\n\n\tconst handleColumnClick = useCallback(\n\t\t(evt?: React.MouseEvent<HTMLElement>, column?: IColumn) =>\n\t\t\tsetSelectedColumn(column?.key),\n\t\t[setSelectedColumn],\n\t)\n\n\tconst handleCellDropdownSelect = useCallback(\n\t\t(\n\t\t\tevt: React.FormEvent<HTMLDivElement>,\n\t\t\toption?: IDropdownOption<any> | undefined,\n\t\t) => {\n\t\t\tconsole.log('option selected: ', option)\n\t\t\talert(`Value selected: ${option?.text}`)\n\t\t},\n\t\t[],\n\t)\n\n\treturn (\n\t\t<Container className='table-container'>\n\t\t\t<ArqueroTableHeader\n\t\t\t\ttable={table}\n\t\t\t\tname={name}\n\t\t\t\tshowRowCount={true}\n\t\t\t\tshowColumnCount={true}\n\t\t\t\tfarCommandBar={<CommandBar {...farCommandBar} />}\n\t\t\t/>\n\t\t\t<TableContainer>\n\t\t\t\t<ArqueroDetailsList\n\t\t\t\t\ttable={table}\n\t\t\t\t\tmetadata={metadata}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tfeatures={features}\n\t\t\t\t\tcompact={compact}\n\t\t\t\t\tselectedColumn={selectedColumn}\n\t\t\t\t\tonColumnSelect={handleColumnClick}\n\t\t\t\t\tonCellDropdownSelect={handleCellDropdownSelect}\n\t\t\t\t\tsortable\n\t\t\t\t\tshowColumnBorders\n\t\t\t\t\tisHeaderFixed\n\t\t\t\t/>\n\t\t\t</TableContainer>\n\t\t</Container>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n\tmargin-top: 12px;\n`\n\nexport const Description = styled.p``\n\nexport const Output = styled.div``\n"],"names":[],"sourceRoot":""}