/*! For license information please see 983.5c8dc435.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_datashaper_stories=self.webpackChunk_datashaper_stories||[]).push([[983],{"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columnTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>columnTypes});var _columns_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columns.ts");function columnTypes(table,columns){return(columns?table.select(columns):table).sample(100).columnNames().reduce(((acc,cur)=>(acc[cur]=(0,_columns_js__WEBPACK_IMPORTED_MODULE_0__.lG)(table,cur),acc)),{})}},"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columns.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{lG:()=>columnType});var _datashaper_schema__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../schema/src/data.ts"),_data_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/data.ts");function columnType(table,column){const values=table.array(column);let dataType=_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.Unknown;return values.some((value=>null!=value&&(dataType=(0,_data_js__WEBPACK_IMPORTED_MODULE_1__.wj)(value),!0))),dataType}},"../../.yarn/__virtual__/@datashaper-workflow-virtual-9a99b417c8/1/javascript/workflow/src/util/steps.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{CX:()=>isDataTypeSupported,Dk:()=>isInputKeyValueStep,H4:()=>isInputTableListStep,_w:()=>isOutputColumnStep,cF:()=>isInputColumnStep,fl:()=>isInputColumnRecordStep,uK:()=>isNoArgsStep,wx:()=>isInputColumnListStep});var _datashaper_schema__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../schema/src/data.ts");const TaggedVerbs={aggregate:{inputColumn:!0,outputColumn:!0,rowModifying:!0},bin:{inputColumn:!0,outputColumn:!0,dataTypeConstraints:[_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.Number,_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.Integer]},binarize:{inputColumn:!0,outputColumn:!0},boolean:{inputColumnList:!0,outputColumn:!0},concat:{inputTableList:!0,rowModifying:!0},convert:{inputColumn:!0,outputColumn:!0},copy:{inputColumn:!0,outputColumn:!0},dedupe:{rowModifying:!0,inputColumnList:!0},derive:{outputColumn:!0},difference:{inputTableList:!0,rowModifying:!0},decode:{},destructure:{inputColumn:!0,dataTypeConstraints:[_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.Object]},drop:{inputColumnList:!0},encode:{},erase:{rowModifying:!0,inputColumn:!0},fill:{outputColumn:!0},filter:{inputColumn:!0,rowModifying:!0},fold:{rowModifying:!0,inputColumnList:!0},groupby:{inputColumnList:!0},impute:{inputColumn:!0},intersect:{inputTableList:!0,rowModifying:!0},join:{inputTableList:!0,rowModifying:!0},lookup:{inputTableList:!0,rowModifying:!0},merge:{outputColumn:!0,inputColumnList:!0},print:{},pivot:{rowModifying:!0,inputKeyValue:!0},onehot:{inputColumn:!0},orderby:{},recode:{inputColumn:!0,outputColumn:!0},rename:{inputColumnRecord:!0},rollup:{inputColumn:!0,outputColumn:!0,rowModifying:!0},sample:{rowModifying:!0},select:{inputColumnList:!0},spread:{inputColumn:!0,dataTypeConstraints:[_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.Array]},"strings.replace":{inputColumn:!0,outputColumn:!0,dataTypeConstraints:[_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.String]},"strings.lower":{inputColumn:!0,outputColumn:!0,dataTypeConstraints:[_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.String]},"strings.upper":{inputColumn:!0,outputColumn:!0,dataTypeConstraints:[_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.String]},unfold:{rowModifying:!0,inputKeyValue:!0},ungroup:{noArgs:!0},unhot:{outputColumn:!0,inputColumnList:!0},union:{inputTableList:!0,rowModifying:!0},unorder:{noArgs:!0},unroll:{rowModifying:!0,inputColumn:!0,dataTypeConstraints:[_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.Array]},window:{inputColumn:!0,outputColumn:!0},workflow:{}};function isInputTableListStep(verb){return!!TaggedVerbs[verb].inputTableList}function isInputColumnStep(verb){return!!TaggedVerbs[verb].inputColumn}function isInputColumnListStep(verb){return!!TaggedVerbs[verb].inputColumnList}function isInputColumnRecordStep(verb){return!!TaggedVerbs[verb].inputColumnRecord}function isInputKeyValueStep(verb){return!!TaggedVerbs[verb].inputKeyValue}function isOutputColumnStep(verb){return!!TaggedVerbs[verb].outputColumn}function isNoArgsStep(verb){return!!TaggedVerbs[verb].noArgs}function isDataTypeSupported(verb,type){const constraints=TaggedVerbs[verb]?.dataTypeConstraints;return!constraints||!type||!!constraints.find((t=>t===type))}},"../react/src/components/StepForm/StepForm.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>StepForm});var jsx_runtime=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/jsx-runtime.js"),types=__webpack_require__("../../.yarn/__virtual__/@datashaper-workflow-virtual-9a99b417c8/1/javascript/workflow/src/dataflow/types.ts"),steps=__webpack_require__("../../.yarn/__virtual__/@datashaper-workflow-virtual-9a99b417c8/1/javascript/workflow/src/util/steps.ts"),MultiDropdown=__webpack_require__("../../.yarn/__virtual__/@essex-components-virtual-8fb571eb4e/0/cache/@essex-components-npm-4.2.0-90f5c830ba-807e614d13.zip/node_modules/@essex/components/dist/MultiDropdown/MultiDropdown.js"),lib_commonjs=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-virtual-b0efa69786/0/cache/@fluentui-react-npm-8.110.2-669ea1c8a4-df2ed3344f.zip/node_modules/@fluentui/react/lib-commonjs/index.js"),react=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js"),empty=__webpack_require__("../react/src/empty.ts");function useColumnNames(table,filter){return(0,react.useMemo)((()=>table?.columnNames(filter)??empty.LZ),[table,filter])}var useSimpleDropdownOptions=__webpack_require__("../react/src/hooks/fluent/useSimpleDropdownOptions.ts"),useWorkflowDataTable=__webpack_require__("../react/src/hooks/workflow/useWorkflowDataTable.ts"),styles=__webpack_require__("../react/src/components/styles.ts");const TableColumnDropdown=(0,react.memo)((function TableColumnDropdown({...props}){return(0,jsx_runtime.jsx)(lib_commonjs.Dropdown,{label:"Column",placeholder:"Choose column",styles:styles.Rj,...props})}));try{TableColumnDropdown.displayName="TableColumnDropdown",TableColumnDropdown.__docgenInfo={description:"Dropdown wrapper to automatically list the columns of an Arquero table.",displayName:"TableColumnDropdown",props:{options:{defaultValue:null,description:"Options for the dropdown. If using `defaultSelectedKey` or `defaultSelectedKeys`, options must be\npure for correct behavior.",name:"options",required:!0,type:{name:"IDropdownOption<any>[]"}},placeHolder:{defaultValue:null,description:"Input placeholder text. Displayed until option is selected.\n@deprecated Use `placeholder`",name:"placeHolder",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback issued when the selected option changes.",name:"onChange",required:!1,type:{name:"(event: FormEvent<HTMLDivElement>, option?: IDropdownOption<any>, index?: number) => void"}},onChanged:{defaultValue:null,description:"@deprecated Use `onChange` instead.",name:"onChanged",required:!1,type:{name:"(option: IDropdownOption<any>, index?: number) => void"}},onRenderLabel:{defaultValue:null,description:"Custom render function for the label.",name:"onRenderLabel",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},onRenderPlaceholder:{defaultValue:null,description:"Optional custom renderer for placeholder text",name:"onRenderPlaceholder",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},onRenderPlaceHolder:{defaultValue:null,description:"Optional custom renderer for placeholder text\n@deprecated Use `onRenderPlaceholder`",name:"onRenderPlaceHolder",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},onRenderTitle:{defaultValue:null,description:"Optional custom renderer for selected option displayed in input",name:"onRenderTitle",required:!1,type:{name:"IRenderFunction<IDropdownOption<any>[]>"}},onRenderCaretDown:{defaultValue:null,description:"Optional custom renderer for chevron icon",name:"onRenderCaretDown",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},dropdownWidth:{defaultValue:null,description:"Custom width for dropdown. If value is 0, width of the input field is used.\nIf value is 'auto', width of the input field is used by default, and it can grow wider to fit the content.\n@defaultvalue 0",name:"dropdownWidth",required:!1,type:{name:'number | "auto"'}},responsiveMode:{defaultValue:null,description:"Pass in ResponsiveMode to manually overwrite the way the Dropdown renders.\nResponsiveMode.large would, for instance, disable the behavior where Dropdown options\nget rendered into a Panel while ResponsiveMode.small would result in the Dropdown\noptions always getting rendered in a Panel.",name:"responsiveMode",required:!1,type:{name:"ResponsiveMode"}},defaultSelectedKeys:{defaultValue:null,description:"Keys that will be initially used to set selected items. This prop is used for `multiSelect`\nscenarios. In other cases, `defaultSelectedKey` should be used.",name:"defaultSelectedKeys",required:!1,type:{name:"string[] | number[]"}},selectedKeys:{defaultValue:null,description:"Keys of the selected items. If you provide this, you must maintain selection\nstate by observing onChange events and passing a new value in when changed.\nPassing null in will clear the selection.\nMutually exclusive with `defaultSelectedKeys`.",name:"selectedKeys",required:!1,type:{name:"string[] | number[]"}},multiSelectDelimiter:{defaultValue:null,description:'When multiple items are selected, this still will be used to separate values in\nthe dropdown title.\n@defaultvalue ", "',name:"multiSelectDelimiter",required:!1,type:{name:"string"}},notifyOnReselect:{defaultValue:null,description:"Optional preference to have onChanged still be called when an already selected item is\nclicked in single select mode.  Default to false",name:"notifyOnReselect",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"@deprecated Use `disabled` instead. Deprecated at v0.52.0.",name:"isDisabled",required:!1,type:{name:"boolean"}},theme:{defaultValue:null,description:"Theme provided by higher order component.",name:"theme",required:!1,type:{name:"ITheme"}},styles:{defaultValue:null,description:"Call to provide customized styling that will layer on top of the variant rules.",name:"styles",required:!1,type:{name:"IStyleFunctionOrObject<IDropdownStyleProps, IDropdownStyles>"}},componentRef:{defaultValue:null,description:"Optional callback to access the component interface (usually `IDropdown` or `IComboBox`).\nUse this instead of `ref` for accessing the public methods and properties of the component.",name:"componentRef",required:!1,type:{name:"IRefObject<IDropdown>"}},label:{defaultValue:null,description:"Descriptive label for the field",name:"label",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"Aria Label for the field for screen reader users.",name:"ariaLabel",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID of the field",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Additional class name for the root element.",name:"className",required:!1,type:{name:"string"}},defaultSelectedKey:{defaultValue:null,description:"The key(s) that will be initially used to set a selected item.\n\nMutually exclusive with `selectedKey`.\nFor Dropdown (but not ComboBox) in multi-select mode, use `defaultSelectedKeys` instead.",name:"defaultSelectedKey",required:!1,type:{name:"string | number | string[] | number[]"}},selectedKey:{defaultValue:null,description:"The key(s) of the selected item. If you provide this, you must maintain selection\nstate by observing onChange events and passing a new value in when changed.\nNote that passing in `null` will cause selection to be reset.\n\nMutually exclusive with `defaultSelectedKey`.\nFor Dropdown (but not ComboBox) in multi-select mode, use `selectedKeys` instead.",name:"selectedKey",required:!1,type:{name:"string | number | string[] | number[]"}},multiSelect:{defaultValue:null,description:"Whether multi-choice selections are allowed or not.\n@defaultvalue false",name:"multiSelect",required:!1,type:{name:"boolean"}},onRenderContainer:{defaultValue:null,description:"Optional custom renderer for the option list container",name:"onRenderContainer",required:!1,type:{name:"IRenderFunction<ISelectableDroppableTextProps<IDropdown, HTMLDivElement>>"}},onRenderList:{defaultValue:null,description:"Optional custom renderer for the option list",name:"onRenderList",required:!1,type:{name:"IRenderFunction<ISelectableDroppableTextProps<IDropdown, HTMLDivElement>>"}},onRenderItem:{defaultValue:null,description:"Optional custom renderer for all items, including headers and dividers as well as normal options.",name:"onRenderItem",required:!1,type:{name:"IRenderFunction<ISelectableOption<any>>"}},onRenderOption:{defaultValue:null,description:"Optional custom renderer for normal and header options only.\nUse `onRenderItem` to control rendering for separators as well.",name:"onRenderOption",required:!1,type:{name:"IRenderFunction<ISelectableOption<any>>"}},onDismiss:{defaultValue:null,description:"Callback for when the options list callout is dismissed",name:"onDismiss",required:!1,type:{name:"() => void"}},disabled:{defaultValue:null,description:"Whether or not the field is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"Whether or not the field is required.",name:"required",required:!1,type:{name:"boolean"}},calloutProps:{defaultValue:null,description:"Custom properties for the Callout used to render the option list.",name:"calloutProps",required:!1,type:{name:"ICalloutProps"}},panelProps:{defaultValue:null,description:"Custom properties for the Panel used to render the option list on small devices.",name:"panelProps",required:!1,type:{name:"IPanelProps"}},errorMessage:{defaultValue:null,description:"Error message for the field.",name:"errorMessage",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Input placeholder text. Displayed until option is selected.",name:"placeholder",required:!1,type:{name:"string"}},openOnKeyboardFocus:{defaultValue:null,description:"Whether or not the ComboBox/Dropdown should expand on keyboard focus.\n@defaultvalue false",name:"openOnKeyboardFocus",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | number | readonly string[]"}},suppressContentEditableWarning:{defaultValue:null,description:"",name:"suppressContentEditableWarning",required:!1,type:{name:"boolean"}},suppressHydrationWarning:{defaultValue:null,description:"",name:"suppressHydrationWarning",required:!1,type:{name:"boolean"}},accessKey:{defaultValue:null,description:"",name:"accessKey",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},contentEditable:{defaultValue:null,description:"",name:"contentEditable",required:!1,type:{name:'Booleanish | "inherit"'}},contextMenu:{defaultValue:null,description:"",name:"contextMenu",required:!1,type:{name:"string"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},draggable:{defaultValue:null,description:"",name:"draggable",required:!1,type:{name:"Booleanish"}},hidden:{defaultValue:null,description:"",name:"hidden",required:!1,type:{name:"boolean"}},lang:{defaultValue:null,description:"",name:"lang",required:!1,type:{name:"string"}},nonce:{defaultValue:null,description:"",name:"nonce",required:!1,type:{name:"string"}},slot:{defaultValue:null,description:"",name:"slot",required:!1,type:{name:"string"}},spellCheck:{defaultValue:null,description:"",name:"spellCheck",required:!1,type:{name:"Booleanish"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:'"yes" | "no"'}},radioGroup:{defaultValue:null,description:"",name:"radioGroup",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"AriaRole"}},about:{defaultValue:null,description:"",name:"about",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"",name:"content",required:!1,type:{name:"string"}},datatype:{defaultValue:null,description:"",name:"datatype",required:!1,type:{name:"string"}},inlist:{defaultValue:null,description:"",name:"inlist",required:!1,type:{name:"any"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!1,type:{name:"string"}},property:{defaultValue:null,description:"",name:"property",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"",name:"rel",required:!1,type:{name:"string"}},resource:{defaultValue:null,description:"",name:"resource",required:!1,type:{name:"string"}},rev:{defaultValue:null,description:"",name:"rev",required:!1,type:{name:"string"}},typeof:{defaultValue:null,description:"",name:"typeof",required:!1,type:{name:"string"}},vocab:{defaultValue:null,description:"",name:"vocab",required:!1,type:{name:"string"}},autoCapitalize:{defaultValue:null,description:"",name:"autoCapitalize",required:!1,type:{name:"string"}},autoCorrect:{defaultValue:null,description:"",name:"autoCorrect",required:!1,type:{name:"string"}},autoSave:{defaultValue:null,description:"",name:"autoSave",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},itemProp:{defaultValue:null,description:"",name:"itemProp",required:!1,type:{name:"string"}},itemScope:{defaultValue:null,description:"",name:"itemScope",required:!1,type:{name:"boolean"}},itemType:{defaultValue:null,description:"",name:"itemType",required:!1,type:{name:"string"}},itemID:{defaultValue:null,description:"",name:"itemID",required:!1,type:{name:"string"}},itemRef:{defaultValue:null,description:"",name:"itemRef",required:!1,type:{name:"string"}},results:{defaultValue:null,description:"",name:"results",required:!1,type:{name:"number"}},security:{defaultValue:null,description:"",name:"security",required:!1,type:{name:"string"}},unselectable:{defaultValue:null,description:"",name:"unselectable",required:!1,type:{name:'"on" | "off"'}},inputMode:{defaultValue:null,description:"Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute",name:"inputMode",required:!1,type:{name:'"none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal"'}},is:{defaultValue:null,description:"Specify that a standard HTML element should behave like a defined custom built-in element\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is",name:"is",required:!1,type:{name:"string"}},"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:"Booleanish"}},"aria-autocomplete":{defaultValue:null,description:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",name:"aria-autocomplete",required:!1,type:{name:'"list" | "none" | "inline" | "both"'}},"aria-braillelabel":{defaultValue:null,description:"Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",name:"aria-braillelabel",required:!1,type:{name:"string"}},"aria-brailleroledescription":{defaultValue:null,description:"Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",name:"aria-brailleroledescription",required:!1,type:{name:"string"}},"aria-busy":{defaultValue:null,description:"",name:"aria-busy",required:!1,type:{name:"Booleanish"}},"aria-checked":{defaultValue:null,description:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',name:"aria-checked",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-colcount":{defaultValue:null,description:"Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",name:"aria-colindextext",required:!1,type:{name:"string"}},"aria-colspan":{defaultValue:null,description:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "true" | "false" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.\n@see aria-labelledby",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-description":{defaultValue:null,description:"Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",name:"aria-description",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",name:"aria-disabled",required:!1,type:{name:"Booleanish"}},"aria-dropeffect":{defaultValue:null,description:"Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",name:"aria-dropeffect",required:!1,type:{name:'"link" | "none" | "copy" | "execute" | "move" | "popup"'}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:"Booleanish"}},"aria-flowto":{defaultValue:null,description:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',name:"aria-grabbed",required:!1,type:{name:"Booleanish"}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "true" | "false" | "dialog" | "grid" | "listbox" | "menu" | "tree"'}},"aria-hidden":{defaultValue:null,description:"Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-invalid":{defaultValue:null,description:"Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",name:"aria-invalid",required:!1,type:{name:'boolean | "true" | "false" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.\n@see aria-labelledby.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:'"off" | "assertive" | "polite"'}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:"Booleanish"}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:"Booleanish"}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:"Booleanish"}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:'"horizontal" | "vertical"'}},"aria-owns":{defaultValue:null,description:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-readonly":{defaultValue:null,description:"Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",name:"aria-readonly",required:!1,type:{name:"Booleanish"}},"aria-relevant":{defaultValue:null,description:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",name:"aria-relevant",required:!1,type:{name:'"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:"Booleanish"}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:"Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",name:"aria-rowindextext",required:!1,type:{name:"string"}},"aria-rowspan":{defaultValue:null,description:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',name:"aria-selected",required:!1,type:{name:"Booleanish"}},"aria-setsize":{defaultValue:null,description:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:'"none" | "ascending" | "descending" | "other"'}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:"Defines the current value for a range widget.\n@see aria-valuetext.",name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},dangerouslySetInnerHTML:{defaultValue:null,description:"",name:"dangerouslySetInnerHTML",required:!1,type:{name:"{ __html: string | TrustedHTML; }"}},onCopy:{defaultValue:null,description:"",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCopyCapture:{defaultValue:null,description:"",name:"onCopyCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCut:{defaultValue:null,description:"",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCutCapture:{defaultValue:null,description:"",name:"onCutCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onPaste:{defaultValue:null,description:"",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onPasteCapture:{defaultValue:null,description:"",name:"onPasteCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCompositionEnd:{defaultValue:null,description:"",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionEndCapture:{defaultValue:null,description:"",name:"onCompositionEndCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionStart:{defaultValue:null,description:"",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionStartCapture:{defaultValue:null,description:"",name:"onCompositionStartCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionUpdate:{defaultValue:null,description:"",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionUpdateCapture:{defaultValue:null,description:"",name:"onCompositionUpdateCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onFocusCapture:{defaultValue:null,description:"",name:"onFocusCapture",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onBlurCapture:{defaultValue:null,description:"",name:"onBlurCapture",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onChangeCapture:{defaultValue:null,description:"",name:"onChangeCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onBeforeInput:{defaultValue:null,description:"",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onBeforeInputCapture:{defaultValue:null,description:"",name:"onBeforeInputCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInputCapture:{defaultValue:null,description:"",name:"onInputCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onReset:{defaultValue:null,description:"",name:"onReset",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onResetCapture:{defaultValue:null,description:"",name:"onResetCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onSubmitCapture:{defaultValue:null,description:"",name:"onSubmitCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInvalid:{defaultValue:null,description:"",name:"onInvalid",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInvalidCapture:{defaultValue:null,description:"",name:"onInvalidCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadCapture:{defaultValue:null,description:"",name:"onLoadCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onErrorCapture:{defaultValue:null,description:"",name:"onErrorCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyDownCapture:{defaultValue:null,description:"",name:"onKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyPress:{defaultValue:null,description:"@deprecated",name:"onKeyPress",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyPressCapture:{defaultValue:null,description:"@deprecated",name:"onKeyPressCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyUpCapture:{defaultValue:null,description:"",name:"onKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onAbort:{defaultValue:null,description:"",name:"onAbort",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onAbortCapture:{defaultValue:null,description:"",name:"onAbortCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlay:{defaultValue:null,description:"",name:"onCanPlay",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlayCapture:{defaultValue:null,description:"",name:"onCanPlayCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlayThrough:{defaultValue:null,description:"",name:"onCanPlayThrough",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlayThroughCapture:{defaultValue:null,description:"",name:"onCanPlayThroughCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onDurationChange:{defaultValue:null,description:"",name:"onDurationChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onDurationChangeCapture:{defaultValue:null,description:"",name:"onDurationChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEmptied:{defaultValue:null,description:"",name:"onEmptied",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEmptiedCapture:{defaultValue:null,description:"",name:"onEmptiedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEncrypted:{defaultValue:null,description:"",name:"onEncrypted",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEncryptedCapture:{defaultValue:null,description:"",name:"onEncryptedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEnded:{defaultValue:null,description:"",name:"onEnded",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEndedCapture:{defaultValue:null,description:"",name:"onEndedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedData:{defaultValue:null,description:"",name:"onLoadedData",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedDataCapture:{defaultValue:null,description:"",name:"onLoadedDataCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedMetadata:{defaultValue:null,description:"",name:"onLoadedMetadata",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedMetadataCapture:{defaultValue:null,description:"",name:"onLoadedMetadataCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadStart:{defaultValue:null,description:"",name:"onLoadStart",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadStartCapture:{defaultValue:null,description:"",name:"onLoadStartCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPause:{defaultValue:null,description:"",name:"onPause",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPauseCapture:{defaultValue:null,description:"",name:"onPauseCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlay:{defaultValue:null,description:"",name:"onPlay",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlayCapture:{defaultValue:null,description:"",name:"onPlayCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlaying:{defaultValue:null,description:"",name:"onPlaying",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlayingCapture:{defaultValue:null,description:"",name:"onPlayingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onProgress:{defaultValue:null,description:"",name:"onProgress",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onProgressCapture:{defaultValue:null,description:"",name:"onProgressCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onRateChange:{defaultValue:null,description:"",name:"onRateChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onRateChangeCapture:{defaultValue:null,description:"",name:"onRateChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onResizeCapture:{defaultValue:null,description:"",name:"onResizeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeeked:{defaultValue:null,description:"",name:"onSeeked",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeekedCapture:{defaultValue:null,description:"",name:"onSeekedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeeking:{defaultValue:null,description:"",name:"onSeeking",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeekingCapture:{defaultValue:null,description:"",name:"onSeekingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onStalled:{defaultValue:null,description:"",name:"onStalled",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onStalledCapture:{defaultValue:null,description:"",name:"onStalledCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSuspend:{defaultValue:null,description:"",name:"onSuspend",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSuspendCapture:{defaultValue:null,description:"",name:"onSuspendCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onTimeUpdate:{defaultValue:null,description:"",name:"onTimeUpdate",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onTimeUpdateCapture:{defaultValue:null,description:"",name:"onTimeUpdateCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onVolumeChange:{defaultValue:null,description:"",name:"onVolumeChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onVolumeChangeCapture:{defaultValue:null,description:"",name:"onVolumeChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onWaiting:{defaultValue:null,description:"",name:"onWaiting",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onWaitingCapture:{defaultValue:null,description:"",name:"onWaitingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onAuxClick:{defaultValue:null,description:"",name:"onAuxClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onAuxClickCapture:{defaultValue:null,description:"",name:"onAuxClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onClickCapture:{defaultValue:null,description:"",name:"onClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onContextMenuCapture:{defaultValue:null,description:"",name:"onContextMenuCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onDoubleClick:{defaultValue:null,description:"",name:"onDoubleClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onDoubleClickCapture:{defaultValue:null,description:"",name:"onDoubleClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragCapture:{defaultValue:null,description:"",name:"onDragCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEndCapture:{defaultValue:null,description:"",name:"onDragEndCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEnter:{defaultValue:null,description:"",name:"onDragEnter",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEnterCapture:{defaultValue:null,description:"",name:"onDragEnterCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragExit:{defaultValue:null,description:"",name:"onDragExit",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragExitCapture:{defaultValue:null,description:"",name:"onDragExitCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragLeave:{defaultValue:null,description:"",name:"onDragLeave",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragLeaveCapture:{defaultValue:null,description:"",name:"onDragLeaveCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragOver:{defaultValue:null,description:"",name:"onDragOver",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragOverCapture:{defaultValue:null,description:"",name:"onDragOverCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragStartCapture:{defaultValue:null,description:"",name:"onDragStartCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDropCapture:{defaultValue:null,description:"",name:"onDropCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseDownCapture:{defaultValue:null,description:"",name:"onMouseDownCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseMoveCapture:{defaultValue:null,description:"",name:"onMouseMoveCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOutCapture:{defaultValue:null,description:"",name:"onMouseOutCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOverCapture:{defaultValue:null,description:"",name:"onMouseOverCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseUpCapture:{defaultValue:null,description:"",name:"onMouseUpCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSelectCapture:{defaultValue:null,description:"",name:"onSelectCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchCancelCapture:{defaultValue:null,description:"",name:"onTouchCancelCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchMoveCapture:{defaultValue:null,description:"",name:"onTouchMoveCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchStartCapture:{defaultValue:null,description:"",name:"onTouchStartCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onPointerDown:{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerDownCapture:{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerMove:{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerMoveCapture:{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerUp:{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerUpCapture:{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerCancel:{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerCancelCapture:{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerEnter:{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerEnterCapture:{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerLeave:{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerLeaveCapture:{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOver:{defaultValue:null,description:"",name:"onPointerOver",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOverCapture:{defaultValue:null,description:"",name:"onPointerOverCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOut:{defaultValue:null,description:"",name:"onPointerOut",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOutCapture:{defaultValue:null,description:"",name:"onPointerOutCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onGotPointerCapture:{defaultValue:null,description:"",name:"onGotPointerCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onGotPointerCaptureCapture:{defaultValue:null,description:"",name:"onGotPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onLostPointerCapture:{defaultValue:null,description:"",name:"onLostPointerCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onLostPointerCaptureCapture:{defaultValue:null,description:"",name:"onLostPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"UIEventHandler<HTMLDivElement>"}},onScrollCapture:{defaultValue:null,description:"",name:"onScrollCapture",required:!1,type:{name:"UIEventHandler<HTMLDivElement>"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"WheelEventHandler<HTMLDivElement>"}},onWheelCapture:{defaultValue:null,description:"",name:"onWheelCapture",required:!1,type:{name:"WheelEventHandler<HTMLDivElement>"}},onAnimationStart:{defaultValue:null,description:"",name:"onAnimationStart",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationStartCapture:{defaultValue:null,description:"",name:"onAnimationStartCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationEnd:{defaultValue:null,description:"",name:"onAnimationEnd",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationEndCapture:{defaultValue:null,description:"",name:"onAnimationEndCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationIteration:{defaultValue:null,description:"",name:"onAnimationIteration",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationIterationCapture:{defaultValue:null,description:"",name:"onAnimationIterationCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"TransitionEventHandler<HTMLDivElement>"}},onTransitionEndCapture:{defaultValue:null,description:"",name:"onTransitionEndCapture",required:!1,type:{name:"TransitionEventHandler<HTMLDivElement>"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/controls/TableColumnDropdown/TableColumnDropdown.tsx#TableColumnDropdown"]={docgenInfo:TableColumnDropdown.__docgenInfo,name:"TableColumnDropdown",path:"../react/src/components/controls/TableColumnDropdown/TableColumnDropdown.tsx#TableColumnDropdown"})}catch(__react_docgen_typescript_loader_error){}var data=__webpack_require__("../schema/src/data.ts"),columnTypes=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columnTypes.ts"),src_columns=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columns.ts"),primitives=__webpack_require__("../../.yarn/__virtual__/@datashaper-utilities-virtual-bd77110408/1/javascript/utilities/src/primitives.ts"),useDropdownChangeHandler=__webpack_require__("../react/src/hooks/fluent/useDropdownChangeHandler.ts"),useDropdownChangeAllHandler=__webpack_require__("../react/src/hooks/fluent/useDropdownChangeAllHandler.ts"),useTextFieldChangeHandler=__webpack_require__("../react/src/hooks/fluent/useTextFieldChangeHandler.ts"),get=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/get.js"),util=__webpack_require__("../react/src/util.ts");function useStepInputTable(step,workflow,input){const id=input||(0,util.$)(step,types.o.Source);return(0,useWorkflowDataTable.w)(id,workflow)}var AggregateForm_base=__webpack_require__("../react/src/components/verbs/forms/AggregateForm/AggregateForm.base.tsx");const AggregateForm=(0,react.memo)((function Aggregate({step,workflow,input,onChange}){const columns=useColumnNames(useStepInputTable(step,workflow,input));return(0,jsx_runtime.jsx)(AggregateForm_base.e,{columns,step,onChange})}));try{AggregateForm.displayName="AggregateForm",AggregateForm.__docgenInfo={description:"",displayName:"AggregateForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<AggregateArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<AggregateArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/AggregateForm/AggregateForm.tsx#AggregateForm"]={docgenInfo:AggregateForm.__docgenInfo,name:"AggregateForm",path:"../react/src/components/verbs/forms/AggregateForm/AggregateForm.tsx#AggregateForm"})}catch(__react_docgen_typescript_loader_error){}var src=__webpack_require__("../../.yarn/cache/arquero-npm-5.4.0-7652cf4e19-b2cb2e2d9e.zip/node_modules/arquero/src/index.js"),BinForm_base=__webpack_require__("../react/src/components/verbs/forms/BinForm/BinForm.base.tsx");const BinForm=(0,react.memo)((function Bin({step,workflow,input,onChange}){const dataTable=useStepInputTable(step,workflow,input);return(0,react.useEffect)((()=>{if(null!=dataTable&&null!=onChange&&null==step.args.min&&null==step.args.max){const rollup=dataTable.rollup({min:src.op.min(step.args.column),max:src.op.max(step.args.column)});onChange({...step,args:{...step.args,min:rollup.get("min",0),max:rollup.get("max",0)}})}}),[dataTable,onChange,step]),(0,jsx_runtime.jsx)(BinForm_base.i,{step,onChange})}));try{BinForm.displayName="BinForm",BinForm.__docgenInfo={description:"Provides inputs for a binning step.",displayName:"BinForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<BinArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<BinArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/BinForm/BinForm.tsx#BinForm"]={docgenInfo:BinForm.__docgenInfo,name:"BinForm",path:"../react/src/components/verbs/forms/BinForm/BinForm.tsx#BinForm"})}catch(__react_docgen_typescript_loader_error){}var verbs=__webpack_require__("../schema/src/workflow/verbs.ts"),EnumDropdown=__webpack_require__("../../.yarn/__virtual__/@essex-components-virtual-8fb571eb4e/0/cache/@essex-components-npm-4.2.0-90f5c830ba-807e614d13.zip/node_modules/@essex/components/dist/EnumDropdown/EnumDropdown.js"),CalendarPicker=__webpack_require__("../react/src/components/controls/CalendarPicker/CalendarPicker.tsx");const ColumnCriteriaComboBox=(0,react.memo)((function ColumnCriteriaComboBox({options,...props}){const withHeader=(0,react.useMemo)((()=>[{key:"header",text:"Columns",itemType:lib_commonjs.SelectableOptionMenuItemType.Header},...options]),[options]);return(0,jsx_runtime.jsx)(lib_commonjs.ComboBox,{allowFreeform:!1,autoComplete:"on",placeholder:"Column",options:withHeader,styles:styles.si,...props})}));try{ColumnCriteriaComboBox.displayName="ColumnCriteriaComboBox",ColumnCriteriaComboBox.__docgenInfo={description:"ComboBox that allows the user to either input a freeform value or select a column.\nWe frequently have operations where a comparison may be to a fixed value, or should\nbe dependent on per-row column values.",displayName:"ColumnCriteriaComboBox",props:{options:{defaultValue:null,description:"Collection of options for this ComboBox.",name:"options",required:!0,type:{name:"IComboBoxOption[]"}},componentRef:{defaultValue:null,description:"Optional ref to access the `IComboBox` interface. Use this instead of `ref` for accessing\nthe public methods and properties of the component.",name:"componentRef",required:!1,type:{name:"IRefObject<IComboBox>"}},onItemClick:{defaultValue:null,description:"Called when a ComboBox item is clicked.",name:"onItemClick",required:!1,type:{name:"(event: FormEvent<IComboBox>, option?: IComboBoxOption, index?: number) => void"}},onChange:{defaultValue:null,description:"Called when either:\n1) The selected option changes.\n2) A manually edited value is submitted. In this case there may not be a matched option if `allowFreeform`\n   is also true (and hence only `value` would be provided; the other parameters would be unspecified).\n\nThe value passed to the callback (4th paramenter) reflects the changed option's text, or the user-typed input when\nfreeform is allowed.",name:"onChange",required:!1,type:{name:"(event: FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => void"}},onPendingValueChanged:{defaultValue:null,description:"Called when the user changes the pending value in ComboBox, either by typing in the\ninput or hovering over options. When typing, the behavior varies depending on `autoComplete`\nand `allowFreeform` settings.\n\nIn all cases, when the pending value is reset, all parameters will be undefined.\n\nWhen hovering options: `option` and `index` will be provided, and `value` will be undefined.\n\nTyping with `allowFreeform` on: If there's an option matching the input (an exact match if\n`autoComplete` is off, or a prefix match otherwise), `option` and `index` are provided and\n`value` is undefined. Otherwise only `value` is provided.\n\nTyping with `allowFreeform` off (or unspecified): If `autoComplete` is on (or unspecified),\nand the user types text matching the start of an option within a timeout, `option` and `index`\nare provided and `value` is undefined. If `autoComplete` is off, typing does nothing.\n\nIf you simply want to be notified of raw text input, use the prop `onInputValueChange`.",name:"onPendingValueChanged",required:!1,type:{name:"(option?: IComboBoxOption, index?: number, value?: string) => void"}},onInputValueChange:{defaultValue:null,description:"Called when the user types in to the input of the combo box\n\nIdeal if you want to be notified of raw text input",name:"onInputValueChange",required:!1,type:{name:"(text: string) => void"}},onMenuOpen:{defaultValue:null,description:"Called when the ComboBox menu is launched.",name:"onMenuOpen",required:!1,type:{name:"() => void"}},onMenuDismissed:{defaultValue:null,description:"Called when the ComboBox menu is dismissed.",name:"onMenuDismissed",required:!1,type:{name:"() => void"}},onMenuDismiss:{defaultValue:null,description:"Called before the menu gets dismissed.",name:"onMenuDismiss",required:!1,type:{name:"() => void"}},onResolveOptions:{defaultValue:null,description:"Called when the options should be resolved, if they have been updated or\nif they need to be passed in the first time.",name:"onResolveOptions",required:!1,type:{name:"(options: IComboBoxOption[]) => IComboBoxOption[] | PromiseLike<IComboBoxOption[]>"}},onScrollToItem:{defaultValue:null,description:"Called when the ComboBox requests the list to scroll to a specific element.",name:"onScrollToItem",required:!1,type:{name:"(itemIndex: number) => void"}},allowFreeform:{defaultValue:null,description:"Whether the ComboBox allows freeform user input, rather than restricting to the provided options.",name:"allowFreeform",required:!1,type:{name:"boolean"}},allowFreeInput:{defaultValue:null,description:"When true, the Combobox will allow the user to type freely while the Combobox is focused.\nOn Blur, the value will be set to the matching option, or the previous selection if there is no match.\n@defaultvalue false",name:"allowFreeInput",required:!1,type:{name:"boolean"}},autoComplete:{defaultValue:null,description:'Whether the ComboBox auto completes. As the user is entering text, potential matches will be\nsuggested from the list of options. If the ComboBox is expanded, this will also scroll to the\nsuggested option and give it a selected style.\n@defaultvalue "on"',name:"autoComplete",required:!1,type:{name:'"on" | "off"'}},text:{defaultValue:null,description:"Value to show in the input. Does not have to map to an option.",name:"text",required:!1,type:{name:"string"}},multiSelectDelimiter:{defaultValue:null,description:'When multiple items are selected, this will be used to separate values in the ComboBox input.\n@defaultvalue ", "',name:"multiSelectDelimiter",required:!1,type:{name:"string"}},buttonIconProps:{defaultValue:null,description:"The IconProps to use for the caret down (expand) button of the ComboBox.",name:"buttonIconProps",required:!1,type:{name:"IIconProps"}},autofill:{defaultValue:null,description:"Props to pass through to the Autofill component (the input field) inside the ComboBox.\nWARNING: These props (except the callbacks) may override ComboBox's defaults and cause issues.",name:"autofill",required:!1,type:{name:"IAutofillProps"}},theme:{defaultValue:null,description:"Theme provided by HOC.",name:"theme",required:!1,type:{name:"ITheme"}},styles:{defaultValue:null,description:"Custom styles for this component.",name:"styles",required:!1,type:{name:"Partial<IComboBoxStyles>"}},getClassNames:{defaultValue:null,description:"Custom function for providing the classNames for the ComboBox. Can be used to provide\nall styles for the component instead of applying them on top of the default styles.",name:"getClassNames",required:!1,type:{name:"(theme: ITheme, isOpen: boolean, disabled: boolean, required: boolean, focused: boolean, allowFreeForm: boolean, hasErrorMessage: boolean, className?: string) => IComboBoxClassNames"}},caretDownButtonStyles:{defaultValue:null,description:"Styles for the caret down (expand) button.",name:"caretDownButtonStyles",required:!1,type:{name:"Partial<IButtonStyles>"}},comboBoxOptionStyles:{defaultValue:null,description:"Default styles that should be applied to ComboBox options.",name:"comboBoxOptionStyles",required:!1,type:{name:"Partial<IComboBoxOptionStyles>"}},scrollSelectedToTop:{defaultValue:null,description:"If the options list is scrollable, whether to position the selected option at the top of the\ncallout when it is opened (unless it has reached the end of the scrollbar).\n@defaultvalue false;",name:"scrollSelectedToTop",required:!1,type:{name:"boolean"}},onRenderUpperContent:{defaultValue:null,description:"Add additional content above the option list in the callout. Content should not include interactive items.",name:"onRenderUpperContent",required:!1,type:{name:"IRenderFunction<IComboBoxProps>"}},onRenderLowerContent:{defaultValue:null,description:"Add additional content below the option list in the callout. Content should not include interactive items.",name:"onRenderLowerContent",required:!1,type:{name:"IRenderFunction<IComboBoxProps>"}},dropdownWidth:{defaultValue:null,description:"Custom width for options list dropdown. Mutually exclusive with `useComboBoxAsMenuWidth`.",name:"dropdownWidth",required:!1,type:{name:"number"}},useComboBoxAsMenuWidth:{defaultValue:null,description:"Whether to use the ComboBox field width as the menu's width.\nMutually exclusive with `dropdownWidth`.",name:"useComboBoxAsMenuWidth",required:!1,type:{name:"boolean"}},dropdownMaxWidth:{defaultValue:null,description:"Custom max width for the options list dropdown.",name:"dropdownMaxWidth",required:!1,type:{name:"number"}},isButtonAriaHidden:{defaultValue:null,description:"Whether to hide the ComboBox's caret (expand) button element from screen readers. This is false\n(exposed to AT) by default because Android Talkback cannot otherwise expand the combobox.\n@defaultvalue false",name:"isButtonAriaHidden",required:!1,type:{name:"boolean"}},ariaDescribedBy:{defaultValue:null,description:"Optional ID of an element providing a description of the ComboBox for screen reader users.",name:"ariaDescribedBy",required:!1,type:{name:"string"}},persistMenu:{defaultValue:null,description:"Whether to show/hide the menu when it's opened/closed (rather than creating/destroying it).\nThis will improve perf of the menu opening but could potentially have a negative impact on\noverall perf by increasing initial render time (since the ComboBox will render the menu hidden\non mount) and keeping more elements in the DOM. Should only be used when perf to open/close\nthe menu is important.\n\nNote: This may increase the amount of time it takes for the ComboBox itself to mount.",name:"persistMenu",required:!1,type:{name:"boolean"}},shouldRestoreFocus:{defaultValue:null,description:"Whether the options list callout should restore focus after being dismissed. Set to false to\nprevent the menu from trying to re-focus the element that had focus before the menu was opened.\n@defaultvalue true;",name:"shouldRestoreFocus",required:!1,type:{name:"boolean"}},iconButtonProps:{defaultValue:null,description:"Additional props for the caret down (expand) button.",name:"iconButtonProps",required:!1,type:{name:"IButtonProps"}},onRenderLabel:{defaultValue:null,description:"Custom render function for the label text.",name:"onRenderLabel",required:!1,type:{name:"IRenderFunction<IOnRenderComboBoxLabelProps>"}},label:{defaultValue:null,description:"Descriptive label for the field",name:"label",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"Aria Label for the field for screen reader users.",name:"ariaLabel",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID of the field",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Additional class name for the root element.",name:"className",required:!1,type:{name:"string"}},defaultSelectedKey:{defaultValue:null,description:"The key(s) that will be initially used to set a selected item.\n\nMutually exclusive with `selectedKey`.\nFor Dropdown (but not ComboBox) in multi-select mode, use `defaultSelectedKeys` instead.",name:"defaultSelectedKey",required:!1,type:{name:"string | number | string[] | number[]"}},selectedKey:{defaultValue:null,description:"The key(s) of the selected item. If you provide this, you must maintain selection\nstate by observing onChange events and passing a new value in when changed.\nNote that passing in `null` will cause selection to be reset.\n\nMutually exclusive with `defaultSelectedKey`.\nFor Dropdown (but not ComboBox) in multi-select mode, use `selectedKeys` instead.",name:"selectedKey",required:!1,type:{name:"string | number | string[] | number[]"}},multiSelect:{defaultValue:null,description:"Whether multi-choice selections are allowed or not.\n@defaultvalue false",name:"multiSelect",required:!1,type:{name:"boolean"}},onRenderContainer:{defaultValue:null,description:"Optional custom renderer for the option list container",name:"onRenderContainer",required:!1,type:{name:"IRenderFunction<ISelectableDroppableTextProps<IComboBox, IComboBox>>"}},onRenderList:{defaultValue:null,description:"Optional custom renderer for the option list",name:"onRenderList",required:!1,type:{name:"IRenderFunction<ISelectableDroppableTextProps<IComboBox, IComboBox>>"}},onRenderItem:{defaultValue:null,description:"Optional custom renderer for all items, including headers and dividers as well as normal options.",name:"onRenderItem",required:!1,type:{name:"IRenderFunction<ISelectableOption<any>>"}},onRenderOption:{defaultValue:null,description:"Optional custom renderer for normal and header options only.\nUse `onRenderItem` to control rendering for separators as well.",name:"onRenderOption",required:!1,type:{name:"IRenderFunction<ISelectableOption<any>>"}},onDismiss:{defaultValue:null,description:"Callback for when the options list callout is dismissed",name:"onDismiss",required:!1,type:{name:"() => void"}},disabled:{defaultValue:null,description:"Whether or not the field is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"Whether or not the field is required.",name:"required",required:!1,type:{name:"boolean"}},calloutProps:{defaultValue:null,description:"Custom properties for the Callout used to render the option list.",name:"calloutProps",required:!1,type:{name:"ICalloutProps"}},panelProps:{defaultValue:null,description:"Custom properties for the Panel used to render the option list on small devices.",name:"panelProps",required:!1,type:{name:"IPanelProps"}},errorMessage:{defaultValue:null,description:"Error message for the field.",name:"errorMessage",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Input placeholder text. Displayed until option is selected.",name:"placeholder",required:!1,type:{name:"string"}},openOnKeyboardFocus:{defaultValue:null,description:"Whether or not the ComboBox/Dropdown should expand on keyboard focus.\n@defaultvalue false",name:"openOnKeyboardFocus",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | number | readonly string[]"}},suppressContentEditableWarning:{defaultValue:null,description:"",name:"suppressContentEditableWarning",required:!1,type:{name:"boolean"}},suppressHydrationWarning:{defaultValue:null,description:"",name:"suppressHydrationWarning",required:!1,type:{name:"boolean"}},accessKey:{defaultValue:null,description:"",name:"accessKey",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},contentEditable:{defaultValue:null,description:"",name:"contentEditable",required:!1,type:{name:'Booleanish | "inherit"'}},contextMenu:{defaultValue:null,description:"",name:"contextMenu",required:!1,type:{name:"string"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},draggable:{defaultValue:null,description:"",name:"draggable",required:!1,type:{name:"Booleanish"}},hidden:{defaultValue:null,description:"",name:"hidden",required:!1,type:{name:"boolean"}},lang:{defaultValue:null,description:"",name:"lang",required:!1,type:{name:"string"}},nonce:{defaultValue:null,description:"",name:"nonce",required:!1,type:{name:"string"}},slot:{defaultValue:null,description:"",name:"slot",required:!1,type:{name:"string"}},spellCheck:{defaultValue:null,description:"",name:"spellCheck",required:!1,type:{name:"Booleanish"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:'"yes" | "no"'}},radioGroup:{defaultValue:null,description:"",name:"radioGroup",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"AriaRole"}},about:{defaultValue:null,description:"",name:"about",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"",name:"content",required:!1,type:{name:"string"}},datatype:{defaultValue:null,description:"",name:"datatype",required:!1,type:{name:"string"}},inlist:{defaultValue:null,description:"",name:"inlist",required:!1,type:{name:"any"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!1,type:{name:"string"}},property:{defaultValue:null,description:"",name:"property",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"",name:"rel",required:!1,type:{name:"string"}},resource:{defaultValue:null,description:"",name:"resource",required:!1,type:{name:"string"}},rev:{defaultValue:null,description:"",name:"rev",required:!1,type:{name:"string"}},typeof:{defaultValue:null,description:"",name:"typeof",required:!1,type:{name:"string"}},vocab:{defaultValue:null,description:"",name:"vocab",required:!1,type:{name:"string"}},autoCapitalize:{defaultValue:null,description:"",name:"autoCapitalize",required:!1,type:{name:"string"}},autoCorrect:{defaultValue:null,description:"",name:"autoCorrect",required:!1,type:{name:"string"}},autoSave:{defaultValue:null,description:"",name:"autoSave",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},itemProp:{defaultValue:null,description:"",name:"itemProp",required:!1,type:{name:"string"}},itemScope:{defaultValue:null,description:"",name:"itemScope",required:!1,type:{name:"boolean"}},itemType:{defaultValue:null,description:"",name:"itemType",required:!1,type:{name:"string"}},itemID:{defaultValue:null,description:"",name:"itemID",required:!1,type:{name:"string"}},itemRef:{defaultValue:null,description:"",name:"itemRef",required:!1,type:{name:"string"}},results:{defaultValue:null,description:"",name:"results",required:!1,type:{name:"number"}},security:{defaultValue:null,description:"",name:"security",required:!1,type:{name:"string"}},unselectable:{defaultValue:null,description:"",name:"unselectable",required:!1,type:{name:'"on" | "off"'}},inputMode:{defaultValue:null,description:"Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute",name:"inputMode",required:!1,type:{name:'"none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal"'}},is:{defaultValue:null,description:"Specify that a standard HTML element should behave like a defined custom built-in element\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is",name:"is",required:!1,type:{name:"string"}},"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:"Booleanish"}},"aria-autocomplete":{defaultValue:null,description:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",name:"aria-autocomplete",required:!1,type:{name:'"list" | "none" | "inline" | "both"'}},"aria-braillelabel":{defaultValue:null,description:"Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",name:"aria-braillelabel",required:!1,type:{name:"string"}},"aria-brailleroledescription":{defaultValue:null,description:"Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",name:"aria-brailleroledescription",required:!1,type:{name:"string"}},"aria-busy":{defaultValue:null,description:"",name:"aria-busy",required:!1,type:{name:"Booleanish"}},"aria-checked":{defaultValue:null,description:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',name:"aria-checked",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-colcount":{defaultValue:null,description:"Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",name:"aria-colindextext",required:!1,type:{name:"string"}},"aria-colspan":{defaultValue:null,description:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "true" | "false" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.\n@see aria-labelledby",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-description":{defaultValue:null,description:"Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",name:"aria-description",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",name:"aria-disabled",required:!1,type:{name:"Booleanish"}},"aria-dropeffect":{defaultValue:null,description:"Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",name:"aria-dropeffect",required:!1,type:{name:'"link" | "none" | "copy" | "execute" | "move" | "popup"'}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:"Booleanish"}},"aria-flowto":{defaultValue:null,description:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',name:"aria-grabbed",required:!1,type:{name:"Booleanish"}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "true" | "false" | "dialog" | "grid" | "listbox" | "menu" | "tree"'}},"aria-hidden":{defaultValue:null,description:"Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-invalid":{defaultValue:null,description:"Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",name:"aria-invalid",required:!1,type:{name:'boolean | "true" | "false" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.\n@see aria-labelledby.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:'"off" | "assertive" | "polite"'}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:"Booleanish"}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:"Booleanish"}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:"Booleanish"}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:'"horizontal" | "vertical"'}},"aria-owns":{defaultValue:null,description:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-readonly":{defaultValue:null,description:"Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",name:"aria-readonly",required:!1,type:{name:"Booleanish"}},"aria-relevant":{defaultValue:null,description:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",name:"aria-relevant",required:!1,type:{name:'"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:"Booleanish"}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:"Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",name:"aria-rowindextext",required:!1,type:{name:"string"}},"aria-rowspan":{defaultValue:null,description:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',name:"aria-selected",required:!1,type:{name:"Booleanish"}},"aria-setsize":{defaultValue:null,description:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:'"none" | "ascending" | "descending" | "other"'}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:"Defines the current value for a range widget.\n@see aria-valuetext.",name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},dangerouslySetInnerHTML:{defaultValue:null,description:"",name:"dangerouslySetInnerHTML",required:!1,type:{name:"{ __html: string | TrustedHTML; }"}},onCopy:{defaultValue:null,description:"",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<IComboBox>"}},onCopyCapture:{defaultValue:null,description:"",name:"onCopyCapture",required:!1,type:{name:"ClipboardEventHandler<IComboBox>"}},onCut:{defaultValue:null,description:"",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<IComboBox>"}},onCutCapture:{defaultValue:null,description:"",name:"onCutCapture",required:!1,type:{name:"ClipboardEventHandler<IComboBox>"}},onPaste:{defaultValue:null,description:"",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<IComboBox>"}},onPasteCapture:{defaultValue:null,description:"",name:"onPasteCapture",required:!1,type:{name:"ClipboardEventHandler<IComboBox>"}},onCompositionEnd:{defaultValue:null,description:"",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<IComboBox>"}},onCompositionEndCapture:{defaultValue:null,description:"",name:"onCompositionEndCapture",required:!1,type:{name:"CompositionEventHandler<IComboBox>"}},onCompositionStart:{defaultValue:null,description:"",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<IComboBox>"}},onCompositionStartCapture:{defaultValue:null,description:"",name:"onCompositionStartCapture",required:!1,type:{name:"CompositionEventHandler<IComboBox>"}},onCompositionUpdate:{defaultValue:null,description:"",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<IComboBox>"}},onCompositionUpdateCapture:{defaultValue:null,description:"",name:"onCompositionUpdateCapture",required:!1,type:{name:"CompositionEventHandler<IComboBox>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"FocusEventHandler<IComboBox>"}},onFocusCapture:{defaultValue:null,description:"",name:"onFocusCapture",required:!1,type:{name:"FocusEventHandler<IComboBox>"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<IComboBox>"}},onBlurCapture:{defaultValue:null,description:"",name:"onBlurCapture",required:!1,type:{name:"FocusEventHandler<IComboBox>"}},onChangeCapture:{defaultValue:null,description:"",name:"onChangeCapture",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onBeforeInput:{defaultValue:null,description:"",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onBeforeInputCapture:{defaultValue:null,description:"",name:"onBeforeInputCapture",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onInputCapture:{defaultValue:null,description:"",name:"onInputCapture",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onReset:{defaultValue:null,description:"",name:"onReset",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onResetCapture:{defaultValue:null,description:"",name:"onResetCapture",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onSubmitCapture:{defaultValue:null,description:"",name:"onSubmitCapture",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onInvalid:{defaultValue:null,description:"",name:"onInvalid",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onInvalidCapture:{defaultValue:null,description:"",name:"onInvalidCapture",required:!1,type:{name:"FormEventHandler<IComboBox>"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onLoadCapture:{defaultValue:null,description:"",name:"onLoadCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onErrorCapture:{defaultValue:null,description:"",name:"onErrorCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"KeyboardEventHandler<IComboBox>"}},onKeyDownCapture:{defaultValue:null,description:"",name:"onKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<IComboBox>"}},onKeyPress:{defaultValue:null,description:"@deprecated",name:"onKeyPress",required:!1,type:{name:"KeyboardEventHandler<IComboBox>"}},onKeyPressCapture:{defaultValue:null,description:"@deprecated",name:"onKeyPressCapture",required:!1,type:{name:"KeyboardEventHandler<IComboBox>"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"KeyboardEventHandler<IComboBox>"}},onKeyUpCapture:{defaultValue:null,description:"",name:"onKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<IComboBox>"}},onAbort:{defaultValue:null,description:"",name:"onAbort",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onAbortCapture:{defaultValue:null,description:"",name:"onAbortCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onCanPlay:{defaultValue:null,description:"",name:"onCanPlay",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onCanPlayCapture:{defaultValue:null,description:"",name:"onCanPlayCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onCanPlayThrough:{defaultValue:null,description:"",name:"onCanPlayThrough",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onCanPlayThroughCapture:{defaultValue:null,description:"",name:"onCanPlayThroughCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onDurationChange:{defaultValue:null,description:"",name:"onDurationChange",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onDurationChangeCapture:{defaultValue:null,description:"",name:"onDurationChangeCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onEmptied:{defaultValue:null,description:"",name:"onEmptied",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onEmptiedCapture:{defaultValue:null,description:"",name:"onEmptiedCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onEncrypted:{defaultValue:null,description:"",name:"onEncrypted",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onEncryptedCapture:{defaultValue:null,description:"",name:"onEncryptedCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onEnded:{defaultValue:null,description:"",name:"onEnded",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onEndedCapture:{defaultValue:null,description:"",name:"onEndedCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onLoadedData:{defaultValue:null,description:"",name:"onLoadedData",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onLoadedDataCapture:{defaultValue:null,description:"",name:"onLoadedDataCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onLoadedMetadata:{defaultValue:null,description:"",name:"onLoadedMetadata",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onLoadedMetadataCapture:{defaultValue:null,description:"",name:"onLoadedMetadataCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onLoadStart:{defaultValue:null,description:"",name:"onLoadStart",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onLoadStartCapture:{defaultValue:null,description:"",name:"onLoadStartCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onPause:{defaultValue:null,description:"",name:"onPause",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onPauseCapture:{defaultValue:null,description:"",name:"onPauseCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onPlay:{defaultValue:null,description:"",name:"onPlay",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onPlayCapture:{defaultValue:null,description:"",name:"onPlayCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onPlaying:{defaultValue:null,description:"",name:"onPlaying",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onPlayingCapture:{defaultValue:null,description:"",name:"onPlayingCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onProgress:{defaultValue:null,description:"",name:"onProgress",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onProgressCapture:{defaultValue:null,description:"",name:"onProgressCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onRateChange:{defaultValue:null,description:"",name:"onRateChange",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onRateChangeCapture:{defaultValue:null,description:"",name:"onRateChangeCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onResizeCapture:{defaultValue:null,description:"",name:"onResizeCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onSeeked:{defaultValue:null,description:"",name:"onSeeked",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onSeekedCapture:{defaultValue:null,description:"",name:"onSeekedCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onSeeking:{defaultValue:null,description:"",name:"onSeeking",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onSeekingCapture:{defaultValue:null,description:"",name:"onSeekingCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onStalled:{defaultValue:null,description:"",name:"onStalled",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onStalledCapture:{defaultValue:null,description:"",name:"onStalledCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onSuspend:{defaultValue:null,description:"",name:"onSuspend",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onSuspendCapture:{defaultValue:null,description:"",name:"onSuspendCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onTimeUpdate:{defaultValue:null,description:"",name:"onTimeUpdate",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onTimeUpdateCapture:{defaultValue:null,description:"",name:"onTimeUpdateCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onVolumeChange:{defaultValue:null,description:"",name:"onVolumeChange",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onVolumeChangeCapture:{defaultValue:null,description:"",name:"onVolumeChangeCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onWaiting:{defaultValue:null,description:"",name:"onWaiting",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onWaitingCapture:{defaultValue:null,description:"",name:"onWaitingCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onAuxClick:{defaultValue:null,description:"",name:"onAuxClick",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onAuxClickCapture:{defaultValue:null,description:"",name:"onAuxClickCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onClickCapture:{defaultValue:null,description:"",name:"onClickCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onContextMenuCapture:{defaultValue:null,description:"",name:"onContextMenuCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onDoubleClick:{defaultValue:null,description:"",name:"onDoubleClick",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onDoubleClickCapture:{defaultValue:null,description:"",name:"onDoubleClickCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragCapture:{defaultValue:null,description:"",name:"onDragCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragEndCapture:{defaultValue:null,description:"",name:"onDragEndCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragEnter:{defaultValue:null,description:"",name:"onDragEnter",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragEnterCapture:{defaultValue:null,description:"",name:"onDragEnterCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragExit:{defaultValue:null,description:"",name:"onDragExit",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragExitCapture:{defaultValue:null,description:"",name:"onDragExitCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragLeave:{defaultValue:null,description:"",name:"onDragLeave",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragLeaveCapture:{defaultValue:null,description:"",name:"onDragLeaveCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragOver:{defaultValue:null,description:"",name:"onDragOver",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragOverCapture:{defaultValue:null,description:"",name:"onDragOverCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDragStartCapture:{defaultValue:null,description:"",name:"onDragStartCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onDropCapture:{defaultValue:null,description:"",name:"onDropCapture",required:!1,type:{name:"DragEventHandler<IComboBox>"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseDownCapture:{defaultValue:null,description:"",name:"onMouseDownCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseMoveCapture:{defaultValue:null,description:"",name:"onMouseMoveCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseOutCapture:{defaultValue:null,description:"",name:"onMouseOutCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseOverCapture:{defaultValue:null,description:"",name:"onMouseOverCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onMouseUpCapture:{defaultValue:null,description:"",name:"onMouseUpCapture",required:!1,type:{name:"MouseEventHandler<IComboBox>"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onSelectCapture:{defaultValue:null,description:"",name:"onSelectCapture",required:!1,type:{name:"ReactEventHandler<IComboBox>"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onTouchCancelCapture:{defaultValue:null,description:"",name:"onTouchCancelCapture",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onTouchMoveCapture:{defaultValue:null,description:"",name:"onTouchMoveCapture",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onTouchStartCapture:{defaultValue:null,description:"",name:"onTouchStartCapture",required:!1,type:{name:"TouchEventHandler<IComboBox>"}},onPointerDown:{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerDownCapture:{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerMove:{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerMoveCapture:{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerUp:{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerUpCapture:{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerCancel:{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerCancelCapture:{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerEnter:{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerEnterCapture:{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerLeave:{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerLeaveCapture:{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerOver:{defaultValue:null,description:"",name:"onPointerOver",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerOverCapture:{defaultValue:null,description:"",name:"onPointerOverCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerOut:{defaultValue:null,description:"",name:"onPointerOut",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onPointerOutCapture:{defaultValue:null,description:"",name:"onPointerOutCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onGotPointerCapture:{defaultValue:null,description:"",name:"onGotPointerCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onGotPointerCaptureCapture:{defaultValue:null,description:"",name:"onGotPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onLostPointerCapture:{defaultValue:null,description:"",name:"onLostPointerCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onLostPointerCaptureCapture:{defaultValue:null,description:"",name:"onLostPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<IComboBox>"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"UIEventHandler<IComboBox>"}},onScrollCapture:{defaultValue:null,description:"",name:"onScrollCapture",required:!1,type:{name:"UIEventHandler<IComboBox>"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"WheelEventHandler<IComboBox>"}},onWheelCapture:{defaultValue:null,description:"",name:"onWheelCapture",required:!1,type:{name:"WheelEventHandler<IComboBox>"}},onAnimationStart:{defaultValue:null,description:"",name:"onAnimationStart",required:!1,type:{name:"AnimationEventHandler<IComboBox>"}},onAnimationStartCapture:{defaultValue:null,description:"",name:"onAnimationStartCapture",required:!1,type:{name:"AnimationEventHandler<IComboBox>"}},onAnimationEnd:{defaultValue:null,description:"",name:"onAnimationEnd",required:!1,type:{name:"AnimationEventHandler<IComboBox>"}},onAnimationEndCapture:{defaultValue:null,description:"",name:"onAnimationEndCapture",required:!1,type:{name:"AnimationEventHandler<IComboBox>"}},onAnimationIteration:{defaultValue:null,description:"",name:"onAnimationIteration",required:!1,type:{name:"AnimationEventHandler<IComboBox>"}},onAnimationIterationCapture:{defaultValue:null,description:"",name:"onAnimationIterationCapture",required:!1,type:{name:"AnimationEventHandler<IComboBox>"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"TransitionEventHandler<IComboBox>"}},onTransitionEndCapture:{defaultValue:null,description:"",name:"onTransitionEndCapture",required:!1,type:{name:"TransitionEventHandler<IComboBox>"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/controls/ColumnCriteriaComboBox/ColumnCriteriaComboBox.tsx#ColumnCriteriaComboBox"]={docgenInfo:ColumnCriteriaComboBox.__docgenInfo,name:"ColumnCriteriaComboBox",path:"../react/src/components/controls/ColumnCriteriaComboBox/ColumnCriteriaComboBox.tsx#ColumnCriteriaComboBox"})}catch(__react_docgen_typescript_loader_error){}var forms_styles=__webpack_require__("../react/src/components/verbs/forms/styles.ts");function useIsEmpty(criterion){return(0,react.useMemo)((()=>{const{operator}=criterion;return operator===verbs.ZB.IsEmpty||operator===verbs.ZB.IsNotEmpty||operator===verbs.NQ.IsEmpty||operator===verbs.NQ.IsNotEmpty||operator===verbs.rA.IsTrue||operator===verbs.rA.IsFalse||operator===verbs.rA.IsEmpty||operator===verbs.rA.IsNotEmpty||operator===verbs.v_.IsEmpty||operator===verbs.v_.IsNotEmpty}),[criterion])}function usePlaceholderText(type){return useMemo((()=>{switch(type){case DataType.String:return"text or column";case DataType.Number:return"number or column";case DataType.Boolean:return"boolean or column"}}),[type])}try{useIsEmpty.displayName="useIsEmpty",useIsEmpty.__docgenInfo={description:"",displayName:"useIsEmpty",props:{value:{defaultValue:null,description:"Comparison value for the column.\nNot required if the operator is self-defining (e.g., 'is empty')",name:"value",required:!1,type:{name:"any"}},type:{defaultValue:null,description:"Indicates whether the filter should be directly against a value,\nor against the value of another column",name:"type",required:!0,type:{name:"FilterCompareType"}},operator:{defaultValue:null,description:"Filter operator to execute. Note the correct operator for the column data type must be used.",name:"operator",required:!0,type:{name:"NumericComparisonOperator | StringComparisonOperator | BooleanComparisonOperator | DateComparisonOperator"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/shared/FilterFunction.hooks.tsx#useIsEmpty"]={docgenInfo:useIsEmpty.__docgenInfo,name:"useIsEmpty",path:"../react/src/components/verbs/forms/shared/FilterFunction.hooks.tsx#useIsEmpty"})}catch(__react_docgen_typescript_loader_error){}try{usePlaceholderText.displayName="usePlaceholderText",usePlaceholderText.__docgenInfo={description:"",displayName:"usePlaceholderText",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:"Returns a string that contains the concatenation of two or more strings.\n@param strings The strings to append to the end of the string.",name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nPasses a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string or regular expression to search for.\n@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a `RegExp`, all matches are replaced if the `g` flag is set (or only those matches at the beginning, if the `y` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue An object that supports searching for and replacing matches within a string.\n@param replaceValue The replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@deprecated A legacy feature for browser compatibility\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the color attribute value\n@deprecated A legacy feature for browser compatibility",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the size attribute value\n@deprecated A legacy feature for browser compatibility\n@deprecated A legacy feature for browser compatibility",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:"Matches a string with a regular expression, and returns an iterable of matches\ncontaining the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.",name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:"Replace all instances of a substring in a string, using a regular expression or search string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.",name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:"Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n@param index The zero-based index of the desired code unit. A negative index will count back from the last item.",name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@26":{defaultValue:null,description:"Iterator",name:"__@iterator@26",required:!0,type:{name:"() => IterableIterator<string>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/shared/FilterFunction.hooks.tsx#usePlaceholderText"]={docgenInfo:usePlaceholderText.__docgenInfo,name:"usePlaceholderText",path:"../react/src/components/verbs/forms/shared/FilterFunction.hooks.tsx#usePlaceholderText"})}catch(__react_docgen_typescript_loader_error){}var dist=__webpack_require__("../../.yarn/__virtual__/@essex-styled-components-virtual-7a9a1c8fa5/0/cache/@essex-styled-components-npm-0.0.13-b74877a32a-1397d77a45.zip/node_modules/@essex/styled-components/dist/index.js");const Container=dist.Z.div`
	display: flex;
	flex-direction: column;
`,TextValue=(0,dist.Z)(lib_commonjs.TextField)`
	display: inline;
	width: 135px;
`,OrLabel=(0,dist.Z)(lib_commonjs.Label)`
	display: inline;
	font-style: italic;
	padding-left: 10px;
	padding-right: 10px;
	border-left: 1px solid ${({theme})=>theme.palette.neutralTertiaryAlt};
`,FilterContainer=dist.Z.div`
	margin-top: 8px;
	margin-left: 16px;
`,BooleanToggle=(0,dist.Z)(lib_commonjs.Toggle)`
	margin-top: 5px;
`,InputLabel=dist.Z.div`
	width: 68px;
`,Input=dist.Z.div`
	display: flex;
	flex-direction: row;
	align-items: center;
`,FilterFunction=(0,react.memo)((function FilterFunction({table,column,criterion,onChange}){const handleOpChange=(0,react.useCallback)(((_e,opt)=>{onChange?.({...criterion,operator:opt?.key})}),[criterion,onChange]),onSelectDate=(0,react.useCallback)((date=>{const update={...criterion,type:verbs.X$.Value,value:date};onChange?.(update),setCleanLabel(!1)}),[criterion,onChange]),handleDateComboBoxChange=(0,react.useCallback)(((_e,option,_index,value)=>{const update={...criterion,type:verbs.X$.Column,value:option?option.key:value};onChange?.(update),setCleanLabel(!0)}),[criterion,onChange]),handleComboBoxChange=(0,react.useCallback)(((_e,option,_index,value)=>{const update={...criterion,type:verbs.X$.Column,value:option?option.key:value};onChange?.(update)}),[criterion,onChange]),onChangeTextFieldValue=(0,react.useCallback)(((_event,newValue)=>{const update={...criterion,type:verbs.X$.Value,value:newValue};onChange?.(update)}),[criterion,onChange]),spinButtonOnChange=(0,react.useCallback)(((_event,newValue)=>{if(null!=newValue){const update={...criterion,type:verbs.X$.Value,value:newValue};onChange?.(update)}}),[criterion,onChange]),{type,columnFilter}=function useColumnTyping(table,column){const tps=(0,react.useMemo)((()=>table?(0,columnTypes.H)(table):{}),[table]),type=(0,react.useMemo)((()=>tps[column]),[tps,column]),columnFilter=(0,react.useMemo)((()=>name=>tps[name]===type),[tps,type]);return{type,columnFilter}}(table,column),[cleanLabel,setCleanLabel]=(0,react.useState)(!1),operatorDropdown=(0,react.useMemo)((()=>{const shared={label:"",placeholder:"Choose",selectedKey:criterion.operator,onChange:handleOpChange,styles:styles.Rj};if(column){if(type===data.g.String)return(0,jsx_runtime.jsx)(EnumDropdown.Y,{enumeration:verbs.NQ,...shared});if(type===data.g.Boolean)return(0,jsx_runtime.jsx)(EnumDropdown.Y,{enumeration:verbs.rA,...shared});if(type===data.g.Date)return(0,jsx_runtime.jsx)(EnumDropdown.Y,{enumeration:verbs.v_,...shared})}return(0,jsx_runtime.jsx)(EnumDropdown.Y,{enumeration:verbs.ZB,...shared,labels:{"=":"=","!=":"!=","<":"<","<=":"<=",">":">",">=":">="}})}),[type,column,criterion,handleOpChange]),isEmpty=useIsEmpty(criterion),handleDeleteClick=(0,react.useCallback)((()=>onChange?.()),[onChange]),columns=useColumnNames(table,columnFilter),columnOptions=(0,useSimpleDropdownOptions.U)(columns);return(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsxs)(forms_styles.BZ,{children:[operatorDropdown,(0,jsx_runtime.jsx)(lib_commonjs.IconButton,{title:"Remove this criterion",iconProps:deleteIconProps,onClick:handleDeleteClick})]}),(0,jsx_runtime.jsxs)(FilterContainer,{children:[(0,jsx_runtime.jsxs)(Input,{children:[(0,jsx_runtime.jsx)(InputLabel,{children:"value"}),type===data.g.Date?(0,jsx_runtime.jsx)(CalendarPicker.h,{onSelectDate,disabled:isEmpty,cleanLabel}):null,type===data.g.String?(0,jsx_runtime.jsx)(TextValue,{value:criterion.value,onChange:onChangeTextFieldValue,disabled:isEmpty}):null,type===data.g.Number?(0,jsx_runtime.jsx)(lib_commonjs.SpinButton,{min:0,step:1,value:criterion.value,styles:styles.si,disabled:isEmpty,onChange:spinButtonOnChange}):null,type===data.g.Boolean?(0,jsx_runtime.jsx)(BooleanToggle,{defaultChecked:!0,onText:"True",offText:"False",onChange:(_ev,checked)=>{const update={...criterion,type:verbs.X$.Value,value:checked};onChange?.(update)},disabled:isEmpty}):null]}),(0,jsx_runtime.jsx)(OrLabel,{children:"or"}),(0,jsx_runtime.jsxs)(Input,{children:[(0,jsx_runtime.jsx)(InputLabel,{children:"column"}),type===data.g.Date?(0,jsx_runtime.jsx)(ColumnCriteriaComboBox,{options:columnOptions,onChange:handleDateComboBoxChange,disabled:isEmpty}):(0,jsx_runtime.jsx)(ColumnCriteriaComboBox,{options:columnOptions,onChange:handleComboBoxChange,disabled:isEmpty})]})]}),type===data.g.String?(0,jsx_runtime.jsx)(forms_styles.bZ,{children:"String comparisons are not case-sensitive"}):null]})})),deleteIconProps={iconName:"Delete"};try{FilterFunction.displayName="FilterFunction",FilterFunction.__docgenInfo={description:"Just the comparison logic/ops for a filter.\nInput table and source column is expected to be edited elsewhere and configured as the step input.\nThis is split out from FilterInputs to allow just the comparison logic to be reused elsewhere.",displayName:"FilterFunction",props:{table:{defaultValue:null,description:"",name:"table",required:!0,type:{name:"ColumnTable"}},column:{defaultValue:null,description:"",name:"column",required:!0,type:{name:"string"}},criterion:{defaultValue:null,description:"",name:"criterion",required:!0,type:{name:"Criterion"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(filter?: Criterion) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/shared/FilterFunction.tsx#FilterFunction"]={docgenInfo:FilterFunction.__docgenInfo,name:"FilterFunction",path:"../react/src/components/verbs/forms/shared/FilterFunction.tsx#FilterFunction"})}catch(__react_docgen_typescript_loader_error){}const FilterForm_styles_Container=dist.Z.div`
	display: flex;
	flex-direction: column;
	align-items: flex-start;
`,Criteria=dist.Z.div`
	display: flex;
	flex-direction: column;
	gap: 20px;
`,Vertical=dist.Z.div`
	display: flex;
	flex-direction: column;
	gap: 8px;
`,FilterForm=(0,react.memo)((function FilterForm({step,workflow,input,onChange}){const dataTable=useStepInputTable(step,workflow,input),handleButtonClick=(0,react.useCallback)((()=>{onChange?.({...step,args:{...step.args,criteria:[...step.args.criteria||empty.LZ,{}]}})}),[step,onChange]),handleFilterChange=(0,react.useCallback)(((criterion,index)=>{const criteria=[...step.args.criteria];null==criterion?criteria.splice(index,1):criteria[index]=criterion,onChange?.({...step,args:{...step.args,criteria}})}),[step,onChange]),handleLogicalChange=(0,useDropdownChangeHandler.u)(step,((s,val)=>{s.args.logical=val}),onChange),filters=function useFilters(table,column,criteria,onChange){if(!table)return null;return criteria.map(((criterion,index)=>{const handleChange=f=>onChange(f,index);return(0,jsx_runtime.jsx)(Vertical,{children:(0,jsx_runtime.jsx)(FilterFunction,{table,column,criterion,onChange:handleChange})},`filter-function-${index}`)}))}(dataTable,step.args.column,step.args.criteria,handleFilterChange);return(0,jsx_runtime.jsxs)(FilterForm_styles_Container,{children:[(0,jsx_runtime.jsx)(lib_commonjs.Label,{children:"Function"}),(0,jsx_runtime.jsx)(Criteria,{children:filters}),(0,jsx_runtime.jsx)(lib_commonjs.ActionButton,{onClick:handleButtonClick,iconProps:addIconProps,disabled:!dataTable,children:"Add criteria"}),step.args.criteria.length>1?(0,jsx_runtime.jsx)(forms_styles.BZ,{children:(0,jsx_runtime.jsx)(EnumDropdown.Y,{label:"Logical combination",placeholder:"Choose boolean",enumeration:verbs._W,labels:{or:"OR",and:"AND",nor:"NOR",nand:"NAND",xor:"XOR"},selectedKey:step.args.logical,onChange:handleLogicalChange})}):null]})}));const addIconProps={iconName:"Add"};try{FilterForm.displayName="FilterForm",FilterForm.__docgenInfo={description:"Provides inputs for a Filter step.",displayName:"FilterForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<FilterArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<FilterArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/FilterForm/FilterForm.tsx#FilterForm"]={docgenInfo:FilterForm.__docgenInfo,name:"FilterForm",path:"../react/src/components/verbs/forms/FilterForm/FilterForm.tsx#FilterForm"})}catch(__react_docgen_typescript_loader_error){}const BinarizeFormBase=(0,react.memo)((function BinarizeFormBase(props){return(0,jsx_runtime.jsx)(FilterForm,{...props})}));try{BinarizeFormBase.displayName="BinarizeFormBase",BinarizeFormBase.__docgenInfo={description:"Provides inputs for a Binarize step.",displayName:"BinarizeFormBase",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<unknown>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/BinarizeForm/BinarizeForm.base.tsx#BinarizeFormBase"]={docgenInfo:BinarizeFormBase.__docgenInfo,name:"BinarizeFormBase",path:"../react/src/components/verbs/forms/BinarizeForm/BinarizeForm.base.tsx#BinarizeFormBase"})}catch(__react_docgen_typescript_loader_error){}var factories=__webpack_require__("../react/src/components/verbs/forms/forms/factories.ts"),VerbForm=__webpack_require__("../react/src/components/verbs/forms/forms/VerbForm.tsx");const BooleanLogicFormBase=(0,react.memo)((function BooleanLogicFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[(0,factories.ih)("Logical operator",verbs._W,step.args.operator,((s,opt)=>{s.args.operator=opt}),{required:!0,placeholder:"Choose boolean"},{or:"OR",and:"AND",nor:"NOR",nand:"NAND",xor:"XOR",xnor:"XNOR"})]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{step,onChange,inputs})}));try{BooleanLogicFormBase.displayName="BooleanLogicFormBase",BooleanLogicFormBase.__docgenInfo={description:"Inputs to combine column using boolean logic.",displayName:"BooleanLogicFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<BooleanArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<BooleanArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/BooleanLogicForm/BooleanLogicForm.base.tsx#BooleanLogicFormBase"]={docgenInfo:BooleanLogicFormBase.__docgenInfo,name:"BooleanLogicFormBase",path:"../react/src/components/verbs/forms/BooleanLogicForm/BooleanLogicForm.base.tsx#BooleanLogicFormBase"})}catch(__react_docgen_typescript_loader_error){}const BooleanLogicForm=(0,react.memo)((function BooleanLogicForm({step,onChange}){return(0,jsx_runtime.jsx)(BooleanLogicFormBase,{step,onChange})}));try{BooleanLogicForm.displayName="BooleanLogicForm",BooleanLogicForm.__docgenInfo={description:"Inputs to combine column using boolean logic.",displayName:"BooleanLogicForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<BooleanArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<BooleanArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/BooleanLogicForm/BooleanLogicForm.tsx#BooleanLogicForm"]={docgenInfo:BooleanLogicForm.__docgenInfo,name:"BooleanLogicForm",path:"../react/src/components/verbs/forms/BooleanLogicForm/BooleanLogicForm.tsx#BooleanLogicForm"})}catch(__react_docgen_typescript_loader_error){}var observable_hooks_dist=__webpack_require__("../../.yarn/__virtual__/observable-hooks-virtual-a9893ed7ca/0/cache/observable-hooks-npm-4.2.3-58c1824e2e-b36c22f51e.zip/node_modules/observable-hooks/dist/index.mjs"),from=__webpack_require__("../../.yarn/cache/rxjs-npm-7.8.1-41c443a75b-b10cac1a52.zip/node_modules/rxjs/dist/esm5/internal/observable/from.js");function useWorkflowInput(workflow){const observable=(0,react.useMemo)((()=>workflow?.input$??(0,from.D)([])),[workflow]);return(0,observable_hooks_dist.pw)(observable)}function useTableDropdownOptions(workflow,filter){const inputNames=function useWorkflowInputTableNames(workflow){const observable=(0,react.useMemo)((()=>workflow?.inputNames$??(0,from.D)([])),[workflow]);return(0,observable_hooks_dist.pw)(observable,(()=>[]))}(workflow);return(0,react.useMemo)((()=>{let combined=inputNames;workflow&&(combined=combined.concat(workflow.outputNames)),filter&&(combined=combined.filter(filter));return(0,useSimpleDropdownOptions.i)(combined)}),[inputNames,workflow,filter])}const TableDropdown=(0,react.memo)((function TableDropdown({options,...props}){return(0,jsx_runtime.jsx)(lib_commonjs.Dropdown,{label:"Table",placeholder:"Choose table",options,styles:styles.Rj,...props})}));try{TableDropdown.displayName="TableDropdown",TableDropdown.__docgenInfo={description:"Dropdown wrapper to automatically list the tables in a TableStore.",displayName:"TableDropdown",props:{options:{defaultValue:null,description:"Options for the dropdown. If using `defaultSelectedKey` or `defaultSelectedKeys`, options must be\npure for correct behavior.",name:"options",required:!0,type:{name:"IDropdownOption<any>[]"}},placeHolder:{defaultValue:null,description:"Input placeholder text. Displayed until option is selected.\n@deprecated Use `placeholder`",name:"placeHolder",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback issued when the selected option changes.",name:"onChange",required:!1,type:{name:"(event: FormEvent<HTMLDivElement>, option?: IDropdownOption<any>, index?: number) => void"}},onChanged:{defaultValue:null,description:"@deprecated Use `onChange` instead.",name:"onChanged",required:!1,type:{name:"(option: IDropdownOption<any>, index?: number) => void"}},onRenderLabel:{defaultValue:null,description:"Custom render function for the label.",name:"onRenderLabel",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},onRenderPlaceholder:{defaultValue:null,description:"Optional custom renderer for placeholder text",name:"onRenderPlaceholder",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},onRenderPlaceHolder:{defaultValue:null,description:"Optional custom renderer for placeholder text\n@deprecated Use `onRenderPlaceholder`",name:"onRenderPlaceHolder",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},onRenderTitle:{defaultValue:null,description:"Optional custom renderer for selected option displayed in input",name:"onRenderTitle",required:!1,type:{name:"IRenderFunction<IDropdownOption<any>[]>"}},onRenderCaretDown:{defaultValue:null,description:"Optional custom renderer for chevron icon",name:"onRenderCaretDown",required:!1,type:{name:"IRenderFunction<IDropdownProps>"}},dropdownWidth:{defaultValue:null,description:"Custom width for dropdown. If value is 0, width of the input field is used.\nIf value is 'auto', width of the input field is used by default, and it can grow wider to fit the content.\n@defaultvalue 0",name:"dropdownWidth",required:!1,type:{name:'number | "auto"'}},responsiveMode:{defaultValue:null,description:"Pass in ResponsiveMode to manually overwrite the way the Dropdown renders.\nResponsiveMode.large would, for instance, disable the behavior where Dropdown options\nget rendered into a Panel while ResponsiveMode.small would result in the Dropdown\noptions always getting rendered in a Panel.",name:"responsiveMode",required:!1,type:{name:"ResponsiveMode"}},defaultSelectedKeys:{defaultValue:null,description:"Keys that will be initially used to set selected items. This prop is used for `multiSelect`\nscenarios. In other cases, `defaultSelectedKey` should be used.",name:"defaultSelectedKeys",required:!1,type:{name:"string[] | number[]"}},selectedKeys:{defaultValue:null,description:"Keys of the selected items. If you provide this, you must maintain selection\nstate by observing onChange events and passing a new value in when changed.\nPassing null in will clear the selection.\nMutually exclusive with `defaultSelectedKeys`.",name:"selectedKeys",required:!1,type:{name:"string[] | number[]"}},multiSelectDelimiter:{defaultValue:null,description:'When multiple items are selected, this still will be used to separate values in\nthe dropdown title.\n@defaultvalue ", "',name:"multiSelectDelimiter",required:!1,type:{name:"string"}},notifyOnReselect:{defaultValue:null,description:"Optional preference to have onChanged still be called when an already selected item is\nclicked in single select mode.  Default to false",name:"notifyOnReselect",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"@deprecated Use `disabled` instead. Deprecated at v0.52.0.",name:"isDisabled",required:!1,type:{name:"boolean"}},theme:{defaultValue:null,description:"Theme provided by higher order component.",name:"theme",required:!1,type:{name:"ITheme"}},styles:{defaultValue:null,description:"Call to provide customized styling that will layer on top of the variant rules.",name:"styles",required:!1,type:{name:"IStyleFunctionOrObject<IDropdownStyleProps, IDropdownStyles>"}},componentRef:{defaultValue:null,description:"Optional callback to access the component interface (usually `IDropdown` or `IComboBox`).\nUse this instead of `ref` for accessing the public methods and properties of the component.",name:"componentRef",required:!1,type:{name:"IRefObject<IDropdown>"}},label:{defaultValue:null,description:"Descriptive label for the field",name:"label",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"Aria Label for the field for screen reader users.",name:"ariaLabel",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID of the field",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Additional class name for the root element.",name:"className",required:!1,type:{name:"string"}},defaultSelectedKey:{defaultValue:null,description:"The key(s) that will be initially used to set a selected item.\n\nMutually exclusive with `selectedKey`.\nFor Dropdown (but not ComboBox) in multi-select mode, use `defaultSelectedKeys` instead.",name:"defaultSelectedKey",required:!1,type:{name:"string | number | string[] | number[]"}},selectedKey:{defaultValue:null,description:"The key(s) of the selected item. If you provide this, you must maintain selection\nstate by observing onChange events and passing a new value in when changed.\nNote that passing in `null` will cause selection to be reset.\n\nMutually exclusive with `defaultSelectedKey`.\nFor Dropdown (but not ComboBox) in multi-select mode, use `selectedKeys` instead.",name:"selectedKey",required:!1,type:{name:"string | number | string[] | number[]"}},multiSelect:{defaultValue:null,description:"Whether multi-choice selections are allowed or not.\n@defaultvalue false",name:"multiSelect",required:!1,type:{name:"boolean"}},onRenderContainer:{defaultValue:null,description:"Optional custom renderer for the option list container",name:"onRenderContainer",required:!1,type:{name:"IRenderFunction<ISelectableDroppableTextProps<IDropdown, HTMLDivElement>>"}},onRenderList:{defaultValue:null,description:"Optional custom renderer for the option list",name:"onRenderList",required:!1,type:{name:"IRenderFunction<ISelectableDroppableTextProps<IDropdown, HTMLDivElement>>"}},onRenderItem:{defaultValue:null,description:"Optional custom renderer for all items, including headers and dividers as well as normal options.",name:"onRenderItem",required:!1,type:{name:"IRenderFunction<ISelectableOption<any>>"}},onRenderOption:{defaultValue:null,description:"Optional custom renderer for normal and header options only.\nUse `onRenderItem` to control rendering for separators as well.",name:"onRenderOption",required:!1,type:{name:"IRenderFunction<ISelectableOption<any>>"}},onDismiss:{defaultValue:null,description:"Callback for when the options list callout is dismissed",name:"onDismiss",required:!1,type:{name:"() => void"}},disabled:{defaultValue:null,description:"Whether or not the field is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"Whether or not the field is required.",name:"required",required:!1,type:{name:"boolean"}},calloutProps:{defaultValue:null,description:"Custom properties for the Callout used to render the option list.",name:"calloutProps",required:!1,type:{name:"ICalloutProps"}},panelProps:{defaultValue:null,description:"Custom properties for the Panel used to render the option list on small devices.",name:"panelProps",required:!1,type:{name:"IPanelProps"}},errorMessage:{defaultValue:null,description:"Error message for the field.",name:"errorMessage",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Input placeholder text. Displayed until option is selected.",name:"placeholder",required:!1,type:{name:"string"}},openOnKeyboardFocus:{defaultValue:null,description:"Whether or not the ComboBox/Dropdown should expand on keyboard focus.\n@defaultvalue false",name:"openOnKeyboardFocus",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | number | readonly string[]"}},suppressContentEditableWarning:{defaultValue:null,description:"",name:"suppressContentEditableWarning",required:!1,type:{name:"boolean"}},suppressHydrationWarning:{defaultValue:null,description:"",name:"suppressHydrationWarning",required:!1,type:{name:"boolean"}},accessKey:{defaultValue:null,description:"",name:"accessKey",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},contentEditable:{defaultValue:null,description:"",name:"contentEditable",required:!1,type:{name:'Booleanish | "inherit"'}},contextMenu:{defaultValue:null,description:"",name:"contextMenu",required:!1,type:{name:"string"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},draggable:{defaultValue:null,description:"",name:"draggable",required:!1,type:{name:"Booleanish"}},hidden:{defaultValue:null,description:"",name:"hidden",required:!1,type:{name:"boolean"}},lang:{defaultValue:null,description:"",name:"lang",required:!1,type:{name:"string"}},nonce:{defaultValue:null,description:"",name:"nonce",required:!1,type:{name:"string"}},slot:{defaultValue:null,description:"",name:"slot",required:!1,type:{name:"string"}},spellCheck:{defaultValue:null,description:"",name:"spellCheck",required:!1,type:{name:"Booleanish"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:'"yes" | "no"'}},radioGroup:{defaultValue:null,description:"",name:"radioGroup",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"AriaRole"}},about:{defaultValue:null,description:"",name:"about",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"",name:"content",required:!1,type:{name:"string"}},datatype:{defaultValue:null,description:"",name:"datatype",required:!1,type:{name:"string"}},inlist:{defaultValue:null,description:"",name:"inlist",required:!1,type:{name:"any"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!1,type:{name:"string"}},property:{defaultValue:null,description:"",name:"property",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"",name:"rel",required:!1,type:{name:"string"}},resource:{defaultValue:null,description:"",name:"resource",required:!1,type:{name:"string"}},rev:{defaultValue:null,description:"",name:"rev",required:!1,type:{name:"string"}},typeof:{defaultValue:null,description:"",name:"typeof",required:!1,type:{name:"string"}},vocab:{defaultValue:null,description:"",name:"vocab",required:!1,type:{name:"string"}},autoCapitalize:{defaultValue:null,description:"",name:"autoCapitalize",required:!1,type:{name:"string"}},autoCorrect:{defaultValue:null,description:"",name:"autoCorrect",required:!1,type:{name:"string"}},autoSave:{defaultValue:null,description:"",name:"autoSave",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},itemProp:{defaultValue:null,description:"",name:"itemProp",required:!1,type:{name:"string"}},itemScope:{defaultValue:null,description:"",name:"itemScope",required:!1,type:{name:"boolean"}},itemType:{defaultValue:null,description:"",name:"itemType",required:!1,type:{name:"string"}},itemID:{defaultValue:null,description:"",name:"itemID",required:!1,type:{name:"string"}},itemRef:{defaultValue:null,description:"",name:"itemRef",required:!1,type:{name:"string"}},results:{defaultValue:null,description:"",name:"results",required:!1,type:{name:"number"}},security:{defaultValue:null,description:"",name:"security",required:!1,type:{name:"string"}},unselectable:{defaultValue:null,description:"",name:"unselectable",required:!1,type:{name:'"on" | "off"'}},inputMode:{defaultValue:null,description:"Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute",name:"inputMode",required:!1,type:{name:'"none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal"'}},is:{defaultValue:null,description:"Specify that a standard HTML element should behave like a defined custom built-in element\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is",name:"is",required:!1,type:{name:"string"}},"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:"Booleanish"}},"aria-autocomplete":{defaultValue:null,description:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",name:"aria-autocomplete",required:!1,type:{name:'"list" | "none" | "inline" | "both"'}},"aria-braillelabel":{defaultValue:null,description:"Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",name:"aria-braillelabel",required:!1,type:{name:"string"}},"aria-brailleroledescription":{defaultValue:null,description:"Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",name:"aria-brailleroledescription",required:!1,type:{name:"string"}},"aria-busy":{defaultValue:null,description:"",name:"aria-busy",required:!1,type:{name:"Booleanish"}},"aria-checked":{defaultValue:null,description:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',name:"aria-checked",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-colcount":{defaultValue:null,description:"Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",name:"aria-colindextext",required:!1,type:{name:"string"}},"aria-colspan":{defaultValue:null,description:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "true" | "false" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.\n@see aria-labelledby",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-description":{defaultValue:null,description:"Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",name:"aria-description",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",name:"aria-disabled",required:!1,type:{name:"Booleanish"}},"aria-dropeffect":{defaultValue:null,description:"Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",name:"aria-dropeffect",required:!1,type:{name:'"link" | "none" | "copy" | "execute" | "move" | "popup"'}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:"Booleanish"}},"aria-flowto":{defaultValue:null,description:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',name:"aria-grabbed",required:!1,type:{name:"Booleanish"}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "true" | "false" | "dialog" | "grid" | "listbox" | "menu" | "tree"'}},"aria-hidden":{defaultValue:null,description:"Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-invalid":{defaultValue:null,description:"Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",name:"aria-invalid",required:!1,type:{name:'boolean | "true" | "false" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.\n@see aria-labelledby.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:'"off" | "assertive" | "polite"'}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:"Booleanish"}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:"Booleanish"}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:"Booleanish"}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:'"horizontal" | "vertical"'}},"aria-owns":{defaultValue:null,description:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-readonly":{defaultValue:null,description:"Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",name:"aria-readonly",required:!1,type:{name:"Booleanish"}},"aria-relevant":{defaultValue:null,description:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",name:"aria-relevant",required:!1,type:{name:'"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:"Booleanish"}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:"Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",name:"aria-rowindextext",required:!1,type:{name:"string"}},"aria-rowspan":{defaultValue:null,description:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',name:"aria-selected",required:!1,type:{name:"Booleanish"}},"aria-setsize":{defaultValue:null,description:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:'"none" | "ascending" | "descending" | "other"'}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:"Defines the current value for a range widget.\n@see aria-valuetext.",name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},dangerouslySetInnerHTML:{defaultValue:null,description:"",name:"dangerouslySetInnerHTML",required:!1,type:{name:"{ __html: string | TrustedHTML; }"}},onCopy:{defaultValue:null,description:"",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCopyCapture:{defaultValue:null,description:"",name:"onCopyCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCut:{defaultValue:null,description:"",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCutCapture:{defaultValue:null,description:"",name:"onCutCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onPaste:{defaultValue:null,description:"",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onPasteCapture:{defaultValue:null,description:"",name:"onPasteCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement>"}},onCompositionEnd:{defaultValue:null,description:"",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionEndCapture:{defaultValue:null,description:"",name:"onCompositionEndCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionStart:{defaultValue:null,description:"",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionStartCapture:{defaultValue:null,description:"",name:"onCompositionStartCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionUpdate:{defaultValue:null,description:"",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onCompositionUpdateCapture:{defaultValue:null,description:"",name:"onCompositionUpdateCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onFocusCapture:{defaultValue:null,description:"",name:"onFocusCapture",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onBlurCapture:{defaultValue:null,description:"",name:"onBlurCapture",required:!1,type:{name:"FocusEventHandler<HTMLDivElement>"}},onChangeCapture:{defaultValue:null,description:"",name:"onChangeCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onBeforeInput:{defaultValue:null,description:"",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onBeforeInputCapture:{defaultValue:null,description:"",name:"onBeforeInputCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInputCapture:{defaultValue:null,description:"",name:"onInputCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onReset:{defaultValue:null,description:"",name:"onReset",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onResetCapture:{defaultValue:null,description:"",name:"onResetCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onSubmitCapture:{defaultValue:null,description:"",name:"onSubmitCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInvalid:{defaultValue:null,description:"",name:"onInvalid",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onInvalidCapture:{defaultValue:null,description:"",name:"onInvalidCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement>"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadCapture:{defaultValue:null,description:"",name:"onLoadCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onErrorCapture:{defaultValue:null,description:"",name:"onErrorCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyDownCapture:{defaultValue:null,description:"",name:"onKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyPress:{defaultValue:null,description:"@deprecated",name:"onKeyPress",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyPressCapture:{defaultValue:null,description:"@deprecated",name:"onKeyPressCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onKeyUpCapture:{defaultValue:null,description:"",name:"onKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onAbort:{defaultValue:null,description:"",name:"onAbort",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onAbortCapture:{defaultValue:null,description:"",name:"onAbortCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlay:{defaultValue:null,description:"",name:"onCanPlay",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlayCapture:{defaultValue:null,description:"",name:"onCanPlayCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlayThrough:{defaultValue:null,description:"",name:"onCanPlayThrough",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onCanPlayThroughCapture:{defaultValue:null,description:"",name:"onCanPlayThroughCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onDurationChange:{defaultValue:null,description:"",name:"onDurationChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onDurationChangeCapture:{defaultValue:null,description:"",name:"onDurationChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEmptied:{defaultValue:null,description:"",name:"onEmptied",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEmptiedCapture:{defaultValue:null,description:"",name:"onEmptiedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEncrypted:{defaultValue:null,description:"",name:"onEncrypted",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEncryptedCapture:{defaultValue:null,description:"",name:"onEncryptedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEnded:{defaultValue:null,description:"",name:"onEnded",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onEndedCapture:{defaultValue:null,description:"",name:"onEndedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedData:{defaultValue:null,description:"",name:"onLoadedData",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedDataCapture:{defaultValue:null,description:"",name:"onLoadedDataCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedMetadata:{defaultValue:null,description:"",name:"onLoadedMetadata",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadedMetadataCapture:{defaultValue:null,description:"",name:"onLoadedMetadataCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadStart:{defaultValue:null,description:"",name:"onLoadStart",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onLoadStartCapture:{defaultValue:null,description:"",name:"onLoadStartCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPause:{defaultValue:null,description:"",name:"onPause",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPauseCapture:{defaultValue:null,description:"",name:"onPauseCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlay:{defaultValue:null,description:"",name:"onPlay",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlayCapture:{defaultValue:null,description:"",name:"onPlayCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlaying:{defaultValue:null,description:"",name:"onPlaying",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onPlayingCapture:{defaultValue:null,description:"",name:"onPlayingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onProgress:{defaultValue:null,description:"",name:"onProgress",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onProgressCapture:{defaultValue:null,description:"",name:"onProgressCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onRateChange:{defaultValue:null,description:"",name:"onRateChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onRateChangeCapture:{defaultValue:null,description:"",name:"onRateChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onResizeCapture:{defaultValue:null,description:"",name:"onResizeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeeked:{defaultValue:null,description:"",name:"onSeeked",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeekedCapture:{defaultValue:null,description:"",name:"onSeekedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeeking:{defaultValue:null,description:"",name:"onSeeking",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSeekingCapture:{defaultValue:null,description:"",name:"onSeekingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onStalled:{defaultValue:null,description:"",name:"onStalled",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onStalledCapture:{defaultValue:null,description:"",name:"onStalledCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSuspend:{defaultValue:null,description:"",name:"onSuspend",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSuspendCapture:{defaultValue:null,description:"",name:"onSuspendCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onTimeUpdate:{defaultValue:null,description:"",name:"onTimeUpdate",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onTimeUpdateCapture:{defaultValue:null,description:"",name:"onTimeUpdateCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onVolumeChange:{defaultValue:null,description:"",name:"onVolumeChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onVolumeChangeCapture:{defaultValue:null,description:"",name:"onVolumeChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onWaiting:{defaultValue:null,description:"",name:"onWaiting",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onWaitingCapture:{defaultValue:null,description:"",name:"onWaitingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onAuxClick:{defaultValue:null,description:"",name:"onAuxClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onAuxClickCapture:{defaultValue:null,description:"",name:"onAuxClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onClickCapture:{defaultValue:null,description:"",name:"onClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onContextMenuCapture:{defaultValue:null,description:"",name:"onContextMenuCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onDoubleClick:{defaultValue:null,description:"",name:"onDoubleClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onDoubleClickCapture:{defaultValue:null,description:"",name:"onDoubleClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragCapture:{defaultValue:null,description:"",name:"onDragCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEndCapture:{defaultValue:null,description:"",name:"onDragEndCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEnter:{defaultValue:null,description:"",name:"onDragEnter",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragEnterCapture:{defaultValue:null,description:"",name:"onDragEnterCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragExit:{defaultValue:null,description:"",name:"onDragExit",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragExitCapture:{defaultValue:null,description:"",name:"onDragExitCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragLeave:{defaultValue:null,description:"",name:"onDragLeave",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragLeaveCapture:{defaultValue:null,description:"",name:"onDragLeaveCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragOver:{defaultValue:null,description:"",name:"onDragOver",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragOverCapture:{defaultValue:null,description:"",name:"onDragOverCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDragStartCapture:{defaultValue:null,description:"",name:"onDragStartCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onDropCapture:{defaultValue:null,description:"",name:"onDropCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement>"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseDownCapture:{defaultValue:null,description:"",name:"onMouseDownCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseMoveCapture:{defaultValue:null,description:"",name:"onMouseMoveCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOutCapture:{defaultValue:null,description:"",name:"onMouseOutCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseOverCapture:{defaultValue:null,description:"",name:"onMouseOverCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onMouseUpCapture:{defaultValue:null,description:"",name:"onMouseUpCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement>"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onSelectCapture:{defaultValue:null,description:"",name:"onSelectCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement>"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchCancelCapture:{defaultValue:null,description:"",name:"onTouchCancelCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchMoveCapture:{defaultValue:null,description:"",name:"onTouchMoveCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onTouchStartCapture:{defaultValue:null,description:"",name:"onTouchStartCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement>"}},onPointerDown:{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerDownCapture:{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerMove:{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerMoveCapture:{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerUp:{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerUpCapture:{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerCancel:{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerCancelCapture:{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerEnter:{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerEnterCapture:{defaultValue:null,description:"",name:"onPointerEnterCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerLeave:{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerLeaveCapture:{defaultValue:null,description:"",name:"onPointerLeaveCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOver:{defaultValue:null,description:"",name:"onPointerOver",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOverCapture:{defaultValue:null,description:"",name:"onPointerOverCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOut:{defaultValue:null,description:"",name:"onPointerOut",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onPointerOutCapture:{defaultValue:null,description:"",name:"onPointerOutCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onGotPointerCapture:{defaultValue:null,description:"",name:"onGotPointerCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onGotPointerCaptureCapture:{defaultValue:null,description:"",name:"onGotPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onLostPointerCapture:{defaultValue:null,description:"",name:"onLostPointerCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onLostPointerCaptureCapture:{defaultValue:null,description:"",name:"onLostPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement>"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"UIEventHandler<HTMLDivElement>"}},onScrollCapture:{defaultValue:null,description:"",name:"onScrollCapture",required:!1,type:{name:"UIEventHandler<HTMLDivElement>"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"WheelEventHandler<HTMLDivElement>"}},onWheelCapture:{defaultValue:null,description:"",name:"onWheelCapture",required:!1,type:{name:"WheelEventHandler<HTMLDivElement>"}},onAnimationStart:{defaultValue:null,description:"",name:"onAnimationStart",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationStartCapture:{defaultValue:null,description:"",name:"onAnimationStartCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationEnd:{defaultValue:null,description:"",name:"onAnimationEnd",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationEndCapture:{defaultValue:null,description:"",name:"onAnimationEndCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationIteration:{defaultValue:null,description:"",name:"onAnimationIteration",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onAnimationIterationCapture:{defaultValue:null,description:"",name:"onAnimationIterationCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement>"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"TransitionEventHandler<HTMLDivElement>"}},onTransitionEndCapture:{defaultValue:null,description:"",name:"onTransitionEndCapture",required:!1,type:{name:"TransitionEventHandler<HTMLDivElement>"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/controls/TableDropdown/TableDropdown.tsx#TableDropdown"]={docgenInfo:TableDropdown.__docgenInfo,name:"TableDropdown",path:"../react/src/components/controls/TableDropdown/TableDropdown.tsx#TableDropdown"})}catch(__react_docgen_typescript_loader_error){}const icons={add:{iconName:"Add"},delete:{iconName:"Delete"}},SetOperationForm_styles_Container=dist.Z.div`
	display: flex;
	flex-direction: column;
`,Tables=dist.Z.div`
	display: flex;
	flex-direction: column;
	gap: 5px;
`;const EMPTY=[],SetOperationForm=(0,react.memo)((function SetOperationForm({step,workflow,input,onChange}){const dataTable=useStepInputTable(step,workflow,input),others=function useOthers(step,onChange,workflow){const input=useWorkflowInput(workflow),tableOptions=useTableDropdownOptions(workflow,(name=>name!==input?.id));return(0,react.useEffect)((()=>{if(null!=input&&null!=onChange&&(!step.input.others||0===step.input.others.length)){const first=tableOptions[0];onChange({...step,input:{...step.input,others:[{step:`${first?.key}`||""}]}})}}),[input,onChange,step,tableOptions]),(0,react.useMemo)((()=>workflow?(step.input.others||EMPTY).map(((other,index)=>(0,jsx_runtime.jsxs)(forms_styles.BZ,{children:[(0,jsx_runtime.jsx)(TableDropdown,{label:"",options:tableOptions,selectedKey:other.step,onChange:(_evt,option)=>{const update={...step};option&&(other.step=`${option.key}`),onChange?.(update)}}),(0,jsx_runtime.jsx)(lib_commonjs.IconButton,{title:"Remove this table",iconProps:icons.delete,onClick:()=>{onChange?.({...step,input:{...step.input,others:(step.input.others||EMPTY).filter((o=>o.step!==other.step))}})}})]},`set-op-${other}-${index}`))):[]),[step,workflow,tableOptions,onChange])}(step,onChange,workflow),handleButtonClick=(0,react.useCallback)((()=>{step.input.others||onChange?.({...step,input:{...step.input,others:[...step.input.others||empty.LZ,{step:""}]}})}),[step,onChange]);return(0,jsx_runtime.jsxs)(SetOperationForm_styles_Container,{children:[(0,jsx_runtime.jsx)(lib_commonjs.Label,{children:"With tables"}),(0,jsx_runtime.jsx)(Tables,{children:others}),(0,jsx_runtime.jsx)(lib_commonjs.ActionButton,{onClick:handleButtonClick,iconProps:icons.add,disabled:!dataTable,children:"Add table"})]})}));try{SetOperationForm.displayName="SetOperationForm",SetOperationForm.__docgenInfo={description:"Provides inputs to create a list of tables.\nE.g., for set operations",displayName:"SetOperationForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<unknown>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/SetOperationForm/SetOperationForm.tsx#SetOperationForm"]={docgenInfo:SetOperationForm.__docgenInfo,name:"SetOperationForm",path:"../react/src/components/verbs/forms/SetOperationForm/SetOperationForm.tsx#SetOperationForm"})}catch(__react_docgen_typescript_loader_error){}var enums=__webpack_require__("../react/src/components/verbs/enums.ts"),forms_types=__webpack_require__("../react/src/components/verbs/forms/forms/types.ts");const ConvertFormBase=(0,react.memo)((function ConvertFormBase({step,onChange,fields}){const inputs=(0,react.useMemo)((()=>[{label:"Data type",placeholder:"Choose type",required:!0,type:forms_types.T.SingleChoice,current:step.args.type,options:(0,enums.E)(verbs.rJ),onChange:(s,opt)=>{s.args.type=opt}},{label:"Base (radix)",if:step.args.type===verbs.rJ.Integer,type:forms_types.T.Text,current:step.args.radix?`${step.args.radix}`:"",onChange:(s,opt)=>{s.args.radix=(0,primitives.OK)(opt)}},{label:"Delimiter",if:step.args.type===verbs.rJ.Array||isInputColumnArray(fields,step.args.column),type:forms_types.T.Text,current:step.args.delimiter?`${step.args.delimiter}`:"",onChange:(s,opt)=>{s.args.delimiter=opt}},{label:"Date format pattern",if:step.args.type===verbs.rJ.Date,type:forms_types.T.ComboBox,options:[{key:"%Y-%m-%d",text:"%Y-%m-%d"},{key:"%Y/%m/%d",text:"%Y/%m/%d"},{key:"%B %d, %Y",text:"%B %d, %Y"},{key:"%m-%d-%Y",text:"%m-%d-%Y"},{key:"%m/%d/%Y",text:"%m/%d/%Y"},{key:"%d-%m-%Y",text:"%d-%m-%Y"},{key:"%d/%m/%Y",text:"%d/%m/%Y"},{key:"%Y-%m-%dT%H:%M:%S.%LZ",text:"ISO 8601 (%Y-%m-%dT%H:%M:%S.%LZ)"}],placeholder:"pattern",allowFreeform:!0,current:step.args.formatPattern?`${step.args.formatPattern}`:void 0,onChange:(s,opt,value)=>{s.args.formatPattern=opt||value},onInputValueChange:(s,value)=>{s.args.formatPattern=value||"%Y-%m-%d"}}]),[step,fields]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));function isInputColumnArray(fields,column){return fields.find((f=>f.name===column))?.type===data.g.Array}try{ConvertFormBase.displayName="ConvertFormBase",ConvertFormBase.__docgenInfo={description:"Provides inputs for a Convert step.",displayName:"ConvertFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<ConvertArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<ConvertArgs>"}},fields:{defaultValue:null,description:"",name:"fields",required:!0,type:{name:"Field[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/ConvertForm/ConvertForm.base.tsx#ConvertFormBase"]={docgenInfo:ConvertFormBase.__docgenInfo,name:"ConvertFormBase",path:"../react/src/components/verbs/forms/ConvertForm/ConvertForm.base.tsx#ConvertFormBase"})}catch(__react_docgen_typescript_loader_error){}const ConvertForm=(0,react.memo)((function ConvertForm({step,workflow,input,onChange}){const fields=function useColumnsMetadata(table,filter){return(0,react.useMemo)((()=>(table?.columnNames(filter)||empty.LZ).map((col=>({name:col,type:table&&col?(0,src_columns.lG)(table,col):data.g.Unknown})))),[table,filter])}(useStepInputTable(step,workflow,input));return(0,jsx_runtime.jsx)(ConvertFormBase,{step,onChange,fields})}));try{ConvertForm.displayName="ConvertForm",ConvertForm.__docgenInfo={description:"Provides inputs for a Convert step.",displayName:"ConvertForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<ConvertArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<ConvertArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/ConvertForm/ConvertForm.tsx#ConvertForm"]={docgenInfo:ConvertForm.__docgenInfo,name:"ConvertForm",path:"../react/src/components/verbs/forms/ConvertForm/ConvertForm.tsx#ConvertForm"})}catch(__react_docgen_typescript_loader_error){}var styled_components_browser_cjs=__webpack_require__("../../.yarn/__virtual__/styled-components-virtual-1eea706064/0/cache/styled-components-npm-5.3.11-d45616b9af-7e1baee0f7.zip/node_modules/styled-components/dist/styled-components.browser.cjs.js");const NoParametersFormBase=(0,react.memo)((function NoParametersFormBase(){return(0,jsx_runtime.jsx)(NoParameters_base_Container,{children:"(No additional parameters needed)"})})),NoParameters_base_Container=styled_components_browser_cjs.default.div`
	padding-top: 10px;
	color: ${({theme})=>theme.palette.neutralTertiary};
`;try{NoParametersFormBase.displayName="NoParametersFormBase",NoParametersFormBase.__docgenInfo={description:"Provides inputs for an ungroup step.",displayName:"NoParametersFormBase",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<void>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<void>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/NoParametersForm/NoParameters.base.tsx#NoParametersFormBase"]={docgenInfo:NoParametersFormBase.__docgenInfo,name:"NoParametersFormBase",path:"../react/src/components/verbs/forms/NoParametersForm/NoParameters.base.tsx#NoParametersFormBase"})}catch(__react_docgen_typescript_loader_error){}const DeriveFormBase=(0,react.memo)((function DeriveFormBase({step,onChange,columns}){const options=(0,useSimpleDropdownOptions.U)(columns),inputs=(0,react.useMemo)((()=>[{label:"Column one",placeholder:"Choose column",type:forms_types.T.SingleChoice,current:step.args.column1,required:!0,options,onChange:(s,arg)=>{s.args.column1=arg}},(0,factories.ih)("Operation",verbs.Vr,step.args.operator,((s,arg)=>{s.args.operator=arg}),{required:!0,placeholder:"Choose operation"}),{label:"Column two",placeholder:"Choose column",type:forms_types.T.SingleChoice,options,current:step.args.column2,required:!0,onChange:(s,arg)=>{s.args.column2=arg}}]),[step,options]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{DeriveFormBase.displayName="DeriveFormBase",DeriveFormBase.__docgenInfo={description:"Provides inputs for a Derive step.",displayName:"DeriveFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<DeriveArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<DeriveArgs>"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/DeriveForm/DeriveForm.base.tsx#DeriveFormBase"]={docgenInfo:DeriveFormBase.__docgenInfo,name:"DeriveFormBase",path:"../react/src/components/verbs/forms/DeriveForm/DeriveForm.base.tsx#DeriveFormBase"})}catch(__react_docgen_typescript_loader_error){}const DeriveForm=(0,react.memo)((function DeriveForm({step,workflow,input,onChange}){const columns=useColumnNames(useStepInputTable(step,workflow,input));return(0,jsx_runtime.jsx)(DeriveFormBase,{columns,step,onChange})}));try{DeriveForm.displayName="DeriveForm",DeriveForm.__docgenInfo={description:"Provides inputs for a Binarize step.",displayName:"DeriveForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<DeriveArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<DeriveArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/DeriveForm/DeriveForm.tsx#DeriveForm"]={docgenInfo:DeriveForm.__docgenInfo,name:"DeriveForm",path:"../react/src/components/verbs/forms/DeriveForm/DeriveForm.tsx#DeriveForm"})}catch(__react_docgen_typescript_loader_error){}var EncodeDecodeForm_base=__webpack_require__("../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.base.tsx"),generateCodebook=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/generateCodebook.ts");function useCodebookContent(table){const[codebook,setCodebook]=(0,react.useState)();return(0,react.useEffect)((()=>{table&&(0,generateCodebook.a)(table).then(setCodebook)}),[table]),codebook}try{useCodebookContent.displayName="useCodebookContent",useCodebookContent.__docgenInfo={description:"",displayName:"useCodebookContent",props:{create:{defaultValue:null,description:"Create a new table with the same type as this table.\nThe new table may have different data, filter, grouping, or ordering\nbased on the values of the optional configuration argument. If a\nsetting is not specified, it is inherited from the current table.\n@param options Creation options for the new table.\n@return A newly created table.",name:"create",required:!0,type:{name:"({ data, names, filter, groups, order }?: CreateOptions) => ColumnTable"}},assign:{defaultValue:null,description:"Create a new table with additional columns drawn from one or more input\ntables. All tables must have the same numer of rows and are reified\nprior to assignment. In the case of repeated column names, input table\ncolumns overwrite existing columns.\n@param tables The tables to merge with this table.\n@return A new table with merged columns.\n@example table.assign(table1, table2)",name:"assign",required:!0,type:{name:"(...tables: ColumnTable[]) => ColumnTable"}},columns:{defaultValue:null,description:"Get the backing set of columns for this table.\n@return Object of named column instances.",name:"columns",required:!0,type:{name:"() => ColumnData"}},column:{defaultValue:null,description:"Get the column instance with the given name.\n@param name The column name.\n@return The named column, or undefined if it does not exist.",name:"column",required:!0,type:{name:"(name: string) => ColumnType"}},columnAt:{defaultValue:null,description:"Get the column instance at the given index position.\n@param index The zero-based column index.\n@return The column, or undefined if it does not exist.",name:"columnAt",required:!0,type:{name:"(index: number) => ColumnType"}},array:{defaultValue:null,description:"Get an array of values contained in a column. The resulting array\nrespects any table filter or orderby criteria.\n@param name The column name.\n@param constructor The array constructor for instantiating the output array.\n@return",name:"array",required:!0,type:{name:"(name: string, constructor?: ArrayConstructor | TypedArrayConstructor) => any"}},objects:{defaultValue:null,description:"Returns an array of objects representing table rows.\n@param options The options for row object generation.\n@return An array of row objects.",name:"objects",required:!0,type:{name:"(options?: ObjectsOptions) => object[]"}},reify:{defaultValue:null,description:"Create a new fully-materialized instance of this table.\nAll filter and orderby settings are removed from the new table.\nInstead, the backing data itself is filtered and ordered as needed.\n@param indices Ordered row indices to materialize.\nIf unspecified, all rows passing the table filter are used.\n@return A reified table.",name:"reify",required:!0,type:{name:"(indices?: number[]) => ColumnTable"}},transform:{defaultValue:null,description:"Apply a sequence of transformations to this table. The output\nof each transform is passed as input to the next transform, and\nthe output of the last transform is then returned.\n@param transforms Transformation\nfunctions to apply to the table in sequence. Each function should\ntake a single table as input and return a table as output.\n@return The output of the last transform.",name:"transform",required:!0,type:{name:"(...transforms: (Transform | Transform[])[]) => ColumnTable"}},toArrow:{defaultValue:null,description:"Format this table as an Apache Arrow table.\n@param options The formatting options.\n@return An Apache Arrow table.",name:"toArrow",required:!0,type:{name:"(options?: ArrowFormatOptions) => Table<any>"}},toArrowBuffer:{defaultValue:null,description:"Format this table as binary data in the Apache Arrow IPC format.\n@param options The formatting options. Set {format: 'stream'}\nor {format:\"file\"} for specific IPC format\n@return A new Uint8Array of Arrow-encoded binary data.",name:"toArrowBuffer",required:!0,type:{name:"(options?: ArrowFormatOptions) => Uint8Array"}},toCSV:{defaultValue:null,description:"Format this table as a comma-separated values (CSV) string. Other\ndelimiters, such as tabs or pipes ('|'), can be specified using\nthe options argument.\n@param options The formatting options.\n@return A delimited value string.",name:"toCSV",required:!0,type:{name:"(options?: CSVFormatOptions) => string"}},toHTML:{defaultValue:null,description:"Format this table as an HTML table string.\n@param options The formatting options.\n@return An HTML table string.",name:"toHTML",required:!0,type:{name:"(options?: HTMLFormatOptions) => string"}},toJSON:{defaultValue:null,description:"Format this table as a JavaScript Object Notation (JSON) string.\n@param options The formatting options.\n@return A JSON string.",name:"toJSON",required:!0,type:{name:"(options?: JSONFormatOptions) => string"}},toMarkdown:{defaultValue:null,description:"Format this table as a GitHub-Flavored Markdown table string.\n@param options The formatting options.\n@return A GitHub-Flavored Markdown table string.",name:"toMarkdown",required:!0,type:{name:"(options?: MarkdownFormatOptions) => string"}},_names:{defaultValue:null,description:"",name:"_names",required:!0,type:{name:"readonly string[]"}},_data:{defaultValue:null,description:"",name:"_data",required:!0,type:{name:"any"}},_total:{defaultValue:null,description:"",name:"_total",required:!0,type:{name:"number"}},_nrows:{defaultValue:null,description:"",name:"_nrows",required:!0,type:{name:"number"}},_mask:{defaultValue:null,description:"",name:"_mask",required:!0,type:{name:"BitSet"}},_group:{defaultValue:null,description:"",name:"_group",required:!0,type:{name:"GroupBySpec"}},_order:{defaultValue:null,description:"",name:"_order",required:!0,type:{name:"RowComparator"}},isFiltered:{defaultValue:null,description:"Indicates if the table has a filter applied.\n@return True if filtered, false otherwise.",name:"isFiltered",required:!0,type:{name:"() => boolean"}},isGrouped:{defaultValue:null,description:"Indicates if the table has a groupby specification.\n@return True if grouped, false otherwise.",name:"isGrouped",required:!0,type:{name:"() => boolean"}},isOrdered:{defaultValue:null,description:"Indicates if the table has a row order comparator.\n@return True if ordered, false otherwise.",name:"isOrdered",required:!0,type:{name:"() => boolean"}},data:{defaultValue:null,description:"Returns the internal table storage data structure.\n@return The backing table storage data structure.",name:"data",required:!0,type:{name:"() => TableData"}},mask:{defaultValue:null,description:"Returns the filter bitset mask, if defined.\n@return The filter bitset mask.",name:"mask",required:!0,type:{name:"() => BitSet"}},groups:{defaultValue:null,description:"Returns the groupby specification, if defined.\n@return The groupby specification.",name:"groups",required:!0,type:{name:"() => GroupBySpec"}},comparator:{defaultValue:null,description:"Returns the row order comparator function, if specified.\n@return The row order comparator function.",name:"comparator",required:!0,type:{name:"() => RowComparator"}},totalRows:{defaultValue:null,description:"The total number of rows in this table, counting both\nfiltered and unfiltered rows.\n@return The number of total rows.",name:"totalRows",required:!0,type:{name:"() => number"}},numRows:{defaultValue:null,description:"The number of active rows in this table. This number may be\nless than the total rows if the table has been filtered.\n@see Table.totalRows *\n@return The number of rows.",name:"numRows",required:!0,type:{name:"() => number"}},size:{defaultValue:null,description:"The number of active rows in this table. This number may be\nless than the total rows if the table has been filtered.\n@see Table.totalRows *\n@return The number of rows.",name:"size",required:!0,type:{name:"number"}},numCols:{defaultValue:null,description:"The number of columns in this table.\n@return The number of columns.",name:"numCols",required:!0,type:{name:"() => number"}},columnNames:{defaultValue:null,description:"The table column names, optionally filtered.\n@param filter An optional filter function.\nIf unspecified, all column names are returned.\n@return An array of matching column names.",name:"columnNames",required:!0,type:{name:"(filter?: (name: string, index: number, array: string[]) => boolean) => string[]"}},columnName:{defaultValue:null,description:"The column name at the given index.\n@param index The column index.\n@return The column name,\nor undefined if the index is out of range.",name:"columnName",required:!0,type:{name:"(index: number) => string"}},columnIndex:{defaultValue:null,description:"The column index for the given name.\n@param name The column name.\n@return The column index, or -1 if the name is not found.",name:"columnIndex",required:!0,type:{name:"(name: string) => number"}},columnArray:{defaultValue:null,description:"Deprecated alias for the table array() method: use table.array()\ninstead. Get an array of values contained in a column. The resulting\narray respects any table filter or orderby criteria.\n@param name The column name.\n@param constructor The array constructor for instantiating the output array.\n@return The array of column values.",name:"columnArray",required:!0,type:{name:"(name: string, constructor?: ArrayConstructor | TypedArrayConstructor) => any[] | TypedArray"}},values:{defaultValue:null,description:"Returns an iterator over column values.\n@return An iterator over row objects.",name:"values",required:!0,type:{name:"(name: any) => Iterator<object, any, undefined>"}},get:{defaultValue:null,description:"Get the value for the given column and row.\n@param name The column name.\n@param row The row index, defaults to zero if not specified.\n@return The data value at (column, row).",name:"get",required:!0,type:{name:"(name: string, row?: number) => any"}},getter:{defaultValue:null,description:'Returns an accessor ("getter") function for a column. The returned\nfunction takes a row index as its single argument and returns the\ncorresponding column value.\n@param name The column name.\n@return The column getter function.',name:"getter",required:!0,type:{name:"(name: string) => ColumnGetter"}},object:{defaultValue:null,description:"Returns an object representing a table row.\n@param row The row index, defaults to zero if not specified.\n@return A row object with named properties for each column.",name:"object",required:!0,type:{name:"(row?: number) => object"}},print:{defaultValue:null,description:"Print the contents of this table using the console.table() method.\n@param options The options for row object\ngeneration, determining which rows and columns are printed. If\nnumber-valued, specifies the row limit.\n@return The table instance.",name:"print",required:!0,type:{name:"(options?: number | PrintOptions) => ColumnTable"}},indices:{defaultValue:null,description:"Returns an array of indices for all rows passing the table filter.\n@param order A flag indicating if the returned\nindices should be sorted if this table is ordered. If false, the\nreturned indices may or may not be sorted.\n@return An array of row indices.",name:"indices",required:!0,type:{name:"(order?: boolean) => Uint32Array"}},_index:{defaultValue:null,description:"",name:"_index",required:!0,type:{name:"Uint32Array"}},partitions:{defaultValue:null,description:"Returns an array of indices for each group in the table.\nIf the table is not grouped, the result is the same as\n{@link indices}, but wrapped within an array.\n@param order A flag indicating if the returned\nindices should be sorted if this table is ordered. If false, the\nreturned indices may or may not be sorted.\n@return An array of row index arrays, one per group.\nThe indices will be filtered if the table is filtered.",name:"partitions",required:!0,type:{name:"(order?: boolean) => number[][]"}},_partitions:{defaultValue:null,description:"",name:"_partitions",required:!0,type:{name:"any[]"}},scan:{defaultValue:null,description:"Perform a table scan, visiting each row of the table.\nIf this table is filtered, only rows passing the filter are visited.\n@param fn Callback invoked for each row of the table.\n@param order Indicates if the table should be\nscanned in the order determined by {@link Table#orderby }. This\nargument has no effect if the table is unordered.\n@property {number} [limit=Infinity] The maximum number of objects to create.\n@property {number} [offset=0] The row offset indicating how many initial rows to skip.",name:"scan",required:!0,type:{name:"(fn: (row?: number, data?: TableData, stop?: () => void) => void, order?: boolean, limit?: number, offset?: number) => void"}},slice:{defaultValue:null,description:"Extract rows with indices from start to end (end not included), where\nstart and end represent per-group ordered row numbers in the table.\n@param start Zero-based index at which to start extraction.\nA negative index indicates an offset from the end of the group.\nIf start is undefined, slice starts from the index 0.\n@param end Zero-based index before which to end extraction.\nA negative index indicates an offset from the end of the group.\nIf end is omitted, slice extracts through the end of the group.\n@return A new table with sliced rows.\n@example table.slice(1, -1)",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => ColumnTable"}},reduce:{defaultValue:null,description:"Reduce a table, processing all rows to produce a new table.\nTo produce standard aggregate summaries, use {@link rollup}.\nThis method allows the use of custom reducer implementations,\nfor example to produce multiple rows for an aggregate.\n@param reducer The reducer to apply.\n@return A new table of reducer outputs.",name:"reduce",required:!0,type:{name:"(reducer: Reducer) => Table"}},"__@toStringTag@13212":{defaultValue:null,description:"Provide an informative object string tag.",name:"__@toStringTag@13212",required:!0,type:{name:"string"}},"__@iterator@26":{defaultValue:null,description:"Returns an iterator over objects representing table rows.\n@return An iterator over row objects.",name:"__@iterator@26",required:!0,type:{name:"() => Iterator<object, any, undefined>"}},_params:{defaultValue:null,description:"",name:"_params",required:!0,type:{name:"{ [x: string]: any; }"}},params:{defaultValue:null,description:"Get or set table expression parameter values.\nIf called with no arguments, returns the current parameter values\nas an object. Otherwise, adds the provided parameters to this\ntable's parameter set and returns the table. Any prior parameters\nwith names matching the input parameters are overridden.\n@param values The parameter values.\n@return The current parameters values (if called with\nno arguments) or this table.",name:"params",required:!0,type:{name:"(values?: Params, ...args: any[]) => ColumnTable | Params"}},count:{defaultValue:null,description:"Count the number of values in a group. This method is a shorthand\nfor {@link Transformable#rollup } with a count aggregate function.\n@param options Options for the count.\n@return A new table with groupby and count columns.\n@example table.groupby('colA').count()\n@example table.groupby('colA').count({ as: 'num' })",name:"count",required:!0,type:{name:"(options?: CountOptions) => ColumnTable"}},derive:{defaultValue:null,description:"Derive new column values based on the provided expressions. By default,\nnew columns are added after (higher indices than) existing columns. Use\nthe before or after options to place new columns elsewhere.\n@param values Object of name-value pairs defining the\ncolumns to derive. The input object should have output column\nnames for keys and table expressions for values.\n@param options Options for dropping or relocating\nderived columns. Use either a before or after property to indicate\nwhere to place derived columns. Specifying both before and after is an\nerror. Unlike the relocate verb, this option affects only new columns;\nupdated columns with existing names are excluded from relocation.\n@return A new table with derived columns added.\n@example table.derive({ sumXY: d => d.x + d.y })\n@example table.derive({ z: d => d.x * d.y }, { before: 'x' })",name:"derive",required:!0,type:{name:"(values: ExprObject, options?: DeriveOptions) => ColumnTable"}},filter:{defaultValue:null,description:"Filter a table to a subset of rows based on the input criteria.\nThe resulting table provides a filtered view over the original data; no\ndata copy is made. To create a table that copies only filtered data to\nnew data structures, call {@link Transformable#reify } on the output table.\n@param criteria Filter criteria as a table expression.\nBoth aggregate and window functions are permitted, taking into account\n{@link Transformable#groupby } or {@link Transformable#orderby } settings.\n@return A new table with filtered rows.\n@example table.filter(d => abs(d.value) < 5)",name:"filter",required:!0,type:{name:"(criteria: TableExpr) => ColumnTable"}},groupby:{defaultValue:null,description:"Group table rows based on a set of column values.\nSubsequent operations that are sensitive to grouping (such as\naggregate functions) will operate over the grouped rows.\nTo undo grouping, use {@link Transformable#ungroup }.\n@param keys Key column values to group by.\nThe keys may be specified using column name strings, column index\nnumbers, value objects with output column names for keys and table\nexpressions for values, or selection helper functions.\n@return A new table with grouped rows.\n@example table.groupby('colA', 'colB')\n@example table.groupby({ key: d => d.colA + d.colB })",name:"groupby",required:!0,type:{name:"(...keys: ExprList[]) => ColumnTable"}},orderby:{defaultValue:null,description:"Order table rows based on a set of column values.\nSubsequent operations sensitive to ordering (such as window functions)\nwill operate over sorted values.\nThe resulting table provides an view over the original data, without\nany copying. To create a table with sorted data copied to new data\nstrucures, call {@link Transformable#reify } on the result of this method.\nTo undo ordering, use {@link Transformable#unorder }.\n@param keys Key values to sort by, in precedence order.\nBy default, sorting is done in ascending order.\nTo sort in descending order, wrap values using {@link desc }.\nIf a string, order by the column with that name.\nIf a number, order by the column with that index.\nIf a function, must be a valid table expression; aggregate functions\nare permitted, but window functions are not.\nIf an object, object values must be valid values parameters\nwith output column names for keys and table expressions\nfor values (the output names will be ignored).\nIf an array, array values must be valid key parameters.\n@return A new ordered table.\n@example table.orderby('a', desc('b'))\n@example table.orderby({ a: 'a', b: desc('b') )})\n@example table.orderby(desc(d => d.a))",name:"orderby",required:!0,type:{name:"(...keys: OrderKeys[]) => ColumnTable"}},relocate:{defaultValue:null,description:"Relocate a subset of columns to change their positions, also\npotentially renaming them.\n@param columns An ordered selection of columns to relocate.\nThe input may consist of column name strings, column integer indices,\nrename objects with current column names as keys and new column names\nas values, or functions that take a table as input and returns a valid\nselection parameter (typically the output of selection helper functions\nsuch as {@link all }, {@link not }, or {@link range }).\n@param options Options for relocating. Must include\neither the before or after property to indicate where to place the\nrelocated columns. Specifying both before and after is an error.\n@return A new table with relocated columns.\n@example table.relocate(['colY', 'colZ'], { after: 'colX' })\n@example table.relocate(not('colB', 'colC'), { before: 'colA' })\n@example table.relocate({ colA: 'newA', colB: 'newB' }, { after: 'colC' })",name:"relocate",required:!0,type:{name:"(columns: Selection, options: RelocateOptions) => ColumnTable"}},rename:{defaultValue:null,description:"Rename one or more columns, preserving column order.\n@param columns One or more rename objects with current\ncolumn names as keys and new column names as values.\n@return A new table with renamed columns.\n@example table.rename({ oldName: 'newName' })\n@example table.rename({ a: 'a2', b: 'b2' })",name:"rename",required:!0,type:{name:"(...columns: Select[]) => ColumnTable"}},rollup:{defaultValue:null,description:"Rollup a table to produce an aggregate summary.\nOften used in conjunction with {@link Transformable#groupby }.\nTo produce counts only, {@link Transformable#count } is a shortcut.\n@param values Object of name-value pairs defining aggregate\noutput columns. The input object should have output column names for\nkeys and table expressions for values. The expressions must be valid\naggregate expressions: window functions are not allowed and column\nreferences must be arguments to aggregate functions.\n@return A new table of aggregate summary values.\n@example table.groupby('colA').rollup({ mean: d => mean(d.colB) })\n@example table.groupby('colA').rollup({ mean: op.median('colB') })",name:"rollup",required:!0,type:{name:"(values?: ExprObject) => ColumnTable"}},sample:{defaultValue:null,description:"Generate a table from a random sample of rows.\nIf the table is grouped, performs a stratified sample by\nsampling from each group separately.\n@param size The number of samples to draw per group.\nIf number-valued, the same sample size is used for each group.\nIf function-valued, the input should be an aggregate table\nexpression compatible with {@link Transformable#rollup }.\n@param options Options for sampling.\n@return A new table with sampled rows.\n@example table.sample(50)\n@example table.sample(100, { replace: true })\n@example table.groupby('colA').sample(() => op.floor(0.5 * op.count()))",name:"sample",required:!0,type:{name:"(size: number | TableExpr, options?: SampleOptions) => ColumnTable"}},select:{defaultValue:null,description:"Select a subset of columns into a new table, potentially renaming them.\n@param columns An ordered selection of columns.\nThe input may consist of column name strings, column integer indices,\nrename objects with current column names as keys and new column names\nas values, or functions that take a table as input and returns a valid\nselection parameter (typically the output of selection helper functions\nsuch as {@link all }, {@link not }, or {@link range }).\n@return A new table of selected columns.\n@example table.select('colA', 'colB')\n@example table.select(not('colB', 'colC'))\n@example table.select({ colA: 'newA', colB: 'newB' })",name:"select",required:!0,type:{name:"(...columns: Select[]) => ColumnTable"}},ungroup:{defaultValue:null,description:"Ungroup a table, removing any grouping criteria.\nUndoes the effects of {@link Transformable#groupby }.\n@return A new ungrouped table, or this table if not grouped.\n@example table.ungroup()",name:"ungroup",required:!0,type:{name:"() => ColumnTable"}},unorder:{defaultValue:null,description:"Unorder a table, removing any sorting criteria.\nUndoes the effects of {@link Transformable#orderby }.\n@return A new unordered table, or this table if not ordered.\n@example table.unorder()",name:"unorder",required:!0,type:{name:"() => ColumnTable"}},dedupe:{defaultValue:null,description:"De-duplicate table rows by removing repeated row values.\n@param keys Key columns to check for duplicates.\nTwo rows are considered duplicates if they have matching values for\nall keys. If keys are unspecified, all columns are used.\nThe keys may be specified using column name strings, column index\nnumbers, value objects with output column names for keys and table\nexpressions for values, or selection helper functions.\n@return A new de-duplicated table.\n@example table.dedupe()\n@example table.dedupe('a', 'b')\n@example table.dedupe({ abs: d => op.abs(d.a) })",name:"dedupe",required:!0,type:{name:"(...keys: ExprList[]) => ColumnTable"}},impute:{defaultValue:null,description:"Impute missing values or rows. Accepts a set of column-expression pairs\nand evaluates the expressions to replace any missing (null, undefined,\nor NaN) values in the original column.\nIf the expand option is specified, imputes new rows for missing\ncombinations of values. All combinations of key values (a full cross\nproduct) are considered for each level of grouping (specified by\n{@link Transformable#groupby }). New rows will be added for any combination\nof key and groupby values not already contained in the table. For all\nnon-key and non-group columns the new rows are populated with imputation\nvalues (first argument) if specified, otherwise undefined.\nIf the expand option is specified, any filter or orderby settings are\nremoved from the output table, but groupby settings persist.\n@param values Object of name-value pairs for the column values\nto impute. The input object should have existing column names for keys\nand table expressions for values. The expressions will be evaluated to\ndetermine replacements for any missing values.\n@param options Imputation options. The expand\nproperty specifies a set of column values to consider for imputing\nmissing rows. All combinations of expanded values are considered, and\nnew rows are added for each combination that does not appear in the\ninput table.\n@return A new table with imputed values and/or rows.\n@example table.impute({ v: () => 0 })\n@example table.impute({ v: d => op.mean(d.v) })\n@example table.impute({ v: () => 0 }, { expand: ['x', 'y'] })",name:"impute",required:!0,type:{name:"(values: ExprObject, options?: ImputeOptions) => ColumnTable"}},fold:{defaultValue:null,description:"Fold one or more columns into two key-value pair columns.\nThe fold transform is an inverse of the {@link Transformable#pivot } transform.\nThe resulting table has two new columns, one containing the column\nnames (named \"key\") and the other the column values (named \"value\").\nThe number of output rows equals the original row count multiplied\nby the number of folded columns.\n@param values The columns to fold.\nThe columns may be specified using column name strings, column index\nnumbers, value objects with output column names for keys and table\nexpressions for values, or selection helper functions.\n@param options Options for folding.\n@return A new folded table.\n@example table.fold('colA')\n@example table.fold(['colA', 'colB'])\n@example table.fold(range(5, 8))",name:"fold",required:!0,type:{name:"(values: ExprList, options?: FoldOptions) => ColumnTable"}},pivot:{defaultValue:null,description:"Pivot columns into a cross-tabulation.\nThe pivot transform is an inverse of the {@link Transformable#fold } transform.\nThe resulting table has new columns for each unique combination\nof the provided *keys*, populated with the provided *values*.\nThe provided *values* must be aggregates, as a single set of keys may\ninclude more than one row. If string-valued, the *any* aggregate is used.\nIf only one *values* column is defined, the new pivoted columns will\nbe named using key values directly. Otherwise, input value column names\nwill be included as a component of the output column names.\n@param keys Key values to map to new column names.\nThe keys may be specified using column name strings, column index\nnumbers, value objects with output column names for keys and table\nexpressions for values, or selection helper functions.\n@param values Output values for pivoted columns.\nColumn references will be wrapped in an *any* aggregate.\nIf object-valued, the input object should have output value\nnames for keys and aggregate table expressions for values.\n@param options Options for pivoting.\n@return A new pivoted table.\n@example table.pivot('key', 'value')\n@example table.pivot(['keyA', 'keyB'], ['valueA', 'valueB'])\n@example table.pivot({ key: d => d.key }, { value: d => sum(d.value) })",name:"pivot",required:!0,type:{name:"(keys: ExprList, values: ExprList, options?: PivotOptions) => ColumnTable"}},spread:{defaultValue:null,description:"Spread array elements into a set of new columns.\nOutput columns are named based on the value key and array index.\n@param values The column values to spread.\nThe values may be specified using column name strings, column index\nnumbers, value objects with output column names for keys and table\nexpressions for values, or selection helper functions.\n@param options Options for spreading.\n@return A new table with the spread columns added.\n@example table.spread({ a: split(d.text, '') })\n@example table.spread('arrayCol', { limit: 100 })",name:"spread",required:!0,type:{name:"(values: ExprList, options?: SpreadOptions) => ColumnTable"}},unroll:{defaultValue:null,description:"Unroll one or more array-valued columns into new rows.\nIf more than one array value is used, the number of new rows\nis the smaller of the limit and the largest length.\nValues for all other columns are copied over.\n@param values The column values to unroll.\nThe values may be specified using column name strings, column index\nnumbers, value objects with output column names for keys and table\nexpressions for values, or selection helper functions.\n@param options Options for unrolling.\n@return A new unrolled table.\n@example table.unroll('colA', { limit: 1000 })",name:"unroll",required:!0,type:{name:"(values: ExprList, options?: UnrollOptions) => ColumnTable"}},lookup:{defaultValue:null,description:"Lookup values from a secondary table and add them as new columns.\nA lookup occurs upon matching key values for rows in both tables.\nIf the secondary table has multiple rows with the same key, only\nthe last observed instance will be considered in the lookup.\nLookup is similar to {@link Transformable#join_left }, but with a simpler\nsyntax and the added constraint of allowing at most one match only.\n@param other The secondary table to look up values from.\n@param on Lookup keys (column name strings or table\nexpressions) for this table and the secondary table, respectively.\n@param values The column values to add from the\nsecondary table. Can be column name strings or objects with column\nnames as keys and table expressions as values.\n@return A new table with lookup values added.\n@example table.lookup(other, ['key1', 'key2'], 'value1', 'value2')",name:"lookup",required:!0,type:{name:"(other: TableRef, on?: JoinKeys, ...values: ExprList[]) => ColumnTable"}},join:{defaultValue:null,description:"Join two tables, extending the columns of one table with\nvalues from the other table. The current table is considered\nthe \"left\" table in the join, and the new table input is\nconsidered the \"right\" table in the join. By default an inner\njoin is performed, removing all rows that do not match the\njoin criteria. To perform left, right, or full outer joins, use\nthe {@link Transformable#join_left }, {@link Transformable#join_right }, or\n{@link Transformable#join_full } methods, or provide an options argument.\n@param other The other (right) table to join with.\n@param on The join criteria for matching table rows.\nIf unspecified, the values of all columns with matching names\nare compared.\nIf array-valued, a two-element array should be provided, containing\nthe columns to compare for the left and right tables, respectively.\nIf a one-element array or a string value is provided, the same\ncolumn names will be drawn from both tables.\nIf function-valued, should be a two-table table expression that\nreturns a boolean value. When providing a custom predicate, note that\njoin key values can be arrays or objects, and that normal join\nsemantics do not consider null or undefined values to be equal (that is,\nnull !== null). Use the op.equal function to handle these cases.\n@param values The columns to include in the join output.\nIf unspecified, all columns from both tables are included; paired\njoin keys sharing the same column name are included only once.\nIf array-valued, a two element array should be provided, containing\nthe columns to include for the left and right tables, respectively.\nArray input may consist of column name strings, objects with output\nnames as keys and single-table table expressions as values, or the\nselection helper functions {@link all }, {@link not }, or {@link range }.\nIf object-valued, specifies the key-value pairs for each output,\ndefined using two-table table expressions.\n@param options Options for the join.\n@return A new joined table.\n@example table.join(other, ['keyL', 'keyR'])\n@example table.join(other, (a, b) => equal(a.keyL, b.keyR))",name:"join",required:!0,type:{name:"(other: TableRef, on?: any, values?: JoinValues, options?: JoinOptions) => ColumnTable"}},join_left:{defaultValue:null,description:"Perform a left outer join on two tables. Rows in the left table\nthat do not match a row in the right table will be preserved.\nThis is a convenience method with fixed options for {@link Transformable#join }.\n@param other The other (right) table to join with.\n@param on The join criteria for matching table rows.\nIf unspecified, the values of all columns with matching names\nare compared.\nIf array-valued, a two-element array should be provided, containing\nthe columns to compare for the left and right tables, respectively.\nIf a one-element array or a string value is provided, the same\ncolumn names will be drawn from both tables.\nIf function-valued, should be a two-table table expression that\nreturns a boolean value. When providing a custom predicate, note that\njoin key values can be arrays or objects, and that normal join\nsemantics do not consider null or undefined values to be equal (that is,\nnull !== null). Use the op.equal function to handle these cases.\n@param values The columns to include in the join output.\nIf unspecified, all columns from both tables are included; paired\njoin keys sharing the same column name are included only once.\nIf array-valued, a two element array should be provided, containing\nthe columns to include for the left and right tables, respectively.\nArray input may consist of column name strings, objects with output\nnames as keys and single-table table expressions as values, or the\nselection helper functions {@link all }, {@link not }, or {@link range }.\nIf object-valued, specifies the key-value pairs for each output,\ndefined using two-table table expressions.\n@param options Options for the join. With this method,\nany options will be overridden with {left: true, right: false}.\n@return A new joined table.\n@example table.join_left(other, ['keyL', 'keyR'])\n@example table.join_left(other, (a, b) => equal(a.keyL, b.keyR))",name:"join_left",required:!0,type:{name:"(other: TableRef, on?: any, values?: JoinValues, options?: JoinOptions) => ColumnTable"}},join_right:{defaultValue:null,description:"Perform a right outer join on two tables. Rows in the right table\nthat do not match a row in the left table will be preserved.\nThis is a convenience method with fixed options for {@link Transformable#join }.\n@param other The other (right) table to join with.\n@param on The join criteria for matching table rows.\nIf unspecified, the values of all columns with matching names\nare compared.\nIf array-valued, a two-element array should be provided, containing\nthe columns to compare for the left and right tables, respectively.\nIf a one-element array or a string value is provided, the same\ncolumn names will be drawn from both tables.\nIf function-valued, should be a two-table table expression that\nreturns a boolean value. When providing a custom predicate, note that\njoin key values can be arrays or objects, and that normal join\nsemantics do not consider null or undefined values to be equal (that is,\nnull !== null). Use the op.equal function to handle these cases.\n@param values The columns to include in the join output.\nIf unspecified, all columns from both tables are included; paired\njoin keys sharing the same column name are included only once.\nIf array-valued, a two element array should be provided, containing\nthe columns to include for the left and right tables, respectively.\nArray input may consist of column name strings, objects with output\nnames as keys and single-table table expressions as values, or the\nselection helper functions {@link all }, {@link not }, or {@link range }.\nIf object-valued, specifies the key-value pairs for each output,\ndefined using two-table table expressions.\n@param options Options for the join. With this method,\nany options will be overridden with {left: false, right: true}.\n@return A new joined table.\n@example table.join_right(other, ['keyL', 'keyR'])\n@example table.join_right(other, (a, b) => equal(a.keyL, b.keyR))",name:"join_right",required:!0,type:{name:"(other: TableRef, on?: any, values?: JoinValues, options?: JoinOptions) => ColumnTable"}},join_full:{defaultValue:null,description:"Perform a full outer join on two tables. Rows in either the left or\nright table that do not match a row in the other will be preserved.\nThis is a convenience method with fixed options for {@link Transformable#join }.\n@param other The other (right) table to join with.\n@param on The join criteria for matching table rows.\nIf unspecified, the values of all columns with matching names\nare compared.\nIf array-valued, a two-element array should be provided, containing\nthe columns to compare for the left and right tables, respectively.\nIf a one-element array or a string value is provided, the same\ncolumn names will be drawn from both tables.\nIf function-valued, should be a two-table table expression that\nreturns a boolean value. When providing a custom predicate, note that\njoin key values can be arrays or objects, and that normal join\nsemantics do not consider null or undefined values to be equal (that is,\nnull !== null). Use the op.equal function to handle these cases.\n@param values The columns to include in the join output.\nIf unspecified, all columns from both tables are included; paired\njoin keys sharing the same column name are included only once.\nIf array-valued, a two element array should be provided, containing\nthe columns to include for the left and right tables, respectively.\nArray input may consist of column name strings, objects with output\nnames as keys and single-table table expressions as values, or the\nselection helper functions {@link all }, {@link not }, or {@link range }.\nIf object-valued, specifies the key-value pairs for each output,\ndefined using two-table table expressions.\n@param options Options for the join. With this method,\nany options will be overridden with {left: true, right: true}.\n@return A new joined table.\n@example table.join_full(other, ['keyL', 'keyR'])\n@example table.join_full(other, (a, b) => equal(a.keyL, b.keyR))",name:"join_full",required:!0,type:{name:"(other: TableRef, on?: any, values?: JoinValues, options?: JoinOptions) => ColumnTable"}},cross:{defaultValue:null,description:"Produce the Cartesian cross product of two tables. The output table\nhas one row for every pair of input table rows. Beware that outputs\nmay be quite large, as the number of output rows is the product of\nthe input row counts.\nThis is a convenience method for {@link Transformable#join } in which the\njoin criteria is always true.\n@param other The other (right) table to join with.\n@param values The columns to include in the output.\nIf unspecified, all columns from both tables are included.\nIf array-valued, a two element array should be provided, containing\nthe columns to include for the left and right tables, respectively.\nArray input may consist of column name strings, objects with output\nnames as keys and single-table table expressions as values, or the\nselection helper functions {@link all }, {@link not }, or {@link range }.\nIf object-valued, specifies the key-value pairs for each output,\ndefined using two-table table expressions.\n@param options Options for the join.\n@return A new joined table.\n@example table.cross(other)\n@example table.cross(other, [['leftKey', 'leftVal'], ['rightVal']])",name:"cross",required:!0,type:{name:"(other: TableRef, values?: JoinValues, options?: JoinOptions) => ColumnTable"}},semijoin:{defaultValue:null,description:"Perform a semi-join, filtering the left table to only rows that\nmatch a row in the right table.\n@param other The other (right) table to join with.\n@param on The join criteria for matching table rows.\nIf unspecified, the values of all columns with matching names\nare compared.\nIf array-valued, a two-element array should be provided, containing\nthe columns to compare for the left and right tables, respectively.\nIf a one-element array or a string value is provided, the same\ncolumn names will be drawn from both tables.\nIf function-valued, should be a two-table table expression that\nreturns a boolean value. When providing a custom predicate, note that\njoin key values can be arrays or objects, and that normal join\nsemantics do not consider null or undefined values to be equal (that is,\nnull !== null). Use the op.equal function to handle these cases.\n@return A new filtered table.\n@example table.semijoin(other)\n@example table.semijoin(other, ['keyL', 'keyR'])\n@example table.semijoin(other, (a, b) => equal(a.keyL, b.keyR))",name:"semijoin",required:!0,type:{name:"(other: TableRef, on?: any) => ColumnTable"}},antijoin:{defaultValue:null,description:"Perform an anti-join, filtering the left table to only rows that\ndo *not* match a row in the right table.\n@param other The other (right) table to join with.\n@param on The join criteria for matching table rows.\nIf unspecified, the values of all columns with matching names\nare compared.\nIf array-valued, a two-element array should be provided, containing\nthe columns to compare for the left and right tables, respectively.\nIf a one-element array or a string value is provided, the same\ncolumn names will be drawn from both tables.\nIf function-valued, should be a two-table table expression that\nreturns a boolean value. When providing a custom predicate, note that\njoin key values can be arrays or objects, and that normal join\nsemantics do not consider null or undefined values to be equal (that is,\nnull !== null). Use the op.equal function to handle these cases.\n@return A new filtered table.\n@example table.antijoin(other)\n@example table.antijoin(other, ['keyL', 'keyR'])\n@example table.antijoin(other, (a, b) => equal(a.keyL, b.keyR))",name:"antijoin",required:!0,type:{name:"(other: TableRef, on?: any) => ColumnTable"}},concat:{defaultValue:null,description:"Concatenate multiple tables into a single table, preserving all rows.\nThis transformation mirrors the UNION_ALL operation in SQL.\nOnly named columns in this table are included in the output.\n@see Transformable#union *\n@param tables A list of tables to concatenate.\n@return A new concatenated table.\n@example table.concat(other)\n@example table.concat(other1, other2)\n@example table.concat([other1, other2])",name:"concat",required:!0,type:{name:"(...tables: TableRef[]) => ColumnTable"}},union:{defaultValue:null,description:"Union multiple tables into a single table, deduplicating all rows.\nThis transformation mirrors the UNION operation in SQL. It is\nsimilar to {@link Transformable#concat } but suppresses duplicate rows with\nvalues identical to another row.\nOnly named columns in this table are included in the output.\n@see Transformable#concat *\n@param tables A list of tables to union.\n@return A new unioned table.\n@example table.union(other)\n@example table.union(other1, other2)\n@example table.union([other1, other2])",name:"union",required:!0,type:{name:"(...tables: TableRef[]) => ColumnTable"}},intersect:{defaultValue:null,description:"Intersect multiple tables, keeping only rows whose with identical\nvalues for all columns in all tables, and deduplicates the rows.\nThis transformation is similar to a series of {@link Transformable#semijoin }\ncalls, but additionally suppresses duplicate rows.\n@see Transformable#semijoin *\n@param tables A list of tables to intersect.\n@return A new filtered table.\n@example table.intersect(other)\n@example table.intersect(other1, other2)\n@example table.intersect([other1, other2])",name:"intersect",required:!0,type:{name:"(...tables: TableRef[]) => ColumnTable"}},except:{defaultValue:null,description:"Compute the set difference with multiple tables, keeping only rows in\nthis table that whose values do not occur in the other tables.\nThis transformation is similar to a series of {@link Transformable#antijoin }\ncalls, but additionally suppresses duplicate rows.\n@see Transformable#antijoin *\n@param tables A list of tables to difference.\n@return A new filtered table.\n@example table.except(other)\n@example table.except(other1, other2)\n@example table.except([other1, other2])",name:"except",required:!0,type:{name:"(...tables: TableRef[]) => ColumnTable"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.hooks.tsx#useCodebookContent"]={docgenInfo:useCodebookContent.__docgenInfo,name:"useCodebookContent",path:"../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.hooks.tsx#useCodebookContent"})}catch(__react_docgen_typescript_loader_error){}const EncodeDecodeForm=(0,react.memo)((function EncodeDecodeForm({step,workflow,input,onChange}){const dataTable=useStepInputTable(step,workflow,input),codebook=useCodebookContent(dataTable);return(0,react.useEffect)((()=>{null!=dataTable&&null!=onChange&&null==step.args.codebook&&null!=codebook&&onChange({...step,args:{...step.args,codebook}})}),[dataTable,onChange,step,codebook]),(0,jsx_runtime.jsx)(EncodeDecodeForm_base.m,{step,onChange})}));try{EncodeDecodeForm.displayName="EncodeDecodeForm",EncodeDecodeForm.__docgenInfo={description:"",displayName:"EncodeDecodeForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<EncodeDecodeArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<EncodeDecodeArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.tsx#EncodeDecodeForm"]={docgenInfo:EncodeDecodeForm.__docgenInfo,name:"EncodeDecodeForm",path:"../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.tsx#EncodeDecodeForm"})}catch(__react_docgen_typescript_loader_error){}const EraseFormBase=(0,react.memo)((function EraseFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Value to be erased",type:forms_types.T.Text,current:step.args.value,placeholder:"Enter a value",required:!0,onChange:(s,val)=>{s.args.value=val}}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{EraseFormBase.displayName="EraseFormBase",EraseFormBase.__docgenInfo={description:"Just the to/value inputs for an erase.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"EraseFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<EraseArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<EraseArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/EraseForm/EraseForm.base.tsx#EraseFormBase"]={docgenInfo:EraseFormBase.__docgenInfo,name:"EraseFormBase",path:"../react/src/components/verbs/forms/EraseForm/EraseForm.base.tsx#EraseFormBase"})}catch(__react_docgen_typescript_loader_error){}const EraseForm=(0,react.memo)((function EraseForm({step,onChange}){return(0,jsx_runtime.jsx)(EraseFormBase,{step,onChange})}));try{EraseForm.displayName="EraseForm",EraseForm.__docgenInfo={description:"Just the to/value inputs for an erase.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"EraseForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<EraseArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<EraseArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/EraseForm/EraseForm.tsx#EraseForm"]={docgenInfo:EraseForm.__docgenInfo,name:"EraseForm",path:"../react/src/components/verbs/forms/EraseForm/EraseForm.tsx#EraseForm"})}catch(__react_docgen_typescript_loader_error){}const FillFormBase=(0,react.memo)((function FillFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Fill value",type:forms_types.T.Text,current:step.args.value,onChange:(s,val)=>{s.args.value=val}}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{FillFormBase.displayName="FillFormBase",FillFormBase.__docgenInfo={description:"Provides inputs for a Fill step.",displayName:"FillFormBase",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<FillArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<FillArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/FillForm/FillForm.base.tsx#FillFormBase"]={docgenInfo:FillFormBase.__docgenInfo,name:"FillFormBase",path:"../react/src/components/verbs/forms/FillForm/FillForm.base.tsx#FillFormBase"})}catch(__react_docgen_typescript_loader_error){}const FoldFormBase=(0,react.memo)((function FoldBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Key name to use",placeholder:"Key name to use",type:forms_types.T.Text,required:!0,current:step.args.to?step.args.to[0]:"",onChange:(s,val)=>{const target=s.args.to;null!=target&&(target[0]=val)}},{label:"Value name to use",placeholder:"Value name to use",type:forms_types.T.Text,required:!0,current:step.args.to?step.args.to[1]:"",onChange:(s,val)=>{const target=s.args.to;null!=target&&(target[1]=val)}}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{FoldFormBase.displayName="FoldFormBase",FoldFormBase.__docgenInfo={description:"Provides inputs for a step that needs lists of columns.",displayName:"FoldFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<FoldArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<FoldArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/FoldForm/FoldForm.base.tsx#FoldFormBase"]={docgenInfo:FoldFormBase.__docgenInfo,name:"FoldFormBase",path:"../react/src/components/verbs/forms/FoldForm/FoldForm.base.tsx#FoldFormBase"})}catch(__react_docgen_typescript_loader_error){}const FoldForm=(0,react.memo)((function Fold({step,onChange}){return(0,jsx_runtime.jsx)(FoldFormBase,{step,onChange})}));try{FoldForm.displayName="FoldForm",FoldForm.__docgenInfo={description:"Provides inputs for a step that needs lists of columns.",displayName:"FoldForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<FoldArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<FoldArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/FoldForm/FoldForm.tsx#FoldForm"]={docgenInfo:FoldForm.__docgenInfo,name:"FoldForm",path:"../react/src/components/verbs/forms/FoldForm/FoldForm.tsx#FoldForm"})}catch(__react_docgen_typescript_loader_error){}const ImportFormBase=(0,react.memo)((function ImputeFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Fill value",placeholder:"Enter a value",type:forms_types.T.Text,current:step.args.value,required:!0,onChange:(s,val)=>{s.args.value=val}}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{step,onChange,inputs})}));try{ImportFormBase.displayName="ImportFormBase",ImportFormBase.__docgenInfo={description:"Just the to/value inputs for an impute.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"ImportFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<ImputeArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<ImputeArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/ImputeForm/ImputeForm.base.tsx#ImportFormBase"]={docgenInfo:ImportFormBase.__docgenInfo,name:"ImportFormBase",path:"../react/src/components/verbs/forms/ImputeForm/ImputeForm.base.tsx#ImportFormBase"})}catch(__react_docgen_typescript_loader_error){}const ImputeForm=(0,react.memo)((function ImputeForm({step,onChange}){return(0,jsx_runtime.jsx)(ImportFormBase,{step,onChange})}));try{ImputeForm.displayName="ImputeForm",ImputeForm.__docgenInfo={description:"Just the to/value inputs for an impute.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"ImputeForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<ImputeArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<ImputeArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/ImputeForm/ImputeForm.tsx#ImputeForm"]={docgenInfo:ImputeForm.__docgenInfo,name:"ImputeForm",path:"../react/src/components/verbs/forms/ImputeForm/ImputeForm.tsx#ImputeForm"})}catch(__react_docgen_typescript_loader_error){}const JoinFormBase=(0,react.memo)((function JoinFormBase({step,onChange,tableOptions,leftColumns,rightColumns}){const inputs=(0,react.useMemo)((()=>[(0,factories.we)("Join table",tableOptions,(0,util.$)(step,types.o.Other),((s,val)=>{const binding=s.input[types.o.Other]??{};binding.step=val,step.input[types.o.Other]=binding}),{required:!0,placeholder:"Choose table"}),(0,factories.ih)("Join strategy",verbs.Fo,step.args.strategy,((s,val)=>{s.args.strategy=val}),{required:!0,placeholder:"Choose join",advanced:!0}),...(0,factories.vE)(step,leftColumns,rightColumns)]),[step,leftColumns,rightColumns,tableOptions]);return(0,jsx_runtime.jsx)(VerbForm.g,{step,onChange,inputs})}));try{JoinFormBase.displayName="JoinFormBase",JoinFormBase.__docgenInfo={description:"Provides inputs for a Join step.",displayName:"JoinFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<JoinArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<JoinArgs>"}},tableOptions:{defaultValue:null,description:"",name:"tableOptions",required:!0,type:{name:"IDropdownOption<any>[]"}},leftColumns:{defaultValue:null,description:"",name:"leftColumns",required:!0,type:{name:"string[]"}},rightColumns:{defaultValue:null,description:"",name:"rightColumns",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/JoinForm/Join.base.tsx#JoinFormBase"]={docgenInfo:JoinFormBase.__docgenInfo,name:"JoinFormBase",path:"../react/src/components/verbs/forms/JoinForm/Join.base.tsx#JoinFormBase"})}catch(__react_docgen_typescript_loader_error){}const JoinForm=(0,react.memo)((function JoinForm({step,workflow,onChange}){const input=useWorkflowInput(workflow),tableOptions=useTableDropdownOptions(workflow,(name=>name!==input?.id)),leftTable=(0,useWorkflowDataTable.w)((0,util.$)(step,types.o.Source),workflow),rightTable=(0,useWorkflowDataTable.w)((0,util.$)(step,types.o.Other),workflow),leftColumns=useColumnNames(leftTable),rightColumns=useColumnNames(rightTable);return(0,jsx_runtime.jsx)(JoinFormBase,{step,onChange,tableOptions,leftColumns,rightColumns})}));try{JoinForm.displayName="JoinForm",JoinForm.__docgenInfo={description:"Provides inputs for a Join step.",displayName:"JoinForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<JoinArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<JoinArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/JoinForm/Join.tsx#JoinForm"]={docgenInfo:JoinForm.__docgenInfo,name:"JoinForm",path:"../react/src/components/verbs/forms/JoinForm/Join.tsx#JoinForm"})}catch(__react_docgen_typescript_loader_error){}const LookupFormBase=(0,react.memo)((function LookupFormBase({step,onChange,tableOptions,leftColumns,rightColumns}){const inputs=(0,react.useMemo)((()=>[(0,factories.we)("Join table",tableOptions,(0,util.$)(step,types.o.Other),((s,val)=>{const binding=s.input[types.o.Other]??{};binding.step=val,step.input[types.o.Other]=binding}),{required:!0,placeholder:"Choose column"}),...(0,factories.vE)(step,leftColumns,rightColumns),(0,factories.Zf)(step,rightColumns,"Columns to copy")]),[step,leftColumns,rightColumns,tableOptions]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,onChange,step})}));try{LookupFormBase.displayName="LookupFormBase",LookupFormBase.__docgenInfo={description:"Provides inputs for a Lookup step.",displayName:"LookupFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<LookupArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<LookupArgs>"}},tableOptions:{defaultValue:null,description:"",name:"tableOptions",required:!0,type:{name:"IDropdownOption<any>[]"}},leftColumns:{defaultValue:null,description:"",name:"leftColumns",required:!0,type:{name:"string[]"}},rightColumns:{defaultValue:null,description:"",name:"rightColumns",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/LookupForm/LookupForm.base.tsx#LookupFormBase"]={docgenInfo:LookupFormBase.__docgenInfo,name:"LookupFormBase",path:"../react/src/components/verbs/forms/LookupForm/LookupForm.base.tsx#LookupFormBase"})}catch(__react_docgen_typescript_loader_error){}const LookupForm=(0,react.memo)((function LookupForm({step,workflow,onChange}){const input=useWorkflowInput(workflow),tableOptions=useTableDropdownOptions(workflow,(name=>name!==input?.id)),leftTable=(0,useWorkflowDataTable.w)((0,util.$)(step,types.o.Source),workflow),rightTable=(0,useWorkflowDataTable.w)((0,util.$)(step,types.o.Other),workflow),leftColumns=useColumnNames(leftTable),rightColumns=useColumnNames(rightTable);return(0,jsx_runtime.jsx)(LookupFormBase,{step,onChange,tableOptions,leftColumns,rightColumns})}));try{LookupForm.displayName="LookupForm",LookupForm.__docgenInfo={description:"Provides inputs for a Lookup step.",displayName:"LookupForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<LookupArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<LookupArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/LookupForm/LookupForm.tsx#LookupForm"]={docgenInfo:LookupForm.__docgenInfo,name:"LookupForm",path:"../react/src/components/verbs/forms/LookupForm/LookupForm.tsx#LookupForm"})}catch(__react_docgen_typescript_loader_error){}const MergeFormBase=(0,react.memo)((function MergeFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[(0,factories.ih)("Merge strategy",verbs.Kp,step.args.strategy,((s,val)=>{s.args.strategy=val}),{required:!0,placeholder:"Choose strategy"}),{label:"Delimiter",type:forms_types.T.Text,if:step.args.strategy===verbs.Kp.Concat,current:step.args.delimiter,onChange:(s,val)=>{s.args.delimiter=val}},{label:"Keep source columns",type:forms_types.T.Checkbox,current:step.args.preserveSource,onChange:(s,val)=>{s.args.preserveSource=val},advanced:!0},{label:"Unhot",type:forms_types.T.Checkbox,current:step.args.unhot,onChange:(s,val)=>{s.args.unhot=val},advanced:!0},{label:"Prefix",type:forms_types.T.Text,if:!0===step.args.unhot,current:step.args.prefix,onChange:(s,val)=>{s.args.prefix=val},advanced:!0}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{MergeFormBase.displayName="MergeFormBase",MergeFormBase.__docgenInfo={description:"Just the to/value inputs for an impute.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"MergeFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<MergeArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<MergeArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/MergeForm/Merge.base.tsx#MergeFormBase"]={docgenInfo:MergeFormBase.__docgenInfo,name:"MergeFormBase",path:"../react/src/components/verbs/forms/MergeForm/Merge.base.tsx#MergeFormBase"})}catch(__react_docgen_typescript_loader_error){}const MergeForm=(0,react.memo)((function MergeForm({step,onChange}){return(0,jsx_runtime.jsx)(MergeFormBase,{step,onChange})}));try{MergeForm.displayName="MergeForm",MergeForm.__docgenInfo={description:"Just the to/value inputs for an impute.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"MergeForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<MergeArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<MergeArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/MergeForm/Merge.tsx#MergeForm"]={docgenInfo:MergeForm.__docgenInfo,name:"MergeForm",path:"../react/src/components/verbs/forms/MergeForm/Merge.tsx#MergeForm"})}catch(__react_docgen_typescript_loader_error){}const PrintFormBase=(0,react.memo)((function PrintFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Message to print",type:forms_types.T.Text,current:step.args.message,placeholder:"Message content",required:!1,onChange:(s,val)=>{s.args.message=String(val)}},{label:"Number of rows to print",type:forms_types.T.NumberSpinner,min:1,step:1,onChange:(s,opt)=>{s.args.limit=(0,primitives.OK)(opt)},current:step.args.limit}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{PrintFormBase.displayName="PrintFormBase",PrintFormBase.__docgenInfo={description:"Just the to/value inputs for an erase.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"PrintFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<PrintArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<PrintArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/PrintForm/PrintForm.base.tsx#PrintFormBase"]={docgenInfo:PrintFormBase.__docgenInfo,name:"PrintFormBase",path:"../react/src/components/verbs/forms/PrintForm/PrintForm.base.tsx#PrintFormBase"})}catch(__react_docgen_typescript_loader_error){}const PrintForm=(0,react.memo)((function PrintForm({step,onChange}){return(0,jsx_runtime.jsx)(PrintFormBase,{step,onChange})}));try{PrintForm.displayName="PrintForm",PrintForm.__docgenInfo={description:"Just the message input for a print.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"PrintForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<PrintArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<PrintArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/PrintForm/PrintForm.tsx#PrintForm"]={docgenInfo:PrintForm.__docgenInfo,name:"PrintForm",path:"../react/src/components/verbs/forms/PrintForm/PrintForm.tsx#PrintForm"})}catch(__react_docgen_typescript_loader_error){}var cloneDeep=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/cloneDeep.js");const OneHotFormBase=(0,react.memo)((function OneHotFormBase({step,onChange}){const prefixInput=(0,react.useMemo)((()=>({advanced:!0,label:`Prefix for column ${step.args.column??""}`,type:forms_types.T.Text,current:step.args.prefix,onChange:(s,val)=>{s.args.prefix=val}})),[step]),inputs=(0,react.useMemo)((()=>[{label:"Keep source columns",type:forms_types.T.Checkbox,current:step.args.preserveSource,onChange:(s,val)=>{s.args.preserveSource=val},advanced:!0},prefixInput]),[step,prefixInput]),onStepChange=(0,react.useCallback)((s=>{const step=(0,cloneDeep.Z)(s);onChange?.(step)}),[onChange]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange:onStepChange})}));try{OneHotFormBase.displayName="OneHotFormBase",OneHotFormBase.__docgenInfo={description:"Provides inputs for a OneHot step.",displayName:"OneHotFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<OnehotArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<OnehotArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/OneHotForm/OneHotForm.base.tsx#OneHotFormBase"]={docgenInfo:OneHotFormBase.__docgenInfo,name:"OneHotFormBase",path:"../react/src/components/verbs/forms/OneHotForm/OneHotForm.base.tsx#OneHotFormBase"})}catch(__react_docgen_typescript_loader_error){}const OneHotForm=(0,react.memo)((function OneHotForm({step,onChange}){return(0,jsx_runtime.jsx)(OneHotFormBase,{step,onChange})}));try{OneHotForm.displayName="OneHotForm",OneHotForm.__docgenInfo={description:"",displayName:"OneHotForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<OnehotArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<OnehotArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/OneHotForm/OneHotForm.tsx#OneHotForm"]={docgenInfo:OneHotForm.__docgenInfo,name:"OneHotForm",path:"../react/src/components/verbs/forms/OneHotForm/OneHotForm.tsx#OneHotForm"})}catch(__react_docgen_typescript_loader_error){}var SortDirection=__webpack_require__("../schema/src/enums/SortDirection.ts"),set=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/set.js"),merge=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/merge.js");const SortInstruction_styles_Container=dist.Z.div`
	display: flex;
	justify-content: flex-start;
`,SortInstruction_styles_icons={delete:{iconName:"Delete"}},narrowerStyles=(0,merge.Z)({},styles.Rj,{root:{width:styles.Rj.root.width-32}}),SortInstruction=(0,react.memo)((function SortInstruction({columnOptions,order,onChange,onDelete}){const{column,direction}=order,isAscending=direction===SortDirection.S.Ascending,directionName=isAscending?"Ascending":"Descending",handleColumnChange=function useHandleColumnChange(order,onChange){return(0,react.useCallback)(((_e,opt)=>{const update={...order,column:opt?.key};onChange?.(update)}),[order,onChange])}(order,onChange),handleDirectionClick=function useHandleDirectionClick(order,onChange){return(0,react.useCallback)((()=>{const update={...order,direction:order.direction===SortDirection.S.Descending?SortDirection.S.Ascending:SortDirection.S.Descending};onChange?.(update)}),[order,onChange])}(order,onChange);return(0,jsx_runtime.jsxs)(SortInstruction_styles_Container,{children:[(0,jsx_runtime.jsx)(TableColumnDropdown,{options:columnOptions,label:void 0,selectedKey:column,onChange:handleColumnChange,styles:narrowerStyles}),(0,jsx_runtime.jsx)(lib_commonjs.IconButton,{toggle:!0,checked:isAscending,title:directionName,iconProps:{iconName:directionName},onClick:handleDirectionClick}),(0,jsx_runtime.jsx)(lib_commonjs.IconButton,{title:"Remove this sort",iconProps:SortInstruction_styles_icons.delete,onClick:onDelete})]})}));try{SortInstruction.displayName="SortInstruction",SortInstruction.__docgenInfo={description:"Provides a column dropdown, asc/desc toggle, and delete button for editing a table sort.",displayName:"SortInstruction",props:{columnOptions:{defaultValue:null,description:"",name:"columnOptions",required:!0,type:{name:"IDropdownOption<any>[]"}},order:{defaultValue:null,description:"",name:"order",required:!0,type:{name:"OrderbyInstruction"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(order: OrderbyInstruction) => void"}},onDelete:{defaultValue:null,description:"",name:"onDelete",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/controls/SortInstruction/SortInstruction.tsx#SortInstruction"]={docgenInfo:SortInstruction.__docgenInfo,name:"SortInstruction",path:"../react/src/components/controls/SortInstruction/SortInstruction.tsx#SortInstruction"})}catch(__react_docgen_typescript_loader_error){}function newSort(table){const column=table?.columnNames()[0];return{column,direction:SortDirection.S.Ascending}}const OrderbyForm_styles_Container=dist.Z.div`
	display: flex;
	flex-direction: column;
`,Sorts=dist.Z.div`
	display: flex;
	flex-direction: column;
	gap: 5px;
`,OrderbyForm_styles_icons={add:{iconName:"Add"}},OrderbyForm=(0,react.memo)((function OrderbyForm({step,workflow,input,onChange}){const dataTable=useStepInputTable(step,workflow,input);(0,react.useEffect)((()=>{null!=dataTable&&null!=onChange&&(step.args.orders&&0!==step.args.orders.length||onChange({...step,args:{orders:[{column:dataTable.columnNames()[0]||"",direction:SortDirection.S.Ascending}]}}))}),[dataTable,onChange,step]);const columns=useColumnNames(dataTable),columnOptions=(0,useSimpleDropdownOptions.U)(columns),sorts=function useSorts(step,columnOptions,onChange){return(0,react.useMemo)((()=>(step.args.orders||empty.LZ).map(((order,index)=>(0,jsx_runtime.jsx)(SortInstruction,{columnOptions,order,onChange:order=>{const update={...step};(0,set.Z)(update,`args.orders[${index}]`,order),onChange?.(update)},onDelete:()=>{const update={...step};update.args.orders.splice(index,1),onChange?.(update)}},`orderby-${order.column}-${index}`)))),[step,columnOptions,onChange])}(step,columnOptions,onChange),handleButtonClick=function useAddButtonClickedHandler(dataTable,step,onChange){return(0,react.useCallback)((()=>{onChange?.({...step,args:{...step.args,orders:[...step.args.orders||empty.LZ,newSort(dataTable)]}})}),[step,dataTable,onChange])}(dataTable,step,onChange);return(0,jsx_runtime.jsxs)(OrderbyForm_styles_Container,{children:[(0,jsx_runtime.jsx)(lib_commonjs.Label,{required:!0,children:"Sorts"}),(0,jsx_runtime.jsx)(Sorts,{children:sorts}),(0,jsx_runtime.jsx)(lib_commonjs.ActionButton,{onClick:handleButtonClick,iconProps:OrderbyForm_styles_icons.add,disabled:!dataTable,children:"Add sort"})]})}));try{OrderbyForm.displayName="OrderbyForm",OrderbyForm.__docgenInfo={description:"Provides inputs for an OrderBy step.",displayName:"OrderbyForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<OrderbyArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<OrderbyArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/OrderbyForm/OrderbyForm.tsx#OrderbyForm"]={docgenInfo:OrderbyForm.__docgenInfo,name:"OrderbyForm",path:"../react/src/components/verbs/forms/OrderbyForm/OrderbyForm.tsx#OrderbyForm"})}catch(__react_docgen_typescript_loader_error){}const PivotFormBase=(0,react.memo)((function PivotBase({step,onChange,columns}){const options=(0,useSimpleDropdownOptions.U)(columns),inputs=(0,react.useMemo)((()=>[{label:"Column used as key",placeholder:"Choose column",required:!0,type:forms_types.T.SingleChoice,current:step.args.key,options,onChange:(s,val)=>{s.args.key=val}},{label:"Column used as value",placeholder:"Choose column",required:!0,type:forms_types.T.SingleChoice,current:step.args.value,options,onChange:(s,val)=>{s.args.value=val}},(0,factories.ih)("Function",verbs.Ei,step.args.operation,((s,val)=>{s.args.operation=val}))]),[step,options]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{PivotFormBase.displayName="PivotFormBase",PivotFormBase.__docgenInfo={description:"Just the group/column/op inputs for an aggregation.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"PivotFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<PivotArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<PivotArgs>"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/PivotForm/PivotForm.base.tsx#PivotFormBase"]={docgenInfo:PivotFormBase.__docgenInfo,name:"PivotFormBase",path:"../react/src/components/verbs/forms/PivotForm/PivotForm.base.tsx#PivotFormBase"})}catch(__react_docgen_typescript_loader_error){}const PivotForm=(0,react.memo)((function PivotForm({step,workflow,input,onChange}){const columns=useColumnNames(useStepInputTable(step,workflow,input));return(0,jsx_runtime.jsx)(PivotFormBase,{step,onChange,columns})}));try{PivotForm.displayName="PivotForm",PivotForm.__docgenInfo={description:"Just the group/column/op inputs for an aggregation.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"PivotForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<PivotArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<PivotArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/PivotForm/PivotForm.tsx#PivotForm"]={docgenInfo:PivotForm.__docgenInfo,name:"PivotForm",path:"../react/src/components/verbs/forms/PivotForm/PivotForm.tsx#PivotForm"})}catch(__react_docgen_typescript_loader_error){}var useMappingPairs=__webpack_require__("../react/src/hooks/controls/useMappingPairs.tsx");var mapping=__webpack_require__("../react/src/hooks/controls/mapping.ts");const RecodeForm=(0,react.memo)((function RecodeForm({step,workflow,input,onChange}){const dataTable=useStepInputTable(step,workflow,input),dataType=function useColumnType(table,column){return(0,react.useMemo)((()=>table&&column?(0,src_columns.lG)(table,column):data.g.Unknown),[table,column])}(dataTable,step.args.column),initialValues=function useColumnValues(step,table){return(0,react.useMemo)((()=>{const{column}=step.args;if(!table||!column)return[];const args={[column]:src.op.array_agg_distinct(column)};return table.orderby(column).rollup(args).get(column,0)}),[table,step])}(step,dataTable),values=dataType===data.g.Date?initialValues.map((e=>e.toISOString())):initialValues,onUpdateMapping=(0,react.useCallback)((mapping=>{onChange?.({...step,args:{...step.args,mapping}})}),[onChange,step]),handleRecodeKeyChange=(0,mapping.Sb)(step.args.mapping,onUpdateMapping),handleRecodeValueChange=(0,mapping.xB)(step.args.mapping,dataType,onUpdateMapping),handleRecodeDelete=(0,mapping.My)(step.args.mapping,onUpdateMapping),handleButtonClick=function useHandleAddButtonClick(step,values,onChange){return(0,react.useCallback)((()=>{const nextValue=function next(step,values){return values.find((value=>!step.args.mapping||null==step.args.mapping[value]))}(step,values);null!=nextValue&&onChange?.({...step,args:{...step.args,mapping:{...step.args.mapping,[nextValue]:nextValue}}})}),[step,values,onChange])}(step,values,onChange),columnPairs=(0,useMappingPairs.h)(step.args.mapping,dataType,handleRecodeKeyChange,handleRecodeValueChange,handleRecodeDelete),disabled=function useDisabled(step,values){return 0===values.length||!step.args.column||values.length===Object.keys(step.args.mapping||empty.Nu).length}(step,values);return(0,jsx_runtime.jsxs)(RecodeForm_Container,{children:[(0,jsx_runtime.jsx)(ColumnPairs,{children:columnPairs}),(0,jsx_runtime.jsx)(lib_commonjs.ActionButton,{onClick:handleButtonClick,iconProps:RecodeForm_addIconProps,disabled,children:"Add mapping"})]})})),RecodeForm_Container=dist.Z.div`
	display: flex;
	flex-direction: column;
`,ColumnPairs=dist.Z.div`
	margin-top: 8px;
	display: flex;
	flex-direction: column;
	gap: 5px;
`,RecodeForm_addIconProps={iconName:"Add"};try{RecodeForm.displayName="RecodeForm",RecodeForm.__docgenInfo={description:"Provides inputs for a RecodeStep.",displayName:"RecodeForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<RecodeArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<RecodeArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/RecodeForm/RecodeForm.tsx#RecodeForm"]={docgenInfo:RecodeForm.__docgenInfo,name:"RecodeForm",path:"../react/src/components/verbs/forms/RecodeForm/RecodeForm.tsx#RecodeForm"})}catch(__react_docgen_typescript_loader_error){}const RenameForm=(0,react.memo)((function RenameForm({step,workflow,input,onChange}){const dataTable=useStepInputTable(step,workflow,input),handleColumnChange=function RenameForm_hooks_useHandleColumnChange(step,onChange){return(0,react.useCallback)(((previous,oldName,newName)=>{const columnList={...step.args.columns},columns={};for(const key in columnList)key===previous?columns[oldName]=newName:columns[key]=columnList[key];onChange?.({...step,args:{...step.args,columns}})}),[step,onChange])}(step,onChange),handleColumnDelete=function useOnDeleteStepColumn(step,onChange){return(0,react.useCallback)((column=>{const args={...step.args};delete args.columns[column],onChange?.({...step,args:{...step.args,...args}})}),[step,onChange])}(step,onChange),handleButtonClick=function RenameForm_hooks_useHandleAddButtonClick(step,table,onChange){return(0,react.useCallback)((()=>{const nextName=function RenameForm_hooks_next(step,table){return table?.columnNames().find((name=>!step.args.columns||!step.args.columns[name]))}(step,table);nextName&&onChange?.({...step,args:{...step.args,columns:{...step.args.columns,[nextName]:nextName}}})}),[step,table,onChange])}(step,dataTable,onChange),columnPairs=function useColumnPairs(table,step,onChange,onDelete){return(0,react.useMemo)((()=>{const{columns}=step.args;return Object.entries(columns||empty.Nu).map(((column,index)=>{const[oldname]=column;return(0,jsx_runtime.jsx)(ColumnPair,{table,column,step,onChange,onDelete},`column-rename-${oldname}-${index}`)}))}),[table,step,onChange,onDelete])}(dataTable,step,handleColumnChange,handleColumnDelete),disabled=function RenameForm_hooks_useDisabled(step,table){return!table||table.columnNames().length===Object.keys(step.args.columns||empty.Nu).length}(step,dataTable);return(0,jsx_runtime.jsxs)(RenameForm_Container,{children:[(0,jsx_runtime.jsx)(lib_commonjs.Label,{required:!0,children:"Column renames"}),(0,jsx_runtime.jsx)(RenameForm_ColumnPairs,{children:columnPairs}),(0,jsx_runtime.jsx)(lib_commonjs.ActionButton,{onClick:handleButtonClick,iconProps:RenameForm_addIconProps,disabled,children:"Add rename"})]})}));const ColumnPair=(0,react.memo)((function ColumnPair({table,column,step,onChange,onDelete}){const[oldname,newname]=column,columns=useColumnNames(table,(name=>name===oldname||!step.args.columns?.[name])),options=(0,useSimpleDropdownOptions.U)(columns);return(0,jsx_runtime.jsxs)(ColumnPairContainer,{children:[(0,jsx_runtime.jsx)(TableColumnDropdown,{options,label:void 0,selectedKey:oldname,onChange:(_e,opt)=>onChange(oldname,opt?.key||oldname,newname),styles:forms_styles.$F}),(0,jsx_runtime.jsx)(lib_commonjs.Icon,{iconName:"Forward",styles:{root:{marginLeft:4,marginRight:4}}}),(0,jsx_runtime.jsx)(lib_commonjs.TextField,{placeholder:"New name",value:newname,onChange:(_e,newValue)=>{onChange(oldname,oldname,newValue??"")},styles:forms_styles.$F}),(0,jsx_runtime.jsx)(lib_commonjs.IconButton,{title:"Remove this rename",iconProps:RenameForm_deleteIconProps,onClick:()=>onDelete(oldname)})]})})),RenameForm_Container=dist.Z.div`
	display: flex;
	flex-direction: column;
`,RenameForm_ColumnPairs=dist.Z.div`
	display: flex;
	flex-direction: column;
	gap: 5px;
`,ColumnPairContainer=dist.Z.div`
	display: flex;
	justify-content: flex-start;
	align-items: center;
`,RenameForm_addIconProps={iconName:"Add"},RenameForm_deleteIconProps={iconName:"Delete"};try{RenameForm.displayName="RenameForm",RenameForm.__docgenInfo={description:"Provides inputs for a RenameStep.",displayName:"RenameForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<InputColumnRecordArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<InputColumnRecordArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/RenameForm/RenameForm.tsx#RenameForm"]={docgenInfo:RenameForm.__docgenInfo,name:"RenameForm",path:"../react/src/components/verbs/forms/RenameForm/RenameForm.tsx#RenameForm"})}catch(__react_docgen_typescript_loader_error){}const RollupFormBase=(0,react.memo)((function RollupFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[(0,factories.ih)("Function",verbs.Ei,step.args.operation||verbs.Ei.Count,((s,val)=>{s.args.operation=val}),{required:!0})]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{RollupFormBase.displayName="RollupFormBase",RollupFormBase.__docgenInfo={description:"Just the column/op inputs for an rollup.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"RollupFormBase",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<RollupArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<RollupArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/RollupForm/RollupForm.base.tsx#RollupFormBase"]={docgenInfo:RollupFormBase.__docgenInfo,name:"RollupFormBase",path:"../react/src/components/verbs/forms/RollupForm/RollupForm.base.tsx#RollupFormBase"})}catch(__react_docgen_typescript_loader_error){}var defaultLocale=__webpack_require__("../../.yarn/cache/d3-format-npm-3.1.0-dfc19924ca-a0fe23d257.zip/node_modules/d3-format/src/defaultLocale.js"),useSpinButtonChangeHandler=__webpack_require__("../react/src/hooks/fluent/useSpinButtonChangeHandler.ts");const SampleForm_styles_Container=dist.Z.div`
	margin-top: 8px;
`,SampleForm_styles_Input=dist.Z.div`
	display: flex;
	flex-direction: row;
	align-items: center;
`,SampleForm_styles_InputLabel=dist.Z.div`
	width: 84px;
`,SampleForm_styles_OrLabel=(0,dist.Z)(lib_commonjs.Label)`
	display: inline;
	font-style: italic;
	padding-left: 10px;
	padding-right: 10px;
	border-left: 1px solid ${({theme})=>theme.palette.neutralTertiaryAlt};
`,spinStyles={root:{width:135}};var Expando=__webpack_require__("../../.yarn/__virtual__/@essex-components-virtual-8fb571eb4e/0/cache/@essex-components-npm-4.2.0-90f5c830ba-807e614d13.zip/node_modules/@essex/components/dist/Expando/Expando.js");const whole=(0,defaultLocale.WU)("d"),SampleForm=(0,react.memo)((function SampleForm({step,onChange}){const handleSizeChange=(0,useSpinButtonChangeHandler.w)(step,((s,val)=>{s.args.size=(0,primitives.OK)(val)}),onChange),handlePercentChange=(0,useSpinButtonChangeHandler.w)(step,((s,val)=>{s.args.proportion=null!=val?+val/100:void 0}),onChange),handleSeedChange=(0,useSpinButtonChangeHandler.w)(step,((s,val)=>{s.args.seed=null!=val?+val:void 0}),onChange);return(0,jsx_runtime.jsxs)(SampleForm_styles_Container,{children:[(0,jsx_runtime.jsxs)(SampleForm_styles_Input,{children:[(0,jsx_runtime.jsx)(SampleForm_styles_InputLabel,{children:"# rows"}),(0,jsx_runtime.jsx)(lib_commonjs.SpinButton,{min:0,step:1,disabled:!!step.args.proportion,value:step.args.size?`${step.args.size}`:"",styles:spinStyles,onChange:handleSizeChange})]}),(0,jsx_runtime.jsx)(SampleForm_styles_OrLabel,{children:"or"}),(0,jsx_runtime.jsxs)(SampleForm_styles_Input,{children:[(0,jsx_runtime.jsx)(SampleForm_styles_InputLabel,{children:"percentage"}),(0,jsx_runtime.jsx)(lib_commonjs.SpinButton,{min:0,max:100,step:1,disabled:!!step.args.size,value:step.args.proportion?`${whole(100*step.args.proportion)}`:"",styles:spinStyles,onChange:handlePercentChange})]}),(0,jsx_runtime.jsx)(Expando.q,{label:"Advanced",styles:{root:{marginTop:8}},children:(0,jsx_runtime.jsx)(lib_commonjs.SpinButton,{label:"Randomizing seed",labelPosition:lib_commonjs.Position.top,step:1,max:1e3,value:step.args.seed?`${step.args.seed}`:"",styles:styles.Rj,onChange:handleSeedChange})})]})}));try{SampleForm.displayName="SampleForm",SampleForm.__docgenInfo={description:"Provides inputs for a Sample step.",displayName:"SampleForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<SampleArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<SampleArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/SampleForm/SampleForm.tsx#SampleForm"]={docgenInfo:SampleForm.__docgenInfo,name:"SampleForm",path:"../react/src/components/verbs/forms/SampleForm/SampleForm.tsx#SampleForm"})}catch(__react_docgen_typescript_loader_error){}const SpreadFormBase=(0,react.memo)((function SpreadFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Keep source column",type:forms_types.T.Checkbox,current:step.args.preserveSource,onChange:(s,val)=>{s.args.preserveSource=val},advanced:!0},{label:"Split delimiter",type:forms_types.T.Text,current:step.args.delimiter,onChange:(s,val)=>{s.args.delimiter=val},advanced:!0},{label:"Onehot encode values",type:forms_types.T.Checkbox,current:step.args.onehot,onChange:(s,val)=>{s.args.onehot=val},styles:{root:{marginTop:8}},advanced:!0}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{SpreadFormBase.displayName="SpreadFormBase",SpreadFormBase.__docgenInfo={description:"Provides inputs for a Spread step.",displayName:"SpreadFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<SpreadArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<SpreadArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/SpreadForm/SpreadForm.base.tsx#SpreadFormBase"]={docgenInfo:SpreadFormBase.__docgenInfo,name:"SpreadFormBase",path:"../react/src/components/verbs/forms/SpreadForm/SpreadForm.base.tsx#SpreadFormBase"})}catch(__react_docgen_typescript_loader_error){}const SpreadForm=(0,react.memo)((function SpreadForm({step,onChange}){return(0,jsx_runtime.jsx)(SpreadFormBase,{step,onChange})}));try{SpreadForm.displayName="SpreadForm",SpreadForm.__docgenInfo={description:"",displayName:"SpreadForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<SpreadArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<SpreadArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/SpreadForm/SpreadForm.tsx#SpreadForm"]={docgenInfo:SpreadForm.__docgenInfo,name:"SpreadForm",path:"../react/src/components/verbs/forms/SpreadForm/SpreadForm.tsx#SpreadForm"})}catch(__react_docgen_typescript_loader_error){}const DestructureFormBase=(0,react.memo)((function DestructureFormBase({step,onChange,keyNames}){const inputs=(0,react.useMemo)((()=>[{label:"Keys to include",placeholder:"Choose keys",required:!1,type:forms_types.T.MultiChoice,current:step.args.keys,options:(0,useSimpleDropdownOptions.i)(keyNames),onChange:(s,val)=>{s.args.keys=(0,primitives.$w)(s.args.keys??empty.LZ,val)},onChangeAll:(s,val)=>{s.args.keys=val}},{label:"Keep source column",type:forms_types.T.Checkbox,current:step.args.preserveSource,onChange:(s,val)=>{s.args.preserveSource=val},advanced:!0}]),[step,keyNames]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{DestructureFormBase.displayName="DestructureFormBase",DestructureFormBase.__docgenInfo={description:"Just the json object inputs for spread json.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"DestructureFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<DestructureArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<DestructureArgs>"}},keyNames:{defaultValue:null,description:"",name:"keyNames",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/DestructureForm/DestructureForm.base.tsx#DestructureFormBase"]={docgenInfo:DestructureFormBase.__docgenInfo,name:"DestructureFormBase",path:"../react/src/components/verbs/forms/DestructureForm/DestructureForm.base.tsx#DestructureFormBase"})}catch(__react_docgen_typescript_loader_error){}const DestructureForm=(0,react.memo)((function DestructureForm({step,workflow,input,onChange}){const keyNames=function useKeyNames(table,column){return(0,react.useMemo)((()=>{const arrayResult=[];if(void 0!==table){const columnSelected=table.select(column).objects();for(let i=0;i<columnSelected.length;i++)arrayResult.push(...src.op.keys(columnSelected[i]?.[column]))}return[...new Set(arrayResult)]}),[table,column])}(useStepInputTable(step,workflow,input),step.args.column);return(0,jsx_runtime.jsx)(DestructureFormBase,{keyNames,step,onChange})}));try{DestructureForm.displayName="DestructureForm",DestructureForm.__docgenInfo={description:"Just the json object inputs for spread json.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"DestructureForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<DestructureArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<DestructureArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/DestructureForm/DestructureForm.tsx#DestructureForm"]={docgenInfo:DestructureForm.__docgenInfo,name:"DestructureForm",path:"../react/src/components/verbs/forms/DestructureForm/DestructureForm.tsx#DestructureForm"})}catch(__react_docgen_typescript_loader_error){}const StringsReplaceFormBase=(0,react.memo)((function StringsReplaceFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Pattern",type:forms_types.T.Text,current:step.args.pattern,required:!0,onChange:(s,val)=>{s.args.pattern=val}},{label:"Replacement",type:forms_types.T.Text,current:step.args.replacement,required:!0,onChange:(s,val)=>{s.args.replacement=val}},{label:"Global search",type:forms_types.T.Checkbox,current:step.args.globalSearch,advanced:!0,onChange:(s,val)=>{s.args.globalSearch=val}},{label:"Case insensitive match",type:forms_types.T.Checkbox,current:step.args.caseInsensitive,advanced:!0,onChange:(s,val)=>{s.args.caseInsensitive=val}}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{StringsReplaceFormBase.displayName="StringsReplaceFormBase",StringsReplaceFormBase.__docgenInfo={description:"Provides inputs for a StringsReplace step.",displayName:"StringsReplaceFormBase",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<StringsReplaceArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<StringsReplaceArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/strings/StringsReplaceForm/StringsReplaceForm.base.tsx#StringsReplaceFormBase"]={docgenInfo:StringsReplaceFormBase.__docgenInfo,name:"StringsReplaceFormBase",path:"../react/src/components/verbs/forms/strings/StringsReplaceForm/StringsReplaceForm.base.tsx#StringsReplaceFormBase"})}catch(__react_docgen_typescript_loader_error){}const UnfoldFormBase=(0,react.memo)((function UnfoldBase({step,onChange,columns}){const options=(0,useSimpleDropdownOptions.U)(columns),inputs=(0,react.useMemo)((()=>[{type:forms_types.T.SingleChoice,options,label:"Column used as key",placeholder:"Choose column",current:step.args.key,required:!0,onChange:(s,val)=>{s.args.key=val}},{label:"Column used as value",placeholder:"Choose column",type:forms_types.T.SingleChoice,options,current:step.args.value,required:!0,onChange:(s,val)=>{s.args.value=val}}]),[step,options]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{UnfoldFormBase.displayName="UnfoldFormBase",UnfoldFormBase.__docgenInfo={description:"Just the group/column/op inputs for an aggregation.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"UnfoldFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<InputKeyValueArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<InputKeyValueArgs>"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/UnfoldForm/UnfoldForm.base.tsx#UnfoldFormBase"]={docgenInfo:UnfoldFormBase.__docgenInfo,name:"UnfoldFormBase",path:"../react/src/components/verbs/forms/UnfoldForm/UnfoldForm.base.tsx#UnfoldFormBase"})}catch(__react_docgen_typescript_loader_error){}const UnfoldForm=(0,react.memo)((function UnfoldForm({step,workflow,input,onChange}){const columns=useColumnNames(useStepInputTable(step,workflow,input));return(0,jsx_runtime.jsx)(UnfoldFormBase,{step,onChange,columns})}));try{UnfoldForm.displayName="UnfoldForm",UnfoldForm.__docgenInfo={description:"Just the group/column/op inputs for an aggregation.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"UnfoldForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<InputKeyValueArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<InputKeyValueArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/UnfoldForm/UnfoldForm.tsx#UnfoldForm"]={docgenInfo:UnfoldForm.__docgenInfo,name:"UnfoldForm",path:"../react/src/components/verbs/forms/UnfoldForm/UnfoldForm.tsx#UnfoldForm"})}catch(__react_docgen_typescript_loader_error){}const UnhotFormBase=(0,react.memo)((function UnhotFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[{label:"Keep source columns",type:forms_types.T.Checkbox,current:step.args.preserveSource,onChange:(s,val)=>{s.args.preserveSource=val},advanced:!0},{label:"Prefix",type:forms_types.T.Text,current:step.args.prefix,onChange:(s,val)=>{s.args.prefix=val},advanced:!0}]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{UnhotFormBase.displayName="UnhotFormBase",UnhotFormBase.__docgenInfo={description:"Just the to/value inputs for an impute.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"UnhotFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<UnhotArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<UnhotArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/UnhotForm/UnhotForm.base.tsx#UnhotFormBase"]={docgenInfo:UnhotFormBase.__docgenInfo,name:"UnhotFormBase",path:"../react/src/components/verbs/forms/UnhotForm/UnhotForm.base.tsx#UnhotFormBase"})}catch(__react_docgen_typescript_loader_error){}const UnhotForm=(0,react.memo)((function UnhotForm({step,onChange}){return(0,jsx_runtime.jsx)(UnhotFormBase,{step,onChange})}));try{UnhotForm.displayName="UnhotForm",UnhotForm.__docgenInfo={description:"Just the to/value inputs for an impute.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"UnhotForm",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<UnhotArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<UnhotArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/UnhotForm/UnhotForm.tsx#UnhotForm"]={docgenInfo:UnhotForm.__docgenInfo,name:"UnhotForm",path:"../react/src/components/verbs/forms/UnhotForm/UnhotForm.tsx#UnhotForm"})}catch(__react_docgen_typescript_loader_error){}const WindowFormBase=(0,react.memo)((function WindowFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[(0,factories.ih)("Function",verbs.dx,step.args.operation,((s,val)=>{s.args.operation=val}),{required:!0,placeholder:"Choose function"})]),[step]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{WindowFormBase.displayName="WindowFormBase",WindowFormBase.__docgenInfo={description:"Just the column/op inputs for an rollup.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"WindowFormBase",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<WindowArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<WindowArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/WindowForm/WindowForm.base.tsx#WindowFormBase"]={docgenInfo:WindowFormBase.__docgenInfo,name:"WindowFormBase",path:"../react/src/components/verbs/forms/WindowForm/WindowForm.base.tsx#WindowFormBase"})}catch(__react_docgen_typescript_loader_error){}const WorkflowFormBase=(0,react.memo)((function WorkflowFormBase({step,onChange}){const inputs=(0,react.useMemo)((()=>[]),[]);return(0,jsx_runtime.jsx)(VerbForm.g,{inputs,step,onChange})}));try{WorkflowFormBase.displayName="WorkflowFormBase",WorkflowFormBase.__docgenInfo={description:"Currently, just a stub placeholder",displayName:"WorkflowFormBase",props:{workflow:{defaultValue:null,description:"TableStore to use for table lookups of step parameters.",name:"workflow",required:!1,type:{name:"Workflow"}},input:{defaultValue:null,description:"Optional override of step input - there are many scenarios\n(particularly chains) where the driving input table for UI visibility should be shared,\nbut the input to the actual step is an intermediate table.",name:"input",required:!1,type:{name:"string"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The optional output table name; this information isn't stored on the step, so it has to\nbe injected separately",name:"output",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Optional override for the label",name:"label",required:!1,type:{name:"string"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}},step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<WorkflowArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<WorkflowArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/WorkflowForm/WorkflowForm.base.tsx#WorkflowFormBase"]={docgenInfo:WorkflowFormBase.__docgenInfo,name:"WorkflowFormBase",path:"../react/src/components/verbs/forms/WorkflowForm/WorkflowForm.base.tsx#WorkflowFormBase"})}catch(__react_docgen_typescript_loader_error){}const selectStepForm_forms={aggregate:AggregateForm,bin:BinForm,binarize:BinarizeFormBase,boolean:BooleanLogicForm,concat:SetOperationForm,convert:ConvertForm,copy:NoParametersFormBase,dedupe:NoParametersFormBase,derive:DeriveForm,difference:SetOperationForm,decode:EncodeDecodeForm,drop:NoParametersFormBase,encode:EncodeDecodeForm,erase:EraseForm,fill:FillFormBase,filter:FilterForm,fold:FoldForm,groupby:NoParametersFormBase,intersect:SetOperationForm,impute:ImputeForm,join:JoinForm,lookup:LookupForm,merge:MergeForm,print:PrintForm,onehot:OneHotForm,orderby:OrderbyForm,pivot:PivotForm,recode:RecodeForm,rename:RenameForm,rollup:RollupFormBase,sample:SampleForm,select:NoParametersFormBase,spread:SpreadForm,destructure:DestructureForm,strings:{replace:StringsReplaceFormBase,lower:NoParametersFormBase,upper:NoParametersFormBase},unfold:UnfoldForm,ungroup:NoParametersFormBase,unhot:UnhotForm,union:SetOperationForm,unorder:NoParametersFormBase,unroll:NoParametersFormBase,window:WindowFormBase,workflow:WorkflowFormBase};function useStepArgsComponent(step){return(0,react.useMemo)((()=>step?function selectStepForm(step){const result=(0,get.Z)(selectStepForm_forms,step.verb);if(!result)throw new Error(`verb ${step.verb} not found`);return result}(step):null),[step])}const StepForm_styles_Container=dist.Z.div`
	width: auto;
	display: flex;
	flex-direction: column;
`,StepForm=(0,react.memo)((function StepForm({step:s,output,workflow:g,metadata,index,onChange,onChangeOutput:changeOutput,hideInputColumn}){const tableId=(0,util.$)(s,types.o.Source),table=(0,useWorkflowDataTable.w)(tableId,g),columns=useColumnNames(table,function useColumnFilter(step,table){const typeMap=(0,react.useMemo)((()=>table?(0,columnTypes.H)(table):{}),[table]);return(0,react.useCallback)((name=>(0,steps.CX)(step.verb,typeMap[name])),[typeMap,step])}(s,table)),columnOptions=(0,useSimpleDropdownOptions.U)(columns),StepArgs=useStepArgsComponent(s),change=function useStepChangeHandler(index,onChange){return(0,react.useCallback)((step=>onChange(step,index)),[index,onChange])}(index,onChange),onInputColumnChange=function useInputColumnChanged(step,onChange,dataTable){return(0,useDropdownChangeHandler.u)(step,((s,val)=>{s.args.column=val,s.args.dataType=null!=dataTable?(0,src_columns.lG)(dataTable,val):data.g.Unknown}),onChange)}(s,change,table),onInputColumnListChange=function useInputColumnListChanged(step,onChange){return(0,useDropdownChangeHandler.u)(step,((s,val)=>{s.args.columns=(0,primitives.$w)(s.args.columns??empty.LZ,val)}),onChange)}(s,change),onInputColumnListChangeAll=function useInputColumnListAllChanged(step,onChangeAll){return(0,useDropdownChangeAllHandler.X)(step,((s,val)=>{s.args.columns=val}),onChangeAll)}(s,change),onOutputColumnChange=function useOutputColumnChanged(step,onChange){return(0,useTextFieldChangeHandler.U)(step,((s,val)=>{s.args.to=val}),onChange)}(s,change);!function useDefaultOutputNameInitially(step,output,onChangeOutput){(0,react.useEffect)((()=>{onChangeOutput(output??step.id)}),[])}(s,output,changeOutput);const name=(0,react.useMemo)((()=>{const parts=s.verb.split(".");return parts[parts.length-1]}),[s.verb]);return null==StepArgs?null:(0,jsx_runtime.jsxs)(StepForm_styles_Container,{className:"step-component",children:[(0,steps.wx)(s.verb)?(0,jsx_runtime.jsx)(MultiDropdown.j,{required:!0,label:"Columns",placeholder:"Choose columns",styles:styles.Rj,selectedKeys:s.args.columns,options:(list=columns,list.map((name=>({key:name,text:name.toString()})))),onChange:onInputColumnListChange,onChangeAll:onInputColumnListChangeAll}):null,!hideInputColumn&&(0,steps.cF)(s.verb)?(0,jsx_runtime.jsx)(TableColumnDropdown,{required:!0,options:columnOptions,label:`Column to ${name}`,selectedKey:s.args.column,onChange:onInputColumnChange}):null,(0,jsx_runtime.jsx)(StepArgs,{step:s,workflow:g,metadata,output,onChangeOutput:changeOutput,onChange:change}),(0,steps._w)(s.verb)?(0,jsx_runtime.jsx)(lib_commonjs.TextField,{required:!0,label:"New column name",placeholder:"Column name",value:s.args.to,styles:styles.Rj,onChange:onOutputColumnChange}):null]});var list}));try{StepForm.displayName="StepForm",StepForm.__docgenInfo={description:"Lets us render the Steps in a loop while memoizing all the functions",displayName:"StepForm",props:{workflow:{defaultValue:null,description:"The workflow instance",name:"workflow",required:!0,type:{name:"Workflow"}},step:{defaultValue:null,description:"The processing step",name:"step",required:!0,type:{name:"Step<unknown>"}},index:{defaultValue:null,description:"The step index",name:"index",required:!0,type:{name:"number"}},metadata:{defaultValue:null,description:"TableMetadata",name:"metadata",required:!1,type:{name:"TableMetadata"}},output:{defaultValue:null,description:"The output table name",name:"output",required:!1,type:{name:"string"}},hideInputColumn:{defaultValue:null,description:"Indicates that the input column should be hidden or else shown and editable by the user.\nIt may be desirable to hide this if the transform is expected to use the selected column when the modal is launched directly from a table.",name:"hideInputColumn",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"The step onchange handler",name:"onChange",required:!0,type:{name:"(step: Step<unknown>, index: number) => void"}},onChangeOutput:{defaultValue:null,description:"Event handler for when the output table name changes",name:"onChangeOutput",required:!0,type:{name:"(value: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/StepForm/StepForm.tsx#StepForm"]={docgenInfo:StepForm.__docgenInfo,name:"StepForm",path:"../react/src/components/StepForm/StepForm.tsx#StepForm"})}catch(__react_docgen_typescript_loader_error){}},"../react/src/components/controls/CalendarPicker/CalendarPicker.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>CalendarPicker});var jsx_runtime=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/jsx-runtime.js"),lib_commonjs=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-virtual-b0efa69786/0/cache/@fluentui-react-npm-8.110.2-669ea1c8a4-df2ed3344f.zip/node_modules/@fluentui/react/lib-commonjs/index.js"),useBoolean=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-hooks-virtual-70e2e74d24/0/cache/@fluentui-react-hooks-npm-8.6.27-30ad7ea565-94006081cf.zip/node_modules/@fluentui/react-hooks/lib/useBoolean.js"),react=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js"),dist=__webpack_require__("../../.yarn/__virtual__/@essex-styled-components-virtual-7a9a1c8fa5/0/cache/@essex-styled-components-npm-0.0.13-b74877a32a-1397d77a45.zip/node_modules/@essex/styled-components/dist/index.js");const iconClass=(0,lib_commonjs.mergeStyles)({fontSize:20,height:20,width:20}),Container=dist.Z.div`
	display: inline;
`,CalendarContainer=dist.Z.div`
	display: flex;
	justify-content: space-between;
	align-items: center;
`,CalendarButton=(0,dist.Z)(lib_commonjs.FontIcon)`
	display: inline;
	float: left;
	margin-left: 8px;
	margin-right: 4px;
`,CalendarLabel=(0,dist.Z)(lib_commonjs.Label)`
	display: inline;
	float: left;
	margin-left: 8px;
	margin-right: 3px;
`,CalendarPicker=(0,react.memo)((function CalendarPicker({onSelectDate,value,disabled,cleanLabel}){const[selectedDate,setSelectedDate]=(0,react.useState)(value??new Date),[showCalendar,{toggle:toggleShowCalendar,setFalse:hideCalendar}]=(0,useBoolean.k)(!1),buttonContainerRef=(0,react.useRef)(null),onSelectDateChange=(0,react.useCallback)((date=>{setSelectedDate(date),hideCalendar()}),[hideCalendar]),theme=(0,lib_commonjs.useTheme)(),iconColors=(0,react.useMemo)((()=>({disabled:theme.palette.neutralTertiary,enabled:theme.palette.neutralPrimary})),[theme]);return(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsxs)(CalendarContainer,{ref:buttonContainerRef,children:[(0,jsx_runtime.jsx)(CalendarButton,{"aria-label":"Compass",iconName:"Calendar",className:iconClass,onClick:disabled?void 0:toggleShowCalendar,style:disabled?{cursor:"default",color:iconColors.disabled}:{cursor:"pointer",color:iconColors.enabled}}),null==selectedDate||cleanLabel?null:(0,jsx_runtime.jsx)(CalendarLabel,{children:cleanLabel?"":selectedDate?.toLocaleDateString()})]}),showCalendar&&(0,jsx_runtime.jsx)(lib_commonjs.Callout,{isBeakVisible:!1,gapSpace:0,doNotLayer:!1,target:buttonContainerRef,directionalHint:lib_commonjs.DirectionalHint.bottomLeftEdge,onDismiss:hideCalendar,setInitialFocus:!0,children:(0,jsx_runtime.jsx)(lib_commonjs.FocusTrapZone,{isClickableOutsideFocusTrap:!0,children:(0,jsx_runtime.jsx)(lib_commonjs.Calendar,{onDismiss:hideCalendar,showMonthPickerAsOverlay:!0,highlightSelectedMonth:!0,showGoToToday:!1,onSelectDate:date=>{onSelectDate(date),onSelectDateChange(date)},value:selectedDate,strings:lib_commonjs.defaultCalendarStrings})})})]})}));try{CalendarPicker.displayName="CalendarPicker",CalendarPicker.__docgenInfo={description:"",displayName:"CalendarPicker",props:{onSelectDate:{defaultValue:null,description:"",name:"onSelectDate",required:!0,type:{name:"(date: Date) => void"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"Date"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},cleanLabel:{defaultValue:null,description:"",name:"cleanLabel",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/controls/CalendarPicker/CalendarPicker.tsx#CalendarPicker"]={docgenInfo:CalendarPicker.__docgenInfo,name:"CalendarPicker",path:"../react/src/components/controls/CalendarPicker/CalendarPicker.tsx#CalendarPicker"})}catch(__react_docgen_typescript_loader_error){}},"../react/src/components/verbs/forms/AggregateForm/AggregateForm.base.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>AggregateFormBase});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/jsx-runtime.js"),_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../schema/src/workflow/verbs.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js"),_forms_index_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../react/src/components/verbs/forms/forms/factories.ts"),_forms_index_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../react/src/components/verbs/forms/forms/VerbForm.tsx");const AggregateFormBase=function AggregateFormBase({step,onChange,columns}){const verbInputs=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>[(0,_forms_index_js__WEBPACK_IMPORTED_MODULE_2__.j6)("Column to group by",columns,step.args.groupby,((s,key)=>{s.args.groupby=key}),{required:!0,placeholder:"Choose column"}),(0,_forms_index_js__WEBPACK_IMPORTED_MODULE_2__.ih)("Function",_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Ei,step.args.operation,((s,key)=>{s.args.operation=key}),{required:!0,placeholder:"Choose function"})]),[step,columns]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_forms_index_js__WEBPACK_IMPORTED_MODULE_4__.g,{step,inputs:verbInputs,onChange})};try{AggregateFormBase.displayName="AggregateFormBase",AggregateFormBase.__docgenInfo={description:"Just the group/column/op inputs for an aggregation.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"AggregateFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<AggregateArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<AggregateArgs>"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/AggregateForm/AggregateForm.base.tsx#AggregateFormBase"]={docgenInfo:AggregateFormBase.__docgenInfo,name:"AggregateFormBase",path:"../react/src/components/verbs/forms/AggregateForm/AggregateForm.base.tsx#AggregateFormBase"})}catch(__react_docgen_typescript_loader_error){}},"../react/src/components/verbs/forms/BinForm/BinForm.base.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{i:()=>BinFormBase});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/jsx-runtime.js"),_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../schema/src/workflow/verbs.ts"),_datashaper_utilities__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../.yarn/__virtual__/@datashaper-utilities-virtual-bd77110408/1/javascript/utilities/src/primitives.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js"),_forms_index_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../react/src/components/verbs/forms/forms/factories.ts"),_forms_index_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../react/src/components/verbs/forms/forms/types.ts"),_forms_index_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../react/src/components/verbs/forms/forms/VerbForm.tsx");const BinFormBase=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function BinFormBase({step,onChange}){const verbInputs=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>[(0,_forms_index_js__WEBPACK_IMPORTED_MODULE_2__.ih)("Bin strategy",_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo,step.args.strategy,((s,opt)=>{s.args.strategy=opt}),{required:!0}),{label:"Bin count",type:_forms_index_js__WEBPACK_IMPORTED_MODULE_4__.T.NumberSpinner,if:step.args.strategy===_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo.FixedCount,min:1,max:100,step:1,onChange:(s,opt)=>{s.args.fixedcount=(0,_datashaper_utilities__WEBPACK_IMPORTED_MODULE_5__.OK)(opt)},current:step.args.fixedcount},{label:"Bin size",type:_forms_index_js__WEBPACK_IMPORTED_MODULE_4__.T.NumberSpinner,if:step.args.strategy===_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo.FixedWidth,min:1,onChange:(s,opt)=>{s.args.fixedwidth=(0,_datashaper_utilities__WEBPACK_IMPORTED_MODULE_5__.OK)(opt)},current:step.args.fixedwidth},{label:"Min Boundary",type:_forms_index_js__WEBPACK_IMPORTED_MODULE_4__.T.NumberSpinner,if:step.args.strategy!==_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo.Auto,onChange:(s,opt)=>{s.args.min=(0,_datashaper_utilities__WEBPACK_IMPORTED_MODULE_5__.OK)(opt)},current:step.args.min,advanced:!0},{label:"Max Boundary",type:_forms_index_js__WEBPACK_IMPORTED_MODULE_4__.T.NumberSpinner,if:step.args.strategy!==_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo.Auto,onChange:(s,opt)=>{s.args.max=(0,_datashaper_utilities__WEBPACK_IMPORTED_MODULE_5__.OK)(opt)},current:step.args.max,advanced:!0},(0,_forms_index_js__WEBPACK_IMPORTED_MODULE_2__.MJ)("Clamp to min/max",step.args.clamped,((s,val)=>{s.args.clamped=val}),{if:step.args.strategy!==_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo.Auto,styles:{root:{marginTop:8}},advanced:!0}),(0,_forms_index_js__WEBPACK_IMPORTED_MODULE_2__.MJ)("Nice rounding",step.args.nice,((s,val)=>{s.args.nice=val}),{if:step.args.strategy!==_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo.FixedWidth&&step.args.strategy!==_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.Lo.FixedCount,styles:{root:{marginTop:8}}}),(0,_forms_index_js__WEBPACK_IMPORTED_MODULE_2__.MJ)("Print range as output",step.args.printRange,((s,opt)=>{s.args.printRange=opt}),{styles:{root:{marginTop:8}}})]),[step]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_forms_index_js__WEBPACK_IMPORTED_MODULE_6__.g,{onChange,step,inputs:verbInputs})}));try{BinFormBase.displayName="BinFormBase",BinFormBase.__docgenInfo={description:"Provides inputs for a binning step.",displayName:"BinFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<BinArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<BinArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/BinForm/BinForm.base.tsx#BinFormBase"]={docgenInfo:BinFormBase.__docgenInfo,name:"BinFormBase",path:"../react/src/components/verbs/forms/BinForm/BinForm.base.tsx#BinFormBase"})}catch(__react_docgen_typescript_loader_error){}},"../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.base.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>EncodeDecodeFormBase});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/jsx-runtime.js"),_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../schema/src/workflow/verbs.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js"),_forms_index_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../react/src/components/verbs/forms/forms/factories.ts"),_forms_index_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../react/src/components/verbs/forms/forms/VerbForm.tsx");const EncodeDecodeFormBase=function EncodeDecodeFormBase({step,onChange}){const verbInputs=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>[(0,_forms_index_js__WEBPACK_IMPORTED_MODULE_2__.ih)("Codebook strategy",_datashaper_schema__WEBPACK_IMPORTED_MODULE_3__.ZN,step.args.strategy,((s,opt)=>{s.args.strategy=opt}),{required:!0,placeholder:"Choose strategy"})]),[step]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_forms_index_js__WEBPACK_IMPORTED_MODULE_4__.g,{step,inputs:verbInputs,onChange})};try{EncodeDecodeFormBase.displayName="EncodeDecodeFormBase",EncodeDecodeFormBase.__docgenInfo={description:"Just the group/column/op inputs for an aggregation.\nInput table is expected to be edited elsewhere and configured as the step input.",displayName:"EncodeDecodeFormBase",props:{step:{defaultValue:null,description:"",name:"step",required:!0,type:{name:"Step<EncodeDecodeArgs>"}},onChange:{defaultValue:null,description:"Event handler for when the step is changed in the component",name:"onChange",required:!1,type:{name:"StepChangeFunction<EncodeDecodeArgs>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.base.tsx#EncodeDecodeFormBase"]={docgenInfo:EncodeDecodeFormBase.__docgenInfo,name:"EncodeDecodeFormBase",path:"../react/src/components/verbs/forms/EncodeDecodeForm/EncodeDecodeForm.base.tsx#EncodeDecodeFormBase"})}catch(__react_docgen_typescript_loader_error){}},"../react/src/hooks/controls/mapping.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{My:()=>useHandleDelete,Sb:()=>useHandleKeyChange,xB:()=>useHandleValueChange});var _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../schema/src/data.ts"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js");function useHandleKeyChange(mapList,onChange){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((previousKey,newKey)=>{const mapping={};for(const key in mapList)key===previousKey.toString()?mapping[newKey]=mapList[key]:mapping[key]=mapList[key];onChange?.(mapping)}),[mapList,onChange])}function useHandleValueChange(mapList,dataType,onChange){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((key,newValue)=>{const mapping={};for(const keyElement in mapList)mapping[keyElement]=keyElement===key.toString()?dataType===_datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Date?new Date(newValue):newValue:mapList[keyElement];onChange?.(mapping)}),[onChange,dataType,mapList])}function useHandleDelete(mapList,onChange){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((key=>{const mapping={...mapList};mapping[key]=void 0,onChange?.(mapping)}),[mapList,onChange])}},"../react/src/hooks/controls/useMappingPairs.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>useMappingPairs});var jsx_runtime=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/jsx-runtime.js"),data=__webpack_require__("../schema/src/data.ts"),src_data=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/data.ts"),dist=__webpack_require__("../../.yarn/__virtual__/@essex-styled-components-virtual-7a9a1c8fa5/0/cache/@essex-styled-components-npm-0.0.13-b74877a32a-1397d77a45.zip/node_modules/@essex/styled-components/dist/index.js"),lib_commonjs=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-virtual-b0efa69786/0/cache/@fluentui-react-npm-8.110.2-669ea1c8a4-df2ed3344f.zip/node_modules/@fluentui/react/lib-commonjs/index.js"),react=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js"),CalendarPicker=__webpack_require__("../react/src/components/controls/CalendarPicker/CalendarPicker.tsx"),forms_styles=__webpack_require__("../react/src/components/verbs/forms/styles.ts"),styles=__webpack_require__("../react/src/components/styles.ts");const Container=dist.Z.div`
	display: flex;
	flex-direction: column;
`,TextValue=(styles.si.root,(0,dist.Z)(lib_commonjs.TextField)`
	display: inline;
`),DataTypeField=((0,dist.Z)(lib_commonjs.Label)`
	display: inline;
	padding-left: 10px;
	padding-right: 10px;
`,(0,react.memo)((function DataTypeField({dataType,keyValue,value,placeholder,onKeyChange,onValueChange,isKey,dropdownStyles,disabled}){const styles=(0,lib_commonjs.mergeStyleSets)(forms_styles.$F,dropdownStyles),onSelectDate=(0,react.useCallback)((date=>{const val=(0,src_data.oQ)(date,dataType);isKey?onKeyChange(new Date(value).toISOString(),new Date(val).toISOString()):onValueChange(new Date(keyValue).toISOString(),new Date(val).toISOString())}),[onKeyChange,onValueChange,dataType,isKey,value,keyValue]),onChangeTextFieldValue=(0,react.useCallback)(((_event,newValue)=>{const val=(0,src_data.oQ)(newValue,dataType);isKey?onKeyChange(value.toString(),val.toString()):onValueChange(keyValue,val)}),[onKeyChange,onValueChange,dataType,isKey,value,keyValue]),spinButtonOnChange=(0,react.useCallback)(((_event,newValue)=>{if(null!=newValue){const val=(0,src_data.oQ)(newValue,dataType);isKey?onKeyChange(value,val):onValueChange(keyValue,val)}}),[onKeyChange,onValueChange,dataType,isKey,value,keyValue]),dropDownOnChange=(0,react.useCallback)(((_e,newValue)=>{null!=newValue&&(isKey?onKeyChange(value,newValue.key):onValueChange(keyValue,"true"===newValue.key))}),[onKeyChange,onValueChange,isKey,value,keyValue]);return(0,jsx_runtime.jsxs)(Container,{children:[dataType===data.g.Date?(0,jsx_runtime.jsx)(CalendarPicker.h,{onSelectDate,disabled,value}):null,dataType===data.g.String?(0,jsx_runtime.jsx)(TextValue,{onChange:onChangeTextFieldValue,placeholder,value,styles,disabled}):null,dataType===data.g.Number?(0,jsx_runtime.jsx)(lib_commonjs.SpinButton,{min:0,step:1,value,styles,onChange:spinButtonOnChange,disabled}):null,dataType===data.g.Boolean?(0,jsx_runtime.jsx)(lib_commonjs.Dropdown,{selectedKey:value.toString(),options:[{key:"true",text:"true"},{key:"false",text:"false"}],styles,onChange:dropDownOnChange,disabled}):null]})})));try{DataTypeField.displayName="DataTypeField",DataTypeField.__docgenInfo={description:"",displayName:"DataTypeField",props:{dataType:{defaultValue:null,description:"",name:"dataType",required:!0,type:{name:"DataType"}},keyValue:{defaultValue:null,description:"",name:"keyValue",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"any"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string"}},onKeyChange:{defaultValue:null,description:"",name:"onKeyChange",required:!0,type:{name:"(oldKey: any, newKey: any) => void"}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!0,type:{name:"(key: any, newValue: any) => void"}},isKey:{defaultValue:null,description:"",name:"isKey",required:!0,type:{name:"boolean"}},dropdownStyles:{defaultValue:null,description:"",name:"dropdownStyles",required:!1,type:{name:"IStyleFunctionOrObject<ITextFieldStyleProps, ITextFieldStyles>"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/verbs/forms/shared/DataTypeField.tsx#DataTypeField"]={docgenInfo:DataTypeField.__docgenInfo,name:"DataTypeField",path:"../react/src/components/verbs/forms/shared/DataTypeField.tsx#DataTypeField"})}catch(__react_docgen_typescript_loader_error){}var empty=__webpack_require__("../react/src/empty.ts");function useMappingPairs(mapping,dataType,onKeyChange,onValueChange,onDelete,dropdownStyles,disabled){return(0,react.useMemo)((()=>Object.entries(mapping||empty.Nu).map(((valuePair,index)=>(0,jsx_runtime.jsx)(ColumnPair,{valuePair,dataType,onKeyChange,onValueChange,onDelete,dropdownStyles,disabled},`column-Mapping-${index}`)))),[mapping,dataType,dropdownStyles,disabled,onKeyChange,onValueChange,onDelete])}const ColumnPair=(0,react.memo)((function ColumnPair({valuePair,dataType,onKeyChange,onValueChange,onDelete,dropdownStyles,disabled}){const[o,q]=valuePair;let keyValue=" "!==o?(0,src_data.oQ)(o,dataType):o;const propertyValue=(0,src_data.oQ)(q,dataType);dataType===data.g.Boolean&&(keyValue="false"!==o);return(0,jsx_runtime.jsxs)(ColumnPairContainer,{children:[(0,jsx_runtime.jsx)(DataTypeField,{placeholder:"Current value",dataType,value:keyValue,onKeyChange,onValueChange:onKeyChange,isKey:!0,keyValue,dropdownStyles,disabled}),(0,jsx_runtime.jsx)(lib_commonjs.Icon,{iconName:"Forward",styles:{root:{marginLeft:4,marginRight:4}}}),(0,jsx_runtime.jsx)(DataTypeField,{placeholder:"New Value",dataType,keyValue,value:propertyValue,onKeyChange:onValueChange,onValueChange,isKey:!1,dropdownStyles,disabled}),(0,jsx_runtime.jsx)(lib_commonjs.IconButton,{title:"Remove this mapping",iconProps:deleteIconProps,onClick:()=>onDelete(dataType===data.g.Date?keyValue.toISOString():keyValue),disabled})]})})),deleteIconProps={iconName:"Delete"},ColumnPairContainer=dist.Z.div`
	display: flex;
	justify-content: flex-start;
	align-items: center;
`},"../react/src/hooks/workflow/useWorkflow.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>useWorkflow});var _datashaper_workflow__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../.yarn/__virtual__/@datashaper-workflow-virtual-9a99b417c8/1/javascript/workflow/src/resources/Workflow/Workflow.ts"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js");function useWorkflow(input,inputs){const[workflow,setWorkflow]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>new _datashaper_workflow__WEBPACK_IMPORTED_MODULE_1__.h(input?.toSchema())));return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function resetWorkflowWhenWorkflowChanges(){setWorkflow(new _datashaper_workflow__WEBPACK_IMPORTED_MODULE_1__.h(input?.toSchema()))}),[input]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function syncDataTablesWhenInputsChange(){inputs&&workflow.addInputTables(inputs)}),[workflow,inputs]),workflow}},"../react/src/hooks/workflow/useWorkflowDataTable.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{w:()=>useWorkflowDataTable});var observable_hooks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../.yarn/__virtual__/observable-hooks-virtual-a9893ed7ca/0/cache/observable-hooks-npm-4.2.3-58c1824e2e-b36c22f51e.zip/node_modules/observable-hooks/dist/index.mjs"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-b9214a9bd7.zip/node_modules/react/index.js"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../.yarn/cache/rxjs-npm-7.8.1-41c443a75b-b10cac1a52.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../.yarn/cache/rxjs-npm-7.8.1-41c443a75b-b10cac1a52.zip/node_modules/rxjs/dist/esm5/internal/observable/from.js");function useWorkflowDataTable(id,workflow){const observable=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{let result;return result=null==id?workflow?.input$:workflow?.read$(id),result?result.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.U)((t=>t?.table))):(0,rxjs__WEBPACK_IMPORTED_MODULE_2__.D)([])}),[workflow,id]);return(0,observable_hooks__WEBPACK_IMPORTED_MODULE_3__.pw)(observable)}},"../react/src/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getInputNode(step,input){if(null==step.input)return;return step.input[input]?.step}__webpack_require__.d(__webpack_exports__,{$:()=>getInputNode})}}]);
//# sourceMappingURL=983.5c8dc435.iframe.bundle.js.map