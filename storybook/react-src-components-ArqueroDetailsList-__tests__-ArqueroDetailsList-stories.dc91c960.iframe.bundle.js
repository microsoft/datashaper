/*! For license information please see react-src-components-ArqueroDetailsList-__tests__-ArqueroDetailsList-stories.dc91c960.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_datashaper_stories=self.webpackChunk_datashaper_stories||[]).push([[127],{"../../.yarn/__virtual__/@essex-styled-components-virtual-824a0a4f33/0/cache/@essex-styled-components-npm-0.0.9-39f2c1b1db-85c3abaffe.zip/node_modules/@essex/styled-components/dist/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/unplugged/styled-components-virtual-f69850ee39/node_modules/styled-components/dist/styled-components.browser.cjs.js");const __WEBPACK_DEFAULT_EXPORT__=styled_components__WEBPACK_IMPORTED_MODULE_0__.default.default??styled_components__WEBPACK_IMPORTED_MODULE_0__.default},"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/binning.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>fixedBinCount,z:()=>fixedBinStep});var arquero__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/arquero-npm-5.1.0-441d7e4e6f-491560706c.zip/node_modules/arquero/src/index.js");function fixedBinCount(column,min,max,count,clamped=!1,format=!1){return fixedBinStep(column,min,max,(max-min)/count,clamped,format)}function fixedBinStep(column,min=0,max=0,step=0,clamped=!1,format=!1){const binner=function bin(min,max,step,clamped){const count=Math.floor((max-min)/step),ultimate=min+step*count,penultimate=min+step*(count-1),rebinmax=ultimate>=max;return function(value){const candidate=arquero__WEBPACK_IMPORTED_MODULE_0__.op.bin(value,min,max,step);if(clamped){if(candidate===-1/0)return min;if(candidate===1/0)return rebinmax?penultimate:ultimate}return candidate===-1/0||candidate===1/0?candidate:candidate>=max?penultimate:candidate}}(min,max,step,clamped);return(0,arquero__WEBPACK_IMPORTED_MODULE_0__.YU)((d=>{const value=binner(d[column]);if(format){if(value<min)return`<${min}`;if(value>max)return`>${max}`;const top=value+step;return value>=max-step?`${value} to ${top>max?max:top}`:`${value} to <${top}`}return value}))}},"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columnTypes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>columnTypes});var _columns_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columns.ts");function columnTypes(table,columns){return(columns?table.select(columns):table).sample(100).columnNames().reduce(((acc,cur)=>(acc[cur]=(0,_columns_js__WEBPACK_IMPORTED_MODULE_0__.lG)(table,cur),acc)),{})}},"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columns.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{lG:()=>columnType});var _datashaper_schema__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../schema/src/data.ts"),_data_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/data.ts");function columnType(table,column){const values=table.array(column);let dataType=_datashaper_schema__WEBPACK_IMPORTED_MODULE_0__.g.Unknown;return values.some((value=>null!=value&&(dataType=(0,_data_js__WEBPACK_IMPORTED_MODULE_1__.wj)(value),!0))),dataType}},"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/data.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ce:()=>formatIfNumber,oQ:()=>coerce,wj:()=>determineType});var _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../schema/src/data.ts"),lodash_es_isArray_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isArray.js"),lodash_es_isDate_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isDate.js"),lodash_es_isNaN_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isNaN.js"),lodash_es_isNil_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isNil.js");function determineType(value){if((0,lodash_es_isNil_js__WEBPACK_IMPORTED_MODULE_0__.Z)(value))return _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Unknown;if((0,lodash_es_isNaN_js__WEBPACK_IMPORTED_MODULE_2__.Z)(value))return _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Number;const type=typeof value;if("object"===type){if((0,lodash_es_isDate_js__WEBPACK_IMPORTED_MODULE_3__.Z)(value))return _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Date;if((0,lodash_es_isArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(value))return _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Array}return type}function coerce(value,dataType){switch(dataType){case _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Number:return Number.parseFloat(value);case _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Date:return new Date(value);case _datashaper_schema__WEBPACK_IMPORTED_MODULE_1__.g.Boolean:return!!value;default:return value}}function format(value,options){if(0===value)return"0";const{minExp=5,precision=2}=options||{},getExp=(value,exp=0)=>value%10==0?getExp(value/10,exp+1):exp;let exp,mantissa;if(Number.isInteger(value)){if(exp=getExp(value),!Number.isInteger(exp)||0===exp||exp<=minExp)return`${value}`}else if(exp=Math.floor(Math.log10(value)),mantissa=value/Math.pow(10,exp),Math.abs(exp)<=minExp||!Number.isInteger(mantissa)){const fixed=value.toFixed(precision);return`${Number.parseFloat(fixed)}`}return mantissa=value/Math.pow(10,exp),`${mantissa}e${exp}`}function formatIfNumber(value){if("number"==typeof value)return format(value);if("string"==typeof value){const parsed=Number.parseFloat(value);if(Number.isFinite(parsed))return format(parsed)}return value}},"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/generateCodebook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>generateCodebook});var factories=__webpack_require__("../schema/src/factories.ts"),data=__webpack_require__("../schema/src/data.ts"),guessDataType=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/guessDataType.ts");function guessDataTypeFromValues(values,limit=1/0){const guesser=(0,guessDataType._H)(),mapTypes=new Map;for(let i=0;i<limit&&i<values.length;i++){const dataTypeResult=guesser(`${values[i]}`);mapTypes.set(dataTypeResult,!0)}if(mapTypes.delete(data.g.Null),0===mapTypes.size)return data.g.Null;if(1===mapTypes.size)for(const key of mapTypes.keys())return key;return mapTypes.has(data.g.Array)?data.g.Array:data.g.String}var parseTypes=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/parseTypes.ts");function generateCodebook(table,options){const codecook=(0,factories.Mk)({fields:[]}),opts={autoType:!0,autoMax:1/0,...options};return table.columnNames().forEach((column=>{const field={name:column,type:data.g.String};if(opts.autoType){const values=table.array(column),columnType=guessDataTypeFromValues(values,opts.autoMax);if(field.type=columnType,columnType===data.g.Array){const arrayParse=(0,parseTypes.BY)(data.g.Array),subtype=guessDataTypeFromValues(values.flatMap((v=>v?arrayParse(v.toString()):null)),opts.autoMax);field.subtype=subtype}else{const parse=(0,parseTypes.BY)(columnType),parsed=values.map(parse);field.nature=function inferNatureFromValues(values,options){const opts={limit:1/0,categoricalCountLimit:10,...options},vals=opts.limit<1/0?values.slice(0,opts.limit):values,uniques=[...new Set(vals)].filter((val=>null!=val&&val!==opts.nullValue));if(2===uniques.length)return data.BO.Binary;if(uniques.every((val=>"number"==typeof val))){if(!uniques.every(Number.isInteger))return data.BO.Continuous;if(uniques.length<=opts.categoricalCountLimit){const sorted=uniques.sort(((a,b)=>a-b));let isSeries=!0,index=1;for(;index<sorted.length&&isSeries;)isSeries=sorted[index]===sorted[index-1]+1,index++;if(isSeries)return data.BO.Ordinal}return data.BO.Discrete}return uniques.every((val=>"string"==typeof val))&&uniques.length<=opts.categoricalCountLimit?data.BO.Nominal:data.BO.Continuous}(parsed,{limit:opts.autoMax})}}codecook.fields.push(field)})),codecook}},"../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/introspect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>introspect});var columnTypes=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/columnTypes.ts"),data=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/data.ts"),src_data=__webpack_require__("../schema/src/data.ts"),src=__webpack_require__("../../.yarn/cache/arquero-npm-5.1.0-441d7e4e6f-491560706c.zip/node_modules/arquero/src/index.js"),binning=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/binning.ts");function stats(table,columns){const selected=columns?table.select(columns):table,reqStats=function requiredStats(table){const args=table.columnNames().reduce(((acc,cur)=>(acc[`${cur}.count`]=src.op.count(),acc[`${cur}.distinct`]=src.op.distinct(cur),acc[`${cur}.invalid`]=src.op.invalid(cur),acc[`${cur}.mode`]=src.op.mode(cur),acc)),{});return table.rollup(args).objects()[0]}(selected),optStats=function optionalStats(table,reqStats){const args=table.columnNames().reduce(((acc,cur)=>{const mode=reqStats[`${cur}.mode`],type=(0,data.wj)(mode);return type!==src_data.g.Number&&type!==src_data.g.Date||(acc[`${cur}.minimum`]=src.op.min(cur),acc[`${cur}.maximum`]=src.op.max(cur),acc[`${cur}.mean`]=src.op.mean(cur),acc[`${cur}.median`]=src.op.median(cur),acc[`${cur}.stdev`]=src.op.stdev(cur)),acc}),{});return table.rollup(args).objects()[0]}(selected,reqStats),bins=function stats_binning(table,reqStats,optStats,columns){const filter=function filterColumns(columns,filter){const set=new Set(columns),filt=filter||(()=>!0);return(name,index,array)=>columns?set.has(name)&&filt(name,index,array):filt(name,index,array)}(columns,(name=>{const mode=reqStats[`${name}.mode`];return(0,data.wj)(mode)===src_data.g.Number})),numeric=table.columnNames(filter),binArgs=numeric.reduce(((acc,cur)=>{const min=optStats[`${cur}.minimum`],max=optStats[`${cur}.maximum`];return reqStats[`${cur}.distinct`]>10&&(acc[cur]=(0,binning.B)(cur,min,max,10,!0)),acc}),{}),binRollup=table.select(numeric).derive(binArgs),counted=numeric.reduce(((acc,cur)=>{const min=optStats[`${cur}.minimum`],max=optStats[`${cur}.maximum`],distinct=reqStats[`${cur}.distinct`],bins=binRollup.groupby(cur).count().orderby(cur).objects().map((d=>({min:d[cur],count:d.count})));return null===bins[0].min&&(bins[0].min="(empty)"),acc[`${cur}.bins`]=function fillBins(bins,min,max,count,distinct){if(distinct<=count)return bins;const step=(max-min)/count,hash=bins.reduce(((acc,cur)=>(acc[cur.min]=cur,acc)),{}),mins=new Array(10).fill(step).map(((v,i)=>v*i+min)),filled=mins.map((v=>hash[v]||{min:v,count:0}));"(empty)"===bins[0].min&&filled.unshift(bins[0]);return filled}(bins,min,max,10,distinct),acc}),{});return counted}(selected,reqStats,optStats),cats=function categories(table,reqStats,limit=20){const text=table.columnNames((name=>{const mode=reqStats[`${name}.mode`],distinct=reqStats[`${name}.distinct`];return(0,data.wj)(mode)===src_data.g.String&&distinct<=limit}));return text.reduce(((acc,cur)=>{const counted=table.impute({[cur]:()=>"(empty)"}).groupby(cur).count().objects().sort(((a,b)=>`${a[cur]}`.localeCompare(`${b[cur]}`))).map((d=>({name:d[cur],count:d.count})));return acc[cur]=counted,acc}),{})}(selected,reqStats);return selected.columnNames().reduce(((acc,cur)=>{const mode=reqStats[`${cur}.mode`],type=(0,data.wj)(mode),req={type,count:reqStats[`${cur}.count`],distinct:reqStats[`${cur}.distinct`],invalid:reqStats[`${cur}.invalid`],mode},optn=type===src_data.g.Number?{minimum:optStats[`${cur}.minimum`],maximum:optStats[`${cur}.maximum`],mean:optStats[`${cur}.mean`],median:optStats[`${cur}.median`],stdev:optStats[`${cur}.stdev`],bins:bins[`${cur}.bins`]}:{},optt=type===src_data.g.String?{categories:cats[`${cur}`]}:{};return acc[cur]={...req,...optn,...optt},acc}),{})}function introspect(table,detailed=!1,columns){const meta=detailed?function detailedMeta(table,columns){const sts=stats(table.ungroup(),columns);return Object.entries(sts).reduce(((acc,cur)=>{const[name,stat]=cur,type=(0,data.wj)(stat.mode);return acc[name]={type,...stat},acc}),{})}(table,columns):function basicMeta(table,columns){const t=(0,columnTypes.H)(table.ungroup(),columns);return Object.entries(t).reduce(((acc,cur)=>{const[name,type]=cur;return acc[name]={type},acc}),{})}(table,columns);return{rows:table.numRows(),cols:table.numCols(),columns:meta}}},"../react/src/components/ArqueroDetailsList/__tests__/ArqueroDetailsList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,ColumnValidation:()=>ColumnValidation,Columns:()=>ArqueroDetailsList_stories_Columns,Features:()=>Features,Fill:()=>Fill,Micro:()=>Micro,Performance:()=>ArqueroDetailsList_stories_Performance,RowGrouping:()=>ArqueroDetailsList_stories_RowGrouping,Selection:()=>Selection,default:()=>ArqueroDetailsList_stories});var ArqueroDetailsList=__webpack_require__("../react/src/components/ArqueroDetailsList/ArqueroDetailsList.tsx"),jsx_runtime=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/jsx-runtime.js");var lib_commonjs=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-virtual-84c51a9a38/0/cache/@fluentui-react-npm-8.105.4-0150463498-5dc0521434.zip/node_modules/@fluentui/react/lib-commonjs/index.js"),react=__webpack_require__("../../.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js"),styled_components_browser_cjs=__webpack_require__("../../.yarn/unplugged/styled-components-virtual-f69850ee39/node_modules/styled-components/dist/styled-components.browser.cjs.js"),dist=__webpack_require__("../../.yarn/__virtual__/@essex-styled-components-virtual-824a0a4f33/0/cache/@essex-styled-components-npm-0.0.9-39f2c1b1db-85c3abaffe.zip/node_modules/@essex/styled-components/dist/index.js");dist.Z.div`
	display: flex;
`,dist.Z.div`
	display: inline;
	gap: 8px;
	padding: 10px;
`,dist.Z.div`
	width: 200px;
`;const Table=dist.Z.div`
	margin-top: 12px;
	height: calc(100vh - 220px);
`;var empty=__webpack_require__("../react/src/empty.ts");const Columns=(0,react.memo)((function Columns({table,...args}){const{selected,onSelect}=function useSelectedColumn(){const[selected,setSelected]=(0,react.useState)();return{selected,onSelect:(0,react.useCallback)(((_evt,column)=>setSelected(column?.name)),[setSelected])}}(),{checkboxes}=function useCheckboxConfigs(table){const[checked,setChecked]=(0,react.useState)(table?.columnNames()||empty.LZ);return{checkboxes:(0,react.useMemo)((()=>table?.columnNames().map((column=>({label:column,checked:checked?.includes(column),onChange:(_ev,checked)=>{setChecked((prev=>checked?[...prev,column]:prev.filter((c=>c!==column))))}})))||empty.LZ),[table,checked,setChecked])}}(table),{columns}=function useColumns(checkboxes){return{columns:(0,react.useMemo)((()=>checkboxes.filter((c=>c.checked)).map((({label})=>({key:label,name:label,fieldName:label,minWidth:100,iconName:"Symbol"===label?"FavoriteStarFill":"Date"===label?"Calendar":void 0})))),[checkboxes])}}(checkboxes);return table?(0,jsx_runtime.jsxs)(Table,{children:[(0,jsx_runtime.jsx)(FullColumnList,{children:checkboxes?.map((config=>(0,jsx_runtime.jsx)(lib_commonjs.Checkbox,{...config},config.label)))}),(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{...args,table,columns,selectedColumn:selected,onColumnSelect:onSelect,showColumnBorders:!0,sortable:!0,defaultSortColumn:"Date"})]}):(0,jsx_runtime.jsx)("div",{children:"Loading..."})})),FullColumnList=styled_components_browser_cjs.default.div`
	display: flex;
	gap: 32px;
	margin-bottom: 20px;
`;try{Columns.displayName="Columns",Columns.__docgenInfo={description:"",displayName:"Columns",props:{table:{defaultValue:null,description:"",name:"table",required:!0,type:{name:"ColumnTable"}},validationResult:{defaultValue:null,description:"",name:"validationResult",required:!1,type:{name:"ValidationResult"}},features:{defaultValue:null,description:"",name:"features",required:!1,type:{name:"ArqueroDetailsListFeatures"}},metadata:{defaultValue:null,description:"Optional metadata to use for column smart features.\nUse this if you need to cache expensive stats computes separately\nto prevent recompute on remounting.",name:"metadata",required:!1,type:{name:"TableMetadata"}},fields:{defaultValue:null,description:"",name:"fields",required:!1,type:{name:"Field[]"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"number"}},limit:{defaultValue:null,description:"",name:"limit",required:!1,type:{name:"number"}},sortable:{defaultValue:null,description:"",name:"sortable",required:!1,type:{name:"boolean"}},striped:{defaultValue:null,description:"Indicates whether to use even/odd row coloring.",name:"striped",required:!1,type:{name:"boolean"}},showColumnBorders:{defaultValue:null,description:"Indicates to use borders between columns so the cells look more like a spreadsheet (row borders are always on).",name:"showColumnBorders",required:!1,type:{name:"boolean"}},fill:{defaultValue:null,description:'Indicates that the table should fill its container space,\nincluding the use of pseudo columns and rows to present a "spreadsheet-like" view.',name:"fill",required:!1,type:{name:"boolean"}},onColumnSelect:{defaultValue:null,description:"Fires a column-wide select event for all columns, including headers.\nIf you need custom behavior, use the built-in table-level onColumnHeaderClick and per-column onClick",name:"onColumnSelect",required:!1,type:{name:"ColumnSelectFunction"}},onCellDropdownSelect:{defaultValue:null,description:"If array cells are displayed with a dropdown, this will fire when a value is selected.",name:"onCellDropdownSelect",required:!1,type:{name:"(event: FormEvent<HTMLDivElement>, option?: IDropdownOption<any>, index?: number) => void"}},onRenderGroupHeader:{defaultValue:null,description:"Passthrough to the group header rendering, when using the group by verb",name:"onRenderGroupHeader",required:!1,type:{name:"GroupHeaderFunction"}},isHeaderFixed:{defaultValue:null,description:"Fixed headers on top when scrolling",name:"isHeaderFixed",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Resizable columns",name:"resizable",required:!1,type:{name:"boolean"}},selectedColumn:{defaultValue:null,description:"Key for a selected column - this is not normally an option in DetailsList",name:"selectedColumn",required:!1,type:{name:"string"}},defaultSortColumn:{defaultValue:null,description:"Default sort column",name:"defaultSortColumn",required:!1,type:{name:"string"}},defaultSortDirection:{defaultValue:null,description:"Resizable sort direction",name:"defaultSortDirection",required:!1,type:{name:"SortDirection"}},compactRowHeight:{defaultValue:null,description:"If compact = true, override the default height.\nFluentUI hard-codes the compact height, so this gives us a way to customize how dense the rows are.\nNote that if compact = false (the default), this has no effect.",name:"compactRowHeight",required:!1,type:{name:"number"}},style:{defaultValue:null,description:"Style to pass to the container.\nUse the regular DetailsList.styles prop for deeper customization of the table itself.",name:"style",required:!1,type:{name:"CSSProperties"}},componentRef:{defaultValue:null,description:"Callback to access the IDetailsList interface. Use this instead of ref for accessing\nthe public methods and properties of the component.",name:"componentRef",required:!1,type:{name:"IRefObject<IDetailsList>"}},className:{defaultValue:null,description:"Class name to add to the root element.",name:"className",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"Accessible label describing or summarizing the list.\n@deprecated use `ariaLabelForGrid`",name:"ariaLabel",required:!1,type:{name:"string"}},styles:{defaultValue:null,description:"Custom overrides to the themed or default styles.",name:"styles",required:!1,type:{name:"IStyleFunctionOrObject<IDetailsListStyleProps, IDetailsListStyles>"}},theme:{defaultValue:null,description:"Theme provided by a higher-order component.",name:"theme",required:!1,type:{name:"ITheme"}},role:{defaultValue:null,description:"Role for the list.",name:"role",required:!1,type:{name:"string"}},setKey:{defaultValue:null,description:"A key that uniquely identifies the given items. If provided, the selection will be reset when the key changes.",name:"setKey",required:!1,type:{name:"string"}},isPlaceholderData:{defaultValue:null,description:"Set this to true to indicate that the items being displayed are placeholder data.",name:"isPlaceholderData",required:!1,type:{name:"boolean"}},listProps:{defaultValue:null,description:"Properties to pass through to the List components being rendered.",name:"listProps",required:!1,type:{name:"IListProps<any>"}},initialFocusedIndex:{defaultValue:null,description:"Default index to set focus to once the items have rendered and the index exists.",name:"initialFocusedIndex",required:!1,type:{name:"number"}},groups:{defaultValue:null,description:"Grouping instructions.",name:"groups",required:!1,type:{name:"IGroup[]"}},groupProps:{defaultValue:null,description:"Override properties to render groups.",name:"groupProps",required:!1,type:{name:"IDetailsGroupRenderProps"}},indentWidth:{defaultValue:null,description:"Override for the indent width used for group nesting.",name:"indentWidth",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Selection model to track selection state.",name:"selection",required:!1,type:{name:"ISelection<IObjectWithKey>"}},selectionMode:{defaultValue:null,description:"Controls how/if the details list manages selection. Options include none, single, multiple",name:"selectionMode",required:!1,type:{name:"SelectionMode"}},selectionPreservedOnEmptyClick:{defaultValue:null,description:"By default, selection is cleared when clicking on an empty (non-focusable) section of the screen.\nSetting this value to true overrides that behavior and maintains selection.\n@defaultvalue false",name:"selectionPreservedOnEmptyClick",required:!1,type:{name:"boolean"}},selectionZoneProps:{defaultValue:null,description:"Additional props to pass through to the SelectionZone created by default.",name:"selectionZoneProps",required:!1,type:{name:"ISelectionZoneProps"}},layoutMode:{defaultValue:null,description:"Controls how the columns are adjusted.",name:"layoutMode",required:!1,type:{name:"DetailsListLayoutMode"}},checkboxVisibility:{defaultValue:null,description:"Controls the visibility of selection check box.\n@defaultvalue CheckboxVisibility.onHover",name:"checkboxVisibility",required:!1,type:{name:"CheckboxVisibility"}},isHeaderVisible:{defaultValue:null,description:"Controls the visibility of the header.\n@defaultvalue true",name:"isHeaderVisible",required:!1,type:{name:"boolean"}},columns:{defaultValue:null,description:"Column definitions. If none are provided, default columns will be created based on the items' properties.",name:"columns",required:!1,type:{name:"IColumn[]"}},constrainMode:{defaultValue:null,description:"Controls how the list constrains overflow.",name:"constrainMode",required:!1,type:{name:"ConstrainMode"}},rowElementEventMap:{defaultValue:null,description:"Event names and corresponding callbacks that will be registered to rendered row elements.",name:"rowElementEventMap",required:!1,type:{name:"{ eventName: string; callback: (context: IDragDropContext, event?: any) => void; }[]"}},onDidUpdate:{defaultValue:null,description:"Callback for when the list has been updated. Useful for telemetry tracking externally.",name:"onDidUpdate",required:!1,type:{name:"(detailsList?: DetailsListBase) => void"}},onRowDidMount:{defaultValue:null,description:"Callback for when a given row has been mounted. Useful for identifying when a row has been rendered on the page.",name:"onRowDidMount",required:!1,type:{name:"(item?: any, index?: number) => void"}},onRowWillUnmount:{defaultValue:null,description:"Callback for when a given row has been unmounted.\nUseful for identifying when a row has been removed from the page.",name:"onRowWillUnmount",required:!1,type:{name:"(item?: any, index?: number) => void"}},onColumnHeaderClick:{defaultValue:null,description:"Callback for when the user clicks on the column header.",name:"onColumnHeaderClick",required:!1,type:{name:"(ev?: MouseEvent<HTMLElement, MouseEvent>, column?: IColumn) => void"}},onColumnHeaderContextMenu:{defaultValue:null,description:"Callback for when the user asks for a contextual menu (usually via right click) from a column header.",name:"onColumnHeaderContextMenu",required:!1,type:{name:"(column?: IColumn, ev?: MouseEvent<HTMLElement, MouseEvent>) => void"}},onColumnResize:{defaultValue:null,description:"Callback fired on column resize",name:"onColumnResize",required:!1,type:{name:"(column?: IColumn, newWidth?: number, columnIndex?: number) => void"}},onItemInvoked:{defaultValue:null,description:"Callback for when a given row has been invoked (by pressing enter while it is selected.)",name:"onItemInvoked",required:!1,type:{name:"(item?: any, index?: number, ev?: Event) => void"}},onItemContextMenu:{defaultValue:null,description:"Callback for when the context menu of an item has been accessed.\nIf undefined or false is returned, `ev.preventDefault()` will be called.",name:"onItemContextMenu",required:!1,type:{name:"(item?: any, index?: number, ev?: Event) => boolean | void"}},onRenderRow:{defaultValue:null,description:"Callback to override the default row rendering.",name:"onRenderRow",required:!1,type:{name:"IRenderFunction<IDetailsRowProps>"}},onRenderItemColumn:{defaultValue:null,description:'If provided, will be the "default" item column renderer method.\nThis affects cells within the rows, not the rows themselves.\nIf a column definition provides its own `onRender` method, that will be used instead of this.',name:"onRenderItemColumn",required:!1,type:{name:"(item?: any, index?: number, column?: IColumn) => ReactNode"}},onRenderField:{defaultValue:null,description:"Render function which is composed around rendering every cell.",name:"onRenderField",required:!1,type:{name:"IRenderFunction<IDetailsColumnFieldProps>"}},getCellValueKey:{defaultValue:null,description:'If provided, will be the "default" item column cell value return.\nA column\'s `getValueKey` can override `getCellValueKey`.',name:"getCellValueKey",required:!1,type:{name:"(item?: any, index?: number, column?: IColumn) => string"}},dragDropEvents:{defaultValue:null,description:"Map of callback functions related to row drag and drop functionality.",name:"dragDropEvents",required:!1,type:{name:"IDragDropEvents"}},onRenderMissingItem:{defaultValue:null,description:"Callback for what to render when the item is missing.",name:"onRenderMissingItem",required:!1,type:{name:"(index?: number, rowProps?: IDetailsRowProps) => ReactNode"}},onRenderDetailsHeader:{defaultValue:null,description:"An override to render the details header.",name:"onRenderDetailsHeader",required:!1,type:{name:"IRenderFunction<IDetailsHeaderProps>"}},onRenderDetailsFooter:{defaultValue:null,description:"An override to render the details footer.",name:"onRenderDetailsFooter",required:!1,type:{name:"IRenderFunction<IDetailsFooterProps>"}},onRenderCheckbox:{defaultValue:null,description:"If provided, can be used to render a custom checkbox.",name:"onRenderCheckbox",required:!1,type:{name:"IRenderFunction<IDetailsListCheckboxProps>"}},viewport:{defaultValue:null,description:"Viewport info, provided by the `withViewport` decorator.",name:"viewport",required:!1,type:{name:"IViewport"}},onActiveItemChanged:{defaultValue:null,description:"Callback for when an item in the list becomes active by clicking anywhere inside the row or navigating to it\nwith the keyboard.",name:"onActiveItemChanged",required:!1,type:{name:"(item?: any, index?: number, ev?: FocusEvent<HTMLElement, Element>) => void"}},ariaLabelForListHeader:{defaultValue:null,description:"Accessible label for the list header.",name:"ariaLabelForListHeader",required:!1,type:{name:"string"}},ariaLabelForSelectAllCheckbox:{defaultValue:null,description:"Accessible label for the select all checkbox.",name:"ariaLabelForSelectAllCheckbox",required:!1,type:{name:"string"}},ariaLabelForSelectionColumn:{defaultValue:null,description:"Accessible label for the name of the selection column.",name:"ariaLabelForSelectionColumn",required:!1,type:{name:"string"}},getRowAriaLabel:{defaultValue:null,description:"Callback to get the aria-label string for a given item.",name:"getRowAriaLabel",required:!1,type:{name:"(item: any) => string"}},getRowAriaDescribedBy:{defaultValue:null,description:"Callback to get the aria-describedby IDs (space-separated strings) of elements that describe the item.",name:"getRowAriaDescribedBy",required:!1,type:{name:"(item: any) => string"}},getKey:{defaultValue:null,description:"Callback to get the item key, to be used in the selection and on render.\nMust be provided if sorting or filtering is enabled.",name:"getKey",required:!1,type:{name:"(item: any, index?: number) => string"}},checkButtonAriaLabel:{defaultValue:null,description:'Accessible label for the row check button, e.g. "select row".',name:"checkButtonAriaLabel",required:!1,type:{name:"string"}},checkButtonGroupAriaLabel:{defaultValue:null,description:'Accessible label for the group header check button, e.g. "select section".',name:"checkButtonGroupAriaLabel",required:!1,type:{name:"string"}},ariaLabelForGrid:{defaultValue:null,description:"Accessible label for the grid within the list.",name:"ariaLabelForGrid",required:!1,type:{name:"string"}},flexMargin:{defaultValue:null,description:"An optional margin for proportional columns, to e.g. account for scrollbars when laying out width.",name:"flexMargin",required:!1,type:{name:"number"}},shouldApplyApplicationRole:{defaultValue:null,description:"Whether the role `application` should be applied to the list.\n@defaultvalue false\n@deprecated using the application role in this case is an antipattern, and heavily discouraged.",name:"shouldApplyApplicationRole",required:!1,type:{name:"boolean"}},minimumPixelsForDrag:{defaultValue:null,description:"The minimum mouse move distance to interpret the action as drag event.\n@defaultvalue 5",name:"minimumPixelsForDrag",required:!1,type:{name:"number"}},compact:{defaultValue:null,description:"Whether to render in compact mode.\n@defaultvalue false",name:"compact",required:!1,type:{name:"boolean"}},usePageCache:{defaultValue:null,description:"Whether to enable render page caching. This is an experimental performance optimization that is off by default.\n@defaultvalue false",name:"usePageCache",required:!1,type:{name:"boolean"}},onShouldVirtualize:{defaultValue:null,description:"Callback to determine whether the list should be rendered in full, or virtualized.\n\nVirtualization will add and remove pages of items as the user scrolls them into the visible range.\nThis benefits larger list scenarios by reducing the DOM on the screen, but can negatively affect performance\nfor smaller lists.\n\nThe default implementation will virtualize when this callback is not provided.",name:"onShouldVirtualize",required:!1,type:{name:"(props: IListProps<any>) => boolean"}},checkboxCellClassName:{defaultValue:null,description:"Class name to add to the cell of a checkbox.",name:"checkboxCellClassName",required:!1,type:{name:"string"}},enterModalSelectionOnTouch:{defaultValue:null,description:"Whether the selection zone should enter modal state on touch.",name:"enterModalSelectionOnTouch",required:!1,type:{name:"boolean"}},columnReorderOptions:{defaultValue:null,description:"Options for column reordering using drag and drop.",name:"columnReorderOptions",required:!1,type:{name:"IColumnReorderOptions"}},getGroupHeight:{defaultValue:null,description:"Callback to override default group height calculation used by list virtualization.",name:"getGroupHeight",required:!1,type:{name:"(group: IGroup, groupIndex: number) => number"}},useReducedRowRenderer:{defaultValue:null,description:"Whether to re-render a row only when props changed. Might cause regression when depending on external updates.\n@defaultvalue false",name:"useReducedRowRenderer",required:!1,type:{name:"boolean"}},cellStyleProps:{defaultValue:null,description:"Props impacting the render style of cells. Since these have an impact on calculated column widths, they are\nhandled separately from normal theme styling, but they are passed to the styling system.",name:"cellStyleProps",required:!1,type:{name:"ICellStyleProps"}},disableSelectionZone:{defaultValue:null,description:"Whether to disable the built-in SelectionZone, so the host component can provide its own.",name:"disableSelectionZone",required:!1,type:{name:"boolean"}},isSelectedOnFocus:{defaultValue:null,description:"Determines if an item is selected on focus.\n@defaultvalue true",name:"isSelectedOnFocus",required:!1,type:{name:"boolean"}},enableUpdateAnimations:{defaultValue:null,description:"Whether to animate updates",name:"enableUpdateAnimations",required:!1,type:{name:"boolean"}},useFastIcons:{defaultValue:null,description:"Whether to use fast icon and check components. The icons can't be targeted by customization\nbut are still customizable via class names.\n@defaultvalue true",name:"useFastIcons",required:!1,type:{name:"boolean"}},focusZoneProps:{defaultValue:null,description:"Properties to pass through to the FocusZone.",name:"focusZoneProps",required:!1,type:{name:"IFocusZoneProps"}},skipViewportMeasures:{defaultValue:null,description:"Whether or not `withViewport` should disable its viewport measurements, effectively making this decorator\npass-through with no impact on the rendered component.\n\nSince `withViewport` measures the `viewport` on mount, after each React update, and in response to events,\nit may cause a component which does not currently need this information due to its configuration to re-render\ntoo often. `skipViewportMeasures` may be toggled on and off based on current state, and will suspend and resume\nmeasurement as-needed.\n\nFor example, when this wraps `DetailsList`, set `skipViewportMeasures` to `true` when the `layoutMode` is\n`fixedColumns`, since the `DetailsList` does not use the viewport size in any calculations.\n\nIn addition, consider setting `skipViewportMeasures` to `true` when running within a React test renderer, to avoid\ndirect DOM dependencies.",name:"skipViewportMeasures",required:!1,type:{name:"boolean"}},disableResizeObserver:{defaultValue:null,description:"Whether or not to explicitly disable usage of the `ResizeObserver` in favor of a `'resize'` event on `window`,\neven if the browser supports `ResizeObserver`. This may be necessary if use of `ResizeObserver` results in too\nmany re-renders of the wrapped component due to the frequency at which events are fired.\n\nThis has no impact if `skipViewportMeasures` is `true`, as no viewport measurement strategy is used.",name:"disableResizeObserver",required:!1,type:{name:"boolean"}},delayFirstMeasure:{defaultValue:{value:"false"},description:"Whether or not `withViewport` will delay before first measuring the viewport size.\nSetting this will delay measurement by the same amount as the debounce for resizing the window.\nThis is useful for giving the child of the viewport time to render before measuring.\n\nThis is an opt-in setting as existing systems have a dependency on immediate measurement for performance.",name:"delayFirstMeasure",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/ArqueroDetailsList/__tests__/Columns/Columns.tsx#Columns"]={docgenInfo:Columns.__docgenInfo,name:"Columns",path:"../react/src/components/ArqueroDetailsList/__tests__/Columns/Columns.tsx#Columns"})}catch(__react_docgen_typescript_loader_error){}var ErrorCode,generateCodebook=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/generateCodebook.ts"),introspect=__webpack_require__("../../.yarn/__virtual__/@datashaper-tables-virtual-cb2f1a5962/1/javascript/tables/src/introspect.ts");!function(ErrorCode){ErrorCode.Required="required",ErrorCode.Unique="unique",ErrorCode.MinLength="minimum length",ErrorCode.MaxLength="maximum length",ErrorCode.Minimum="minimum",ErrorCode.Maximum="maximum",ErrorCode.Pattern="pattern",ErrorCode.Enum="enum"}(ErrorCode||(ErrorCode={}));var data=__webpack_require__("../schema/src/data.ts");function requiredValidator(field,includeIndexes){const{name,constraints}=field;if(constraints?.required){const validate=element=>null!=element;return values=>{const result={name,rule:ErrorCode.Required,constraints};if(includeIndexes){const indexes=values.reduce(((acc,cur,index)=>(validate(cur)||acc.push(index),acc)),[]);if(0!==indexes.length)return{...result,indexes}}else if(!values.every(validate))return result}}}function uniqueValidator(field,includeIndexes){const{name,constraints}=field;if(constraints?.unique)return values=>{const result={name,rule:ErrorCode.Unique,constraints},uniqueValues=new Set;if(includeIndexes){const indexes=values.reduce(((acc,cur,index)=>(uniqueValues.has(cur)&&acc.push(index),uniqueValues.add(cur),acc)),[]);if(0!==indexes.length)return{...result,indexes}}else{if(!values.every((value=>!uniqueValues.has(value)&&(uniqueValues.add(value),!0))))return result}}}function minLengthValidator(field,includeIndexes){const{name,type,constraints={}}=field,{minLength}=constraints;if(void 0!==minLength&&(type===data.g.String||type===data.g.Array)){const validate=value=>value.length>=minLength;return values=>{const result={name,rule:ErrorCode.MinLength,constraints};if(includeIndexes){const indexes=(values||Array).reduce(((acc,cur,index)=>(validate(cur)||acc.push(index),acc)),[]);if(0!==indexes.length)return{...result,indexes}}else{if(data.g.String,!values.every(validate))return result}}}}function maxLengthValidator(field,includeIndexes){const{name,type,constraints={}}=field,{maxLength}=constraints;if(maxLength&&(type===data.g.String||type===data.g.Array)){const validate=value=>value.length<=maxLength;return values=>{const result={name,rule:ErrorCode.MaxLength,constraints};if(includeIndexes){const indexes=(values||Array).reduce(((acc,cur,index)=>(validate(cur)||acc.push(index),acc)),[]);if(0!==indexes.length)return{...result,indexes}}else{if(data.g.String,!values.every(validate))return result}}}}function minimumValidator(field,includeIndexes){const{name,type,constraints={}}=field,{minimum}=constraints;if(void 0!==minimum&&(type===data.g.Number||type===data.g.Date)){const validate=value=>type===data.g.Date?value.valueOf()>=minimum:value>=minimum;return values=>{const result={name,rule:ErrorCode.Minimum,constraints};if(includeIndexes){const valuesCasted=(data.g.Number,values),indexes=[];if(valuesCasted.forEach(((value,index)=>{validate(value)||indexes.push(index)})),0!==indexes.length)return{...result,indexes}}else{if(data.g.Number,!values.every(validate))return result}}}}function maximumValidator(field,includeIndexes){const{name,type,constraints={}}=field,{maximum}=constraints;if(void 0!==maximum){const validate=value=>type===data.g.Date?value.valueOf()<=maximum:value<=maximum;return values=>{const result={name,rule:ErrorCode.Maximum,constraints};if(includeIndexes){const valuesCasted=(data.g.Number,values),indexes=[];if(valuesCasted.forEach(((value,index)=>{validate(value)||indexes.push(index)})),0!==indexes.length)return{...result,indexes}}else{if(data.g.Number,!values.every(validate))return result}}}}function patternValidator(field,includeIndexes){const{name,type,constraints={}}=field,{pattern}=constraints;if(pattern&&type===data.g.String){const re=new RegExp(pattern),validate=value=>re.test(value);return values=>{const result={name,rule:ErrorCode.Pattern,constraints};if(includeIndexes){const indexes=values.reduce(((acc,value,index)=>(validate(value)||acc.push(index),acc)),[]);if(0!==indexes.length)return{...result,indexes}}else if(!values.every(validate))return result}}}function enumValidator(field,includeIndexes){const{name,type,constraints={}}=field,{enum:enumList}=constraints;if(enumList&&type===data.g.String){const uniqueSet=new Set(enumList),validate=value=>uniqueSet.has(value);return values=>{const result={name,rule:ErrorCode.Enum,constraints};if(includeIndexes){const indexes=values.reduce(((acc,value,index)=>(validate(value)||acc.push(index),acc)),[]);if(0!==indexes.length)return{...result,indexes}}else if(!values.every(validate))return result}}}function validateTable(table,codebook,includeIndexes=!1){return codebook.fields.reduce(((result,field)=>{const results=function validateColumn(table,field,includeIndexes){const results={errors:[]},{constraints,name,type}=field;if(constraints&&type){const validators=[requiredValidator(field,includeIndexes),uniqueValidator(field,includeIndexes),minLengthValidator(field,includeIndexes),maxLengthValidator(field,includeIndexes),minimumValidator(field,includeIndexes),maximumValidator(field,includeIndexes),patternValidator(field,includeIndexes),enumValidator(field,includeIndexes)],values=table.array(name);validators.forEach((validate=>{if(validate){const result=validate(values);result&&results.errors.push({validate,...result})}}))}return results}(table,field,includeIndexes);return result.errors=[...result.errors,...results.errors],result}),{errors:[]})}const ColumnValidationStory=(args,{loaded:{companiesRaw}})=>{const codebookResult=(0,generateCodebook.a)(companiesRaw),metadata=(0,introspect.L)(companiesRaw,!0);codebookResult.fields.find((element=>"ID"===element.name)).constraints={required:!0,unique:!0,minimum:2,maximum:3},codebookResult.fields.find((element=>"Name"===element.name)).constraints={enum:["Microsoft","Apple","Google"]},codebookResult.fields.find((element=>"Employees"===element.name)).constraints={minimum:16e4};const validationResult=validateTable(companiesRaw,codebookResult,!1);return(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{features:{smartCells:!0},...args,table:companiesRaw,metadata,validationResult})};ColumnValidationStory.storyName="Column validation";var ArqueroDetailsList_types=__webpack_require__("../react/src/components/ArqueroDetailsList/ArqueroDetailsList.types.ts");const FeaturesStory=((args,{loaded:{stocks}})=>{const metadata=(0,react.useMemo)((()=>(0,introspect.L)(stocks,!0)),[stocks]);return(0,jsx_runtime.jsx)("div",{style:{height:600},children:(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{...args,table:stocks,metadata})})}).bind({});FeaturesStory.args={striped:!0,showColumnBorders:!0,selectedColumn:"Symbol",isHeaderFixed:!0,compact:!0,features:{histogramColumnHeaders:!0,statsColumnHeaders:!0,showBooleanSymbol:!0,showNumberMagnitude:!0,showCategoricalBar:!0,showDateFormatted:!0,showSparkbar:!0,showSparkline:!0,showDropdown:!0,statsColumnTypes:[ArqueroDetailsList_types.G.Type,ArqueroDetailsList_types.G.Min,ArqueroDetailsList_types.G.Max,ArqueroDetailsList_types.G.Distinct,ArqueroDetailsList_types.G.Invalid]}};const FillStory=((args,{loaded:{companies2}})=>{const metadata=(0,react.useMemo)((()=>(0,introspect.L)(companies2,!0)),[companies2]);return(0,jsx_runtime.jsx)("div",{style:{width:1e3,height:600},children:(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{...args,table:companies2,metadata})})}).bind({});FillStory.args={showColumnBorders:!0,compact:!0,striped:!0,fill:!0,features:{statsColumnHeaders:!0,smartCells:!0}};const MicroStory=((args,{loaded:{stocks}})=>{const metadata=(0,react.useMemo)((()=>(0,introspect.L)(stocks,!0)),[stocks]);return(0,jsx_runtime.jsx)("div",{style:{width:1e3,height:600},children:(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{...args,table:stocks,metadata})})}).bind({});MicroStory.args={showColumnBorders:!0,compact:!0,compactRowHeight:16,striped:!0,features:{statsColumnHeaders:!0,smartCells:!0,histogramColumnHeaders:!0}};var ArqueroTableHeader=__webpack_require__("../react/src/components/ArqueroTableHeader/ArqueroTableHeader.tsx");const Performance=(0,react.memo)((function Performance({table,...args}){const{local,metadata}=function useBigTable(input){const[local,setTable]=(0,react.useState)(),[metadata,setMetadata]=(0,react.useState)();return(0,react.useEffect)((()=>{if(null!=input){let tableCopy=input;for(let i=0;i<10;i++)tableCopy=tableCopy.concat(tableCopy);setTable(tableCopy),setMetadata((0,introspect.L)(tableCopy,!0))}}),[input,setTable,setMetadata]),{local,metadata}}(table);return local&&metadata?(0,jsx_runtime.jsxs)(Table,{children:[(0,jsx_runtime.jsx)(ArqueroTableHeader.U,{table:local}),(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{...args,table:local,metadata})]}):(0,jsx_runtime.jsx)("div",{children:"Loading..."})}));try{Performance.displayName="Performance",Performance.__docgenInfo={description:"",displayName:"Performance",props:{table:{defaultValue:null,description:"",name:"table",required:!0,type:{name:"ColumnTable"}},validationResult:{defaultValue:null,description:"",name:"validationResult",required:!1,type:{name:"ValidationResult"}},features:{defaultValue:null,description:"",name:"features",required:!1,type:{name:"ArqueroDetailsListFeatures"}},metadata:{defaultValue:null,description:"Optional metadata to use for column smart features.\nUse this if you need to cache expensive stats computes separately\nto prevent recompute on remounting.",name:"metadata",required:!1,type:{name:"TableMetadata"}},fields:{defaultValue:null,description:"",name:"fields",required:!1,type:{name:"Field[]"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"number"}},limit:{defaultValue:null,description:"",name:"limit",required:!1,type:{name:"number"}},sortable:{defaultValue:null,description:"",name:"sortable",required:!1,type:{name:"boolean"}},striped:{defaultValue:null,description:"Indicates whether to use even/odd row coloring.",name:"striped",required:!1,type:{name:"boolean"}},showColumnBorders:{defaultValue:null,description:"Indicates to use borders between columns so the cells look more like a spreadsheet (row borders are always on).",name:"showColumnBorders",required:!1,type:{name:"boolean"}},fill:{defaultValue:null,description:'Indicates that the table should fill its container space,\nincluding the use of pseudo columns and rows to present a "spreadsheet-like" view.',name:"fill",required:!1,type:{name:"boolean"}},onColumnSelect:{defaultValue:null,description:"Fires a column-wide select event for all columns, including headers.\nIf you need custom behavior, use the built-in table-level onColumnHeaderClick and per-column onClick",name:"onColumnSelect",required:!1,type:{name:"ColumnSelectFunction"}},onCellDropdownSelect:{defaultValue:null,description:"If array cells are displayed with a dropdown, this will fire when a value is selected.",name:"onCellDropdownSelect",required:!1,type:{name:"(event: FormEvent<HTMLDivElement>, option?: IDropdownOption<any>, index?: number) => void"}},onRenderGroupHeader:{defaultValue:null,description:"Passthrough to the group header rendering, when using the group by verb",name:"onRenderGroupHeader",required:!1,type:{name:"GroupHeaderFunction"}},isHeaderFixed:{defaultValue:null,description:"Fixed headers on top when scrolling",name:"isHeaderFixed",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Resizable columns",name:"resizable",required:!1,type:{name:"boolean"}},selectedColumn:{defaultValue:null,description:"Key for a selected column - this is not normally an option in DetailsList",name:"selectedColumn",required:!1,type:{name:"string"}},defaultSortColumn:{defaultValue:null,description:"Default sort column",name:"defaultSortColumn",required:!1,type:{name:"string"}},defaultSortDirection:{defaultValue:null,description:"Resizable sort direction",name:"defaultSortDirection",required:!1,type:{name:"SortDirection"}},compactRowHeight:{defaultValue:null,description:"If compact = true, override the default height.\nFluentUI hard-codes the compact height, so this gives us a way to customize how dense the rows are.\nNote that if compact = false (the default), this has no effect.",name:"compactRowHeight",required:!1,type:{name:"number"}},style:{defaultValue:null,description:"Style to pass to the container.\nUse the regular DetailsList.styles prop for deeper customization of the table itself.",name:"style",required:!1,type:{name:"CSSProperties"}},componentRef:{defaultValue:null,description:"Callback to access the IDetailsList interface. Use this instead of ref for accessing\nthe public methods and properties of the component.",name:"componentRef",required:!1,type:{name:"IRefObject<IDetailsList>"}},className:{defaultValue:null,description:"Class name to add to the root element.",name:"className",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"Accessible label describing or summarizing the list.\n@deprecated use `ariaLabelForGrid`",name:"ariaLabel",required:!1,type:{name:"string"}},styles:{defaultValue:null,description:"Custom overrides to the themed or default styles.",name:"styles",required:!1,type:{name:"IStyleFunctionOrObject<IDetailsListStyleProps, IDetailsListStyles>"}},theme:{defaultValue:null,description:"Theme provided by a higher-order component.",name:"theme",required:!1,type:{name:"ITheme"}},role:{defaultValue:null,description:"Role for the list.",name:"role",required:!1,type:{name:"string"}},setKey:{defaultValue:null,description:"A key that uniquely identifies the given items. If provided, the selection will be reset when the key changes.",name:"setKey",required:!1,type:{name:"string"}},isPlaceholderData:{defaultValue:null,description:"Set this to true to indicate that the items being displayed are placeholder data.",name:"isPlaceholderData",required:!1,type:{name:"boolean"}},listProps:{defaultValue:null,description:"Properties to pass through to the List components being rendered.",name:"listProps",required:!1,type:{name:"IListProps<any>"}},initialFocusedIndex:{defaultValue:null,description:"Default index to set focus to once the items have rendered and the index exists.",name:"initialFocusedIndex",required:!1,type:{name:"number"}},groups:{defaultValue:null,description:"Grouping instructions.",name:"groups",required:!1,type:{name:"IGroup[]"}},groupProps:{defaultValue:null,description:"Override properties to render groups.",name:"groupProps",required:!1,type:{name:"IDetailsGroupRenderProps"}},indentWidth:{defaultValue:null,description:"Override for the indent width used for group nesting.",name:"indentWidth",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Selection model to track selection state.",name:"selection",required:!1,type:{name:"ISelection<IObjectWithKey>"}},selectionMode:{defaultValue:null,description:"Controls how/if the details list manages selection. Options include none, single, multiple",name:"selectionMode",required:!1,type:{name:"SelectionMode"}},selectionPreservedOnEmptyClick:{defaultValue:null,description:"By default, selection is cleared when clicking on an empty (non-focusable) section of the screen.\nSetting this value to true overrides that behavior and maintains selection.\n@defaultvalue false",name:"selectionPreservedOnEmptyClick",required:!1,type:{name:"boolean"}},selectionZoneProps:{defaultValue:null,description:"Additional props to pass through to the SelectionZone created by default.",name:"selectionZoneProps",required:!1,type:{name:"ISelectionZoneProps"}},layoutMode:{defaultValue:null,description:"Controls how the columns are adjusted.",name:"layoutMode",required:!1,type:{name:"DetailsListLayoutMode"}},checkboxVisibility:{defaultValue:null,description:"Controls the visibility of selection check box.\n@defaultvalue CheckboxVisibility.onHover",name:"checkboxVisibility",required:!1,type:{name:"CheckboxVisibility"}},isHeaderVisible:{defaultValue:null,description:"Controls the visibility of the header.\n@defaultvalue true",name:"isHeaderVisible",required:!1,type:{name:"boolean"}},columns:{defaultValue:null,description:"Column definitions. If none are provided, default columns will be created based on the items' properties.",name:"columns",required:!1,type:{name:"IColumn[]"}},constrainMode:{defaultValue:null,description:"Controls how the list constrains overflow.",name:"constrainMode",required:!1,type:{name:"ConstrainMode"}},rowElementEventMap:{defaultValue:null,description:"Event names and corresponding callbacks that will be registered to rendered row elements.",name:"rowElementEventMap",required:!1,type:{name:"{ eventName: string; callback: (context: IDragDropContext, event?: any) => void; }[]"}},onDidUpdate:{defaultValue:null,description:"Callback for when the list has been updated. Useful for telemetry tracking externally.",name:"onDidUpdate",required:!1,type:{name:"(detailsList?: DetailsListBase) => void"}},onRowDidMount:{defaultValue:null,description:"Callback for when a given row has been mounted. Useful for identifying when a row has been rendered on the page.",name:"onRowDidMount",required:!1,type:{name:"(item?: any, index?: number) => void"}},onRowWillUnmount:{defaultValue:null,description:"Callback for when a given row has been unmounted.\nUseful for identifying when a row has been removed from the page.",name:"onRowWillUnmount",required:!1,type:{name:"(item?: any, index?: number) => void"}},onColumnHeaderClick:{defaultValue:null,description:"Callback for when the user clicks on the column header.",name:"onColumnHeaderClick",required:!1,type:{name:"(ev?: MouseEvent<HTMLElement, MouseEvent>, column?: IColumn) => void"}},onColumnHeaderContextMenu:{defaultValue:null,description:"Callback for when the user asks for a contextual menu (usually via right click) from a column header.",name:"onColumnHeaderContextMenu",required:!1,type:{name:"(column?: IColumn, ev?: MouseEvent<HTMLElement, MouseEvent>) => void"}},onColumnResize:{defaultValue:null,description:"Callback fired on column resize",name:"onColumnResize",required:!1,type:{name:"(column?: IColumn, newWidth?: number, columnIndex?: number) => void"}},onItemInvoked:{defaultValue:null,description:"Callback for when a given row has been invoked (by pressing enter while it is selected.)",name:"onItemInvoked",required:!1,type:{name:"(item?: any, index?: number, ev?: Event) => void"}},onItemContextMenu:{defaultValue:null,description:"Callback for when the context menu of an item has been accessed.\nIf undefined or false is returned, `ev.preventDefault()` will be called.",name:"onItemContextMenu",required:!1,type:{name:"(item?: any, index?: number, ev?: Event) => boolean | void"}},onRenderRow:{defaultValue:null,description:"Callback to override the default row rendering.",name:"onRenderRow",required:!1,type:{name:"IRenderFunction<IDetailsRowProps>"}},onRenderItemColumn:{defaultValue:null,description:'If provided, will be the "default" item column renderer method.\nThis affects cells within the rows, not the rows themselves.\nIf a column definition provides its own `onRender` method, that will be used instead of this.',name:"onRenderItemColumn",required:!1,type:{name:"(item?: any, index?: number, column?: IColumn) => ReactNode"}},onRenderField:{defaultValue:null,description:"Render function which is composed around rendering every cell.",name:"onRenderField",required:!1,type:{name:"IRenderFunction<IDetailsColumnFieldProps>"}},getCellValueKey:{defaultValue:null,description:'If provided, will be the "default" item column cell value return.\nA column\'s `getValueKey` can override `getCellValueKey`.',name:"getCellValueKey",required:!1,type:{name:"(item?: any, index?: number, column?: IColumn) => string"}},dragDropEvents:{defaultValue:null,description:"Map of callback functions related to row drag and drop functionality.",name:"dragDropEvents",required:!1,type:{name:"IDragDropEvents"}},onRenderMissingItem:{defaultValue:null,description:"Callback for what to render when the item is missing.",name:"onRenderMissingItem",required:!1,type:{name:"(index?: number, rowProps?: IDetailsRowProps) => ReactNode"}},onRenderDetailsHeader:{defaultValue:null,description:"An override to render the details header.",name:"onRenderDetailsHeader",required:!1,type:{name:"IRenderFunction<IDetailsHeaderProps>"}},onRenderDetailsFooter:{defaultValue:null,description:"An override to render the details footer.",name:"onRenderDetailsFooter",required:!1,type:{name:"IRenderFunction<IDetailsFooterProps>"}},onRenderCheckbox:{defaultValue:null,description:"If provided, can be used to render a custom checkbox.",name:"onRenderCheckbox",required:!1,type:{name:"IRenderFunction<IDetailsListCheckboxProps>"}},viewport:{defaultValue:null,description:"Viewport info, provided by the `withViewport` decorator.",name:"viewport",required:!1,type:{name:"IViewport"}},onActiveItemChanged:{defaultValue:null,description:"Callback for when an item in the list becomes active by clicking anywhere inside the row or navigating to it\nwith the keyboard.",name:"onActiveItemChanged",required:!1,type:{name:"(item?: any, index?: number, ev?: FocusEvent<HTMLElement, Element>) => void"}},ariaLabelForListHeader:{defaultValue:null,description:"Accessible label for the list header.",name:"ariaLabelForListHeader",required:!1,type:{name:"string"}},ariaLabelForSelectAllCheckbox:{defaultValue:null,description:"Accessible label for the select all checkbox.",name:"ariaLabelForSelectAllCheckbox",required:!1,type:{name:"string"}},ariaLabelForSelectionColumn:{defaultValue:null,description:"Accessible label for the name of the selection column.",name:"ariaLabelForSelectionColumn",required:!1,type:{name:"string"}},getRowAriaLabel:{defaultValue:null,description:"Callback to get the aria-label string for a given item.",name:"getRowAriaLabel",required:!1,type:{name:"(item: any) => string"}},getRowAriaDescribedBy:{defaultValue:null,description:"Callback to get the aria-describedby IDs (space-separated strings) of elements that describe the item.",name:"getRowAriaDescribedBy",required:!1,type:{name:"(item: any) => string"}},getKey:{defaultValue:null,description:"Callback to get the item key, to be used in the selection and on render.\nMust be provided if sorting or filtering is enabled.",name:"getKey",required:!1,type:{name:"(item: any, index?: number) => string"}},checkButtonAriaLabel:{defaultValue:null,description:'Accessible label for the row check button, e.g. "select row".',name:"checkButtonAriaLabel",required:!1,type:{name:"string"}},checkButtonGroupAriaLabel:{defaultValue:null,description:'Accessible label for the group header check button, e.g. "select section".',name:"checkButtonGroupAriaLabel",required:!1,type:{name:"string"}},ariaLabelForGrid:{defaultValue:null,description:"Accessible label for the grid within the list.",name:"ariaLabelForGrid",required:!1,type:{name:"string"}},flexMargin:{defaultValue:null,description:"An optional margin for proportional columns, to e.g. account for scrollbars when laying out width.",name:"flexMargin",required:!1,type:{name:"number"}},shouldApplyApplicationRole:{defaultValue:null,description:"Whether the role `application` should be applied to the list.\n@defaultvalue false\n@deprecated using the application role in this case is an antipattern, and heavily discouraged.",name:"shouldApplyApplicationRole",required:!1,type:{name:"boolean"}},minimumPixelsForDrag:{defaultValue:null,description:"The minimum mouse move distance to interpret the action as drag event.\n@defaultvalue 5",name:"minimumPixelsForDrag",required:!1,type:{name:"number"}},compact:{defaultValue:null,description:"Whether to render in compact mode.\n@defaultvalue false",name:"compact",required:!1,type:{name:"boolean"}},usePageCache:{defaultValue:null,description:"Whether to enable render page caching. This is an experimental performance optimization that is off by default.\n@defaultvalue false",name:"usePageCache",required:!1,type:{name:"boolean"}},onShouldVirtualize:{defaultValue:null,description:"Callback to determine whether the list should be rendered in full, or virtualized.\n\nVirtualization will add and remove pages of items as the user scrolls them into the visible range.\nThis benefits larger list scenarios by reducing the DOM on the screen, but can negatively affect performance\nfor smaller lists.\n\nThe default implementation will virtualize when this callback is not provided.",name:"onShouldVirtualize",required:!1,type:{name:"(props: IListProps<any>) => boolean"}},checkboxCellClassName:{defaultValue:null,description:"Class name to add to the cell of a checkbox.",name:"checkboxCellClassName",required:!1,type:{name:"string"}},enterModalSelectionOnTouch:{defaultValue:null,description:"Whether the selection zone should enter modal state on touch.",name:"enterModalSelectionOnTouch",required:!1,type:{name:"boolean"}},columnReorderOptions:{defaultValue:null,description:"Options for column reordering using drag and drop.",name:"columnReorderOptions",required:!1,type:{name:"IColumnReorderOptions"}},getGroupHeight:{defaultValue:null,description:"Callback to override default group height calculation used by list virtualization.",name:"getGroupHeight",required:!1,type:{name:"(group: IGroup, groupIndex: number) => number"}},useReducedRowRenderer:{defaultValue:null,description:"Whether to re-render a row only when props changed. Might cause regression when depending on external updates.\n@defaultvalue false",name:"useReducedRowRenderer",required:!1,type:{name:"boolean"}},cellStyleProps:{defaultValue:null,description:"Props impacting the render style of cells. Since these have an impact on calculated column widths, they are\nhandled separately from normal theme styling, but they are passed to the styling system.",name:"cellStyleProps",required:!1,type:{name:"ICellStyleProps"}},disableSelectionZone:{defaultValue:null,description:"Whether to disable the built-in SelectionZone, so the host component can provide its own.",name:"disableSelectionZone",required:!1,type:{name:"boolean"}},isSelectedOnFocus:{defaultValue:null,description:"Determines if an item is selected on focus.\n@defaultvalue true",name:"isSelectedOnFocus",required:!1,type:{name:"boolean"}},enableUpdateAnimations:{defaultValue:null,description:"Whether to animate updates",name:"enableUpdateAnimations",required:!1,type:{name:"boolean"}},useFastIcons:{defaultValue:null,description:"Whether to use fast icon and check components. The icons can't be targeted by customization\nbut are still customizable via class names.\n@defaultvalue true",name:"useFastIcons",required:!1,type:{name:"boolean"}},focusZoneProps:{defaultValue:null,description:"Properties to pass through to the FocusZone.",name:"focusZoneProps",required:!1,type:{name:"IFocusZoneProps"}},skipViewportMeasures:{defaultValue:null,description:"Whether or not `withViewport` should disable its viewport measurements, effectively making this decorator\npass-through with no impact on the rendered component.\n\nSince `withViewport` measures the `viewport` on mount, after each React update, and in response to events,\nit may cause a component which does not currently need this information due to its configuration to re-render\ntoo often. `skipViewportMeasures` may be toggled on and off based on current state, and will suspend and resume\nmeasurement as-needed.\n\nFor example, when this wraps `DetailsList`, set `skipViewportMeasures` to `true` when the `layoutMode` is\n`fixedColumns`, since the `DetailsList` does not use the viewport size in any calculations.\n\nIn addition, consider setting `skipViewportMeasures` to `true` when running within a React test renderer, to avoid\ndirect DOM dependencies.",name:"skipViewportMeasures",required:!1,type:{name:"boolean"}},disableResizeObserver:{defaultValue:null,description:"Whether or not to explicitly disable usage of the `ResizeObserver` in favor of a `'resize'` event on `window`,\neven if the browser supports `ResizeObserver`. This may be necessary if use of `ResizeObserver` results in too\nmany re-renders of the wrapped component due to the frequency at which events are fired.\n\nThis has no impact if `skipViewportMeasures` is `true`, as no viewport measurement strategy is used.",name:"disableResizeObserver",required:!1,type:{name:"boolean"}},delayFirstMeasure:{defaultValue:{value:"false"},description:"Whether or not `withViewport` will delay before first measuring the viewport size.\nSetting this will delay measurement by the same amount as the debounce for resizing the window.\nThis is useful for giving the child of the viewport time to render before measuring.\n\nThis is an opt-in setting as existing systems have a dependency on immediate measurement for performance.",name:"delayFirstMeasure",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/ArqueroDetailsList/__tests__/Performance/Performance.tsx#Performance"]={docgenInfo:Performance.__docgenInfo,name:"Performance",path:"../react/src/components/ArqueroDetailsList/__tests__/Performance/Performance.tsx#Performance"})}catch(__react_docgen_typescript_loader_error){}const PerformanceStory=(args,{loaded:{stocks}})=>(0,jsx_runtime.jsx)(Performance,{...args,table:stocks});PerformanceStory.storyName="Performance Test (slow!)";const ButtonContainer=dist.Z.div`
	padding-bottom: 10px;
	display: flex;
`,GroupByToggle=(0,dist.Z)(lib_commonjs.Toggle)`
	padding-right: 10px;
`,RowGrouping=(0,react.memo)((function RowGrouping({table,...args}){const{grouped,metadata,onGroupChange}=function useGrouping(table){const[grouped,setGrouped]=(0,react.useState)(),[metadata,setMetadata]=(0,react.useState)(),[groupByList,setGroupByList]=(0,react.useState)([]);return(0,react.useEffect)((()=>{if(table){const local=groupByList.length>0?table.groupby(groupByList):table;setGrouped(local),setMetadata((0,introspect.L)(local,!0))}}),[table,groupByList,setGrouped,setMetadata]),{grouped,metadata,onGroupChange:(0,react.useCallback)(((key,checked)=>{setGroupByList((prev=>checked?[...prev,key]:prev.filter((d=>d!==key))))}),[setGroupByList])}}(table);return grouped&&metadata?(0,jsx_runtime.jsxs)(Table,{children:[(0,jsx_runtime.jsx)(lib_commonjs.Label,{children:"Group by: "}),(0,jsx_runtime.jsxs)(ButtonContainer,{children:[(0,jsx_runtime.jsx)(GroupByToggle,{label:"Symbol",onText:"On",offText:"Off",onChange:(_e,checked)=>onGroupChange("Symbol",checked)}),(0,jsx_runtime.jsx)(GroupByToggle,{label:"Month",onText:"On",offText:"Off",onChange:(_e,checked)=>onGroupChange("Month",checked)})]}),(0,jsx_runtime.jsx)(ArqueroTableHeader.U,{table:grouped}),(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{...args,table:grouped,metadata})]}):(0,jsx_runtime.jsx)("div",{children:"Loading..."})}));try{RowGrouping.displayName="RowGrouping",RowGrouping.__docgenInfo={description:"",displayName:"RowGrouping",props:{table:{defaultValue:null,description:"",name:"table",required:!0,type:{name:"ColumnTable"}},validationResult:{defaultValue:null,description:"",name:"validationResult",required:!1,type:{name:"ValidationResult"}},features:{defaultValue:null,description:"",name:"features",required:!1,type:{name:"ArqueroDetailsListFeatures"}},metadata:{defaultValue:null,description:"Optional metadata to use for column smart features.\nUse this if you need to cache expensive stats computes separately\nto prevent recompute on remounting.",name:"metadata",required:!1,type:{name:"TableMetadata"}},fields:{defaultValue:null,description:"",name:"fields",required:!1,type:{name:"Field[]"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"number"}},limit:{defaultValue:null,description:"",name:"limit",required:!1,type:{name:"number"}},sortable:{defaultValue:null,description:"",name:"sortable",required:!1,type:{name:"boolean"}},striped:{defaultValue:null,description:"Indicates whether to use even/odd row coloring.",name:"striped",required:!1,type:{name:"boolean"}},showColumnBorders:{defaultValue:null,description:"Indicates to use borders between columns so the cells look more like a spreadsheet (row borders are always on).",name:"showColumnBorders",required:!1,type:{name:"boolean"}},fill:{defaultValue:null,description:'Indicates that the table should fill its container space,\nincluding the use of pseudo columns and rows to present a "spreadsheet-like" view.',name:"fill",required:!1,type:{name:"boolean"}},onColumnSelect:{defaultValue:null,description:"Fires a column-wide select event for all columns, including headers.\nIf you need custom behavior, use the built-in table-level onColumnHeaderClick and per-column onClick",name:"onColumnSelect",required:!1,type:{name:"ColumnSelectFunction"}},onCellDropdownSelect:{defaultValue:null,description:"If array cells are displayed with a dropdown, this will fire when a value is selected.",name:"onCellDropdownSelect",required:!1,type:{name:"(event: FormEvent<HTMLDivElement>, option?: IDropdownOption<any>, index?: number) => void"}},onRenderGroupHeader:{defaultValue:null,description:"Passthrough to the group header rendering, when using the group by verb",name:"onRenderGroupHeader",required:!1,type:{name:"GroupHeaderFunction"}},isHeaderFixed:{defaultValue:null,description:"Fixed headers on top when scrolling",name:"isHeaderFixed",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Resizable columns",name:"resizable",required:!1,type:{name:"boolean"}},selectedColumn:{defaultValue:null,description:"Key for a selected column - this is not normally an option in DetailsList",name:"selectedColumn",required:!1,type:{name:"string"}},defaultSortColumn:{defaultValue:null,description:"Default sort column",name:"defaultSortColumn",required:!1,type:{name:"string"}},defaultSortDirection:{defaultValue:null,description:"Resizable sort direction",name:"defaultSortDirection",required:!1,type:{name:"SortDirection"}},compactRowHeight:{defaultValue:null,description:"If compact = true, override the default height.\nFluentUI hard-codes the compact height, so this gives us a way to customize how dense the rows are.\nNote that if compact = false (the default), this has no effect.",name:"compactRowHeight",required:!1,type:{name:"number"}},style:{defaultValue:null,description:"Style to pass to the container.\nUse the regular DetailsList.styles prop for deeper customization of the table itself.",name:"style",required:!1,type:{name:"CSSProperties"}},componentRef:{defaultValue:null,description:"Callback to access the IDetailsList interface. Use this instead of ref for accessing\nthe public methods and properties of the component.",name:"componentRef",required:!1,type:{name:"IRefObject<IDetailsList>"}},className:{defaultValue:null,description:"Class name to add to the root element.",name:"className",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"Accessible label describing or summarizing the list.\n@deprecated use `ariaLabelForGrid`",name:"ariaLabel",required:!1,type:{name:"string"}},styles:{defaultValue:null,description:"Custom overrides to the themed or default styles.",name:"styles",required:!1,type:{name:"IStyleFunctionOrObject<IDetailsListStyleProps, IDetailsListStyles>"}},theme:{defaultValue:null,description:"Theme provided by a higher-order component.",name:"theme",required:!1,type:{name:"ITheme"}},role:{defaultValue:null,description:"Role for the list.",name:"role",required:!1,type:{name:"string"}},setKey:{defaultValue:null,description:"A key that uniquely identifies the given items. If provided, the selection will be reset when the key changes.",name:"setKey",required:!1,type:{name:"string"}},isPlaceholderData:{defaultValue:null,description:"Set this to true to indicate that the items being displayed are placeholder data.",name:"isPlaceholderData",required:!1,type:{name:"boolean"}},listProps:{defaultValue:null,description:"Properties to pass through to the List components being rendered.",name:"listProps",required:!1,type:{name:"IListProps<any>"}},initialFocusedIndex:{defaultValue:null,description:"Default index to set focus to once the items have rendered and the index exists.",name:"initialFocusedIndex",required:!1,type:{name:"number"}},groups:{defaultValue:null,description:"Grouping instructions.",name:"groups",required:!1,type:{name:"IGroup[]"}},groupProps:{defaultValue:null,description:"Override properties to render groups.",name:"groupProps",required:!1,type:{name:"IDetailsGroupRenderProps"}},indentWidth:{defaultValue:null,description:"Override for the indent width used for group nesting.",name:"indentWidth",required:!1,type:{name:"number"}},selection:{defaultValue:null,description:"Selection model to track selection state.",name:"selection",required:!1,type:{name:"ISelection<IObjectWithKey>"}},selectionMode:{defaultValue:null,description:"Controls how/if the details list manages selection. Options include none, single, multiple",name:"selectionMode",required:!1,type:{name:"SelectionMode"}},selectionPreservedOnEmptyClick:{defaultValue:null,description:"By default, selection is cleared when clicking on an empty (non-focusable) section of the screen.\nSetting this value to true overrides that behavior and maintains selection.\n@defaultvalue false",name:"selectionPreservedOnEmptyClick",required:!1,type:{name:"boolean"}},selectionZoneProps:{defaultValue:null,description:"Additional props to pass through to the SelectionZone created by default.",name:"selectionZoneProps",required:!1,type:{name:"ISelectionZoneProps"}},layoutMode:{defaultValue:null,description:"Controls how the columns are adjusted.",name:"layoutMode",required:!1,type:{name:"DetailsListLayoutMode"}},checkboxVisibility:{defaultValue:null,description:"Controls the visibility of selection check box.\n@defaultvalue CheckboxVisibility.onHover",name:"checkboxVisibility",required:!1,type:{name:"CheckboxVisibility"}},isHeaderVisible:{defaultValue:null,description:"Controls the visibility of the header.\n@defaultvalue true",name:"isHeaderVisible",required:!1,type:{name:"boolean"}},columns:{defaultValue:null,description:"Column definitions. If none are provided, default columns will be created based on the items' properties.",name:"columns",required:!1,type:{name:"IColumn[]"}},constrainMode:{defaultValue:null,description:"Controls how the list constrains overflow.",name:"constrainMode",required:!1,type:{name:"ConstrainMode"}},rowElementEventMap:{defaultValue:null,description:"Event names and corresponding callbacks that will be registered to rendered row elements.",name:"rowElementEventMap",required:!1,type:{name:"{ eventName: string; callback: (context: IDragDropContext, event?: any) => void; }[]"}},onDidUpdate:{defaultValue:null,description:"Callback for when the list has been updated. Useful for telemetry tracking externally.",name:"onDidUpdate",required:!1,type:{name:"(detailsList?: DetailsListBase) => void"}},onRowDidMount:{defaultValue:null,description:"Callback for when a given row has been mounted. Useful for identifying when a row has been rendered on the page.",name:"onRowDidMount",required:!1,type:{name:"(item?: any, index?: number) => void"}},onRowWillUnmount:{defaultValue:null,description:"Callback for when a given row has been unmounted.\nUseful for identifying when a row has been removed from the page.",name:"onRowWillUnmount",required:!1,type:{name:"(item?: any, index?: number) => void"}},onColumnHeaderClick:{defaultValue:null,description:"Callback for when the user clicks on the column header.",name:"onColumnHeaderClick",required:!1,type:{name:"(ev?: MouseEvent<HTMLElement, MouseEvent>, column?: IColumn) => void"}},onColumnHeaderContextMenu:{defaultValue:null,description:"Callback for when the user asks for a contextual menu (usually via right click) from a column header.",name:"onColumnHeaderContextMenu",required:!1,type:{name:"(column?: IColumn, ev?: MouseEvent<HTMLElement, MouseEvent>) => void"}},onColumnResize:{defaultValue:null,description:"Callback fired on column resize",name:"onColumnResize",required:!1,type:{name:"(column?: IColumn, newWidth?: number, columnIndex?: number) => void"}},onItemInvoked:{defaultValue:null,description:"Callback for when a given row has been invoked (by pressing enter while it is selected.)",name:"onItemInvoked",required:!1,type:{name:"(item?: any, index?: number, ev?: Event) => void"}},onItemContextMenu:{defaultValue:null,description:"Callback for when the context menu of an item has been accessed.\nIf undefined or false is returned, `ev.preventDefault()` will be called.",name:"onItemContextMenu",required:!1,type:{name:"(item?: any, index?: number, ev?: Event) => boolean | void"}},onRenderRow:{defaultValue:null,description:"Callback to override the default row rendering.",name:"onRenderRow",required:!1,type:{name:"IRenderFunction<IDetailsRowProps>"}},onRenderItemColumn:{defaultValue:null,description:'If provided, will be the "default" item column renderer method.\nThis affects cells within the rows, not the rows themselves.\nIf a column definition provides its own `onRender` method, that will be used instead of this.',name:"onRenderItemColumn",required:!1,type:{name:"(item?: any, index?: number, column?: IColumn) => ReactNode"}},onRenderField:{defaultValue:null,description:"Render function which is composed around rendering every cell.",name:"onRenderField",required:!1,type:{name:"IRenderFunction<IDetailsColumnFieldProps>"}},getCellValueKey:{defaultValue:null,description:'If provided, will be the "default" item column cell value return.\nA column\'s `getValueKey` can override `getCellValueKey`.',name:"getCellValueKey",required:!1,type:{name:"(item?: any, index?: number, column?: IColumn) => string"}},dragDropEvents:{defaultValue:null,description:"Map of callback functions related to row drag and drop functionality.",name:"dragDropEvents",required:!1,type:{name:"IDragDropEvents"}},onRenderMissingItem:{defaultValue:null,description:"Callback for what to render when the item is missing.",name:"onRenderMissingItem",required:!1,type:{name:"(index?: number, rowProps?: IDetailsRowProps) => ReactNode"}},onRenderDetailsHeader:{defaultValue:null,description:"An override to render the details header.",name:"onRenderDetailsHeader",required:!1,type:{name:"IRenderFunction<IDetailsHeaderProps>"}},onRenderDetailsFooter:{defaultValue:null,description:"An override to render the details footer.",name:"onRenderDetailsFooter",required:!1,type:{name:"IRenderFunction<IDetailsFooterProps>"}},onRenderCheckbox:{defaultValue:null,description:"If provided, can be used to render a custom checkbox.",name:"onRenderCheckbox",required:!1,type:{name:"IRenderFunction<IDetailsListCheckboxProps>"}},viewport:{defaultValue:null,description:"Viewport info, provided by the `withViewport` decorator.",name:"viewport",required:!1,type:{name:"IViewport"}},onActiveItemChanged:{defaultValue:null,description:"Callback for when an item in the list becomes active by clicking anywhere inside the row or navigating to it\nwith the keyboard.",name:"onActiveItemChanged",required:!1,type:{name:"(item?: any, index?: number, ev?: FocusEvent<HTMLElement, Element>) => void"}},ariaLabelForListHeader:{defaultValue:null,description:"Accessible label for the list header.",name:"ariaLabelForListHeader",required:!1,type:{name:"string"}},ariaLabelForSelectAllCheckbox:{defaultValue:null,description:"Accessible label for the select all checkbox.",name:"ariaLabelForSelectAllCheckbox",required:!1,type:{name:"string"}},ariaLabelForSelectionColumn:{defaultValue:null,description:"Accessible label for the name of the selection column.",name:"ariaLabelForSelectionColumn",required:!1,type:{name:"string"}},getRowAriaLabel:{defaultValue:null,description:"Callback to get the aria-label string for a given item.",name:"getRowAriaLabel",required:!1,type:{name:"(item: any) => string"}},getRowAriaDescribedBy:{defaultValue:null,description:"Callback to get the aria-describedby IDs (space-separated strings) of elements that describe the item.",name:"getRowAriaDescribedBy",required:!1,type:{name:"(item: any) => string"}},getKey:{defaultValue:null,description:"Callback to get the item key, to be used in the selection and on render.\nMust be provided if sorting or filtering is enabled.",name:"getKey",required:!1,type:{name:"(item: any, index?: number) => string"}},checkButtonAriaLabel:{defaultValue:null,description:'Accessible label for the row check button, e.g. "select row".',name:"checkButtonAriaLabel",required:!1,type:{name:"string"}},checkButtonGroupAriaLabel:{defaultValue:null,description:'Accessible label for the group header check button, e.g. "select section".',name:"checkButtonGroupAriaLabel",required:!1,type:{name:"string"}},ariaLabelForGrid:{defaultValue:null,description:"Accessible label for the grid within the list.",name:"ariaLabelForGrid",required:!1,type:{name:"string"}},flexMargin:{defaultValue:null,description:"An optional margin for proportional columns, to e.g. account for scrollbars when laying out width.",name:"flexMargin",required:!1,type:{name:"number"}},shouldApplyApplicationRole:{defaultValue:null,description:"Whether the role `application` should be applied to the list.\n@defaultvalue false\n@deprecated using the application role in this case is an antipattern, and heavily discouraged.",name:"shouldApplyApplicationRole",required:!1,type:{name:"boolean"}},minimumPixelsForDrag:{defaultValue:null,description:"The minimum mouse move distance to interpret the action as drag event.\n@defaultvalue 5",name:"minimumPixelsForDrag",required:!1,type:{name:"number"}},compact:{defaultValue:null,description:"Whether to render in compact mode.\n@defaultvalue false",name:"compact",required:!1,type:{name:"boolean"}},usePageCache:{defaultValue:null,description:"Whether to enable render page caching. This is an experimental performance optimization that is off by default.\n@defaultvalue false",name:"usePageCache",required:!1,type:{name:"boolean"}},onShouldVirtualize:{defaultValue:null,description:"Callback to determine whether the list should be rendered in full, or virtualized.\n\nVirtualization will add and remove pages of items as the user scrolls them into the visible range.\nThis benefits larger list scenarios by reducing the DOM on the screen, but can negatively affect performance\nfor smaller lists.\n\nThe default implementation will virtualize when this callback is not provided.",name:"onShouldVirtualize",required:!1,type:{name:"(props: IListProps<any>) => boolean"}},checkboxCellClassName:{defaultValue:null,description:"Class name to add to the cell of a checkbox.",name:"checkboxCellClassName",required:!1,type:{name:"string"}},enterModalSelectionOnTouch:{defaultValue:null,description:"Whether the selection zone should enter modal state on touch.",name:"enterModalSelectionOnTouch",required:!1,type:{name:"boolean"}},columnReorderOptions:{defaultValue:null,description:"Options for column reordering using drag and drop.",name:"columnReorderOptions",required:!1,type:{name:"IColumnReorderOptions"}},getGroupHeight:{defaultValue:null,description:"Callback to override default group height calculation used by list virtualization.",name:"getGroupHeight",required:!1,type:{name:"(group: IGroup, groupIndex: number) => number"}},useReducedRowRenderer:{defaultValue:null,description:"Whether to re-render a row only when props changed. Might cause regression when depending on external updates.\n@defaultvalue false",name:"useReducedRowRenderer",required:!1,type:{name:"boolean"}},cellStyleProps:{defaultValue:null,description:"Props impacting the render style of cells. Since these have an impact on calculated column widths, they are\nhandled separately from normal theme styling, but they are passed to the styling system.",name:"cellStyleProps",required:!1,type:{name:"ICellStyleProps"}},disableSelectionZone:{defaultValue:null,description:"Whether to disable the built-in SelectionZone, so the host component can provide its own.",name:"disableSelectionZone",required:!1,type:{name:"boolean"}},isSelectedOnFocus:{defaultValue:null,description:"Determines if an item is selected on focus.\n@defaultvalue true",name:"isSelectedOnFocus",required:!1,type:{name:"boolean"}},enableUpdateAnimations:{defaultValue:null,description:"Whether to animate updates",name:"enableUpdateAnimations",required:!1,type:{name:"boolean"}},useFastIcons:{defaultValue:null,description:"Whether to use fast icon and check components. The icons can't be targeted by customization\nbut are still customizable via class names.\n@defaultvalue true",name:"useFastIcons",required:!1,type:{name:"boolean"}},focusZoneProps:{defaultValue:null,description:"Properties to pass through to the FocusZone.",name:"focusZoneProps",required:!1,type:{name:"IFocusZoneProps"}},skipViewportMeasures:{defaultValue:null,description:"Whether or not `withViewport` should disable its viewport measurements, effectively making this decorator\npass-through with no impact on the rendered component.\n\nSince `withViewport` measures the `viewport` on mount, after each React update, and in response to events,\nit may cause a component which does not currently need this information due to its configuration to re-render\ntoo often. `skipViewportMeasures` may be toggled on and off based on current state, and will suspend and resume\nmeasurement as-needed.\n\nFor example, when this wraps `DetailsList`, set `skipViewportMeasures` to `true` when the `layoutMode` is\n`fixedColumns`, since the `DetailsList` does not use the viewport size in any calculations.\n\nIn addition, consider setting `skipViewportMeasures` to `true` when running within a React test renderer, to avoid\ndirect DOM dependencies.",name:"skipViewportMeasures",required:!1,type:{name:"boolean"}},disableResizeObserver:{defaultValue:null,description:"Whether or not to explicitly disable usage of the `ResizeObserver` in favor of a `'resize'` event on `window`,\neven if the browser supports `ResizeObserver`. This may be necessary if use of `ResizeObserver` results in too\nmany re-renders of the wrapped component due to the frequency at which events are fired.\n\nThis has no impact if `skipViewportMeasures` is `true`, as no viewport measurement strategy is used.",name:"disableResizeObserver",required:!1,type:{name:"boolean"}},delayFirstMeasure:{defaultValue:{value:"false"},description:"Whether or not `withViewport` will delay before first measuring the viewport size.\nSetting this will delay measurement by the same amount as the debounce for resizing the window.\nThis is useful for giving the child of the viewport time to render before measuring.\n\nThis is an opt-in setting as existing systems have a dependency on immediate measurement for performance.",name:"delayFirstMeasure",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../react/src/components/ArqueroDetailsList/__tests__/RowGrouping/RowGrouping.tsx#RowGrouping"]={docgenInfo:RowGrouping.__docgenInfo,name:"RowGrouping",path:"../react/src/components/ArqueroDetailsList/__tests__/RowGrouping/RowGrouping.tsx#RowGrouping"})}catch(__react_docgen_typescript_loader_error){}const RowGroupingStory=(args,{loaded:{stocks}})=>(0,jsx_runtime.jsx)(RowGrouping,{...args,table:stocks});RowGroupingStory.storyName="Row grouping";const ArqueroDetailsList_stories={title:"Components/ArqueroDetailsList",component:ArqueroDetailsList.Q,args:{style:{border:"1px solid orange"}},argTypes:{compact:{control:"boolean"},showColumnBorders:{control:"boolean"},sortable:{control:"boolean"}}},Basic=(args,{loaded:{companies}})=>(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{...args,table:companies}),Features=FeaturesStory,Fill=FillStory,Micro=MicroStory;Micro.storyName="Micro mode";const ArqueroDetailsList_stories_Columns=(args,{loaded:{stocks}})=>(0,jsx_runtime.jsx)(Columns,{...args,table:stocks}),Selection=(args,{loaded:{stocks}})=>{const[selected,setSelected]=(0,react.useState)(),metadata=(0,react.useMemo)((()=>(0,introspect.L)(stocks,!0)),[stocks]),handleSelect=(0,react.useCallback)(((_e,c)=>setSelected((prev=>c?.key===prev?void 0:c?.key))),[setSelected]);return(0,jsx_runtime.jsx)(ArqueroDetailsList.Q,{features:{statsColumnHeaders:!0,statsColumnTypes:[ArqueroDetailsList_types.G.Type],histogramColumnHeaders:!0},showColumnBorders:!0,sortable:!0,defaultSortColumn:"Date",...args,table:stocks,metadata,selectedColumn:selected,onColumnSelect:handleSelect})};Selection.storyName="Selection & sorting";const ArqueroDetailsList_stories_RowGrouping=RowGroupingStory,ColumnValidation=ColumnValidationStory,ArqueroDetailsList_stories_Performance=PerformanceStory;Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"BasicStory",...Basic.parameters?.docs?.source}}},Features.parameters={...Features.parameters,docs:{...Features.parameters?.docs,source:{originalSource:"FeaturesStory",...Features.parameters?.docs?.source}}},Fill.parameters={...Fill.parameters,docs:{...Fill.parameters?.docs,source:{originalSource:"FillStory",...Fill.parameters?.docs?.source}}},Micro.parameters={...Micro.parameters,docs:{...Micro.parameters?.docs,source:{originalSource:"MicroStory",...Micro.parameters?.docs?.source}}},ArqueroDetailsList_stories_Columns.parameters={...ArqueroDetailsList_stories_Columns.parameters,docs:{...ArqueroDetailsList_stories_Columns.parameters?.docs,source:{originalSource:"ColumnsStory",...ArqueroDetailsList_stories_Columns.parameters?.docs?.source}}},Selection.parameters={...Selection.parameters,docs:{...Selection.parameters?.docs,source:{originalSource:"SelectionStory",...Selection.parameters?.docs?.source}}},ArqueroDetailsList_stories_RowGrouping.parameters={...ArqueroDetailsList_stories_RowGrouping.parameters,docs:{...ArqueroDetailsList_stories_RowGrouping.parameters?.docs,source:{originalSource:"RowGroupingStory",...ArqueroDetailsList_stories_RowGrouping.parameters?.docs?.source}}},ColumnValidation.parameters={...ColumnValidation.parameters,docs:{...ColumnValidation.parameters?.docs,source:{originalSource:"ColumnValidationStory",...ColumnValidation.parameters?.docs?.source}}},ArqueroDetailsList_stories_Performance.parameters={...ArqueroDetailsList_stories_Performance.parameters,docs:{...ArqueroDetailsList_stories_Performance.parameters?.docs,source:{originalSource:"PerformanceStory",...ArqueroDetailsList_stories_Performance.parameters?.docs?.source}}}},"../react/src/empty.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{FD:()=>emptyObject,LZ:()=>EMPTY_ARRAY,Nu:()=>EMPTY_OBJECT,ow:()=>emptyArray});const EMPTY_ARRAY=Object.freeze([]),EMPTY_OBJECT=Object.freeze({});function emptyArray(){return EMPTY_ARRAY}function emptyObject(){return EMPTY_OBJECT}},"../schema/src/enums/SortDirection.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var SortDirection;__webpack_require__.d(__webpack_exports__,{S:()=>SortDirection}),function(SortDirection){SortDirection.Ascending="asc",SortDirection.Descending="desc"}(SortDirection||(SortDirection={}))},"../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isDate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>lodash_es_isDate});var _baseGetTag=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/_baseGetTag.js"),isObjectLike=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isObjectLike.js");const _baseIsDate=function baseIsDate(value){return(0,isObjectLike.Z)(value)&&"[object Date]"==(0,_baseGetTag.Z)(value)};var _baseUnary=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/_baseUnary.js"),_nodeUtil=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/_nodeUtil.js"),nodeIsDate=_nodeUtil.Z&&_nodeUtil.Z.isDate;const lodash_es_isDate=nodeIsDate?(0,_baseUnary.Z)(nodeIsDate):_baseIsDate},"../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isNaN.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>lodash_es_isNaN});var _baseGetTag=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/_baseGetTag.js"),isObjectLike=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isObjectLike.js");const lodash_es_isNumber=function isNumber(value){return"number"==typeof value||(0,isObjectLike.Z)(value)&&"[object Number]"==(0,_baseGetTag.Z)(value)};const lodash_es_isNaN=function isNaN_isNaN(value){return lodash_es_isNumber(value)&&value!=+value}},"../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/isNil.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=function isNil(value){return null==value}}}]);
//# sourceMappingURL=react-src-components-ArqueroDetailsList-__tests__-ArqueroDetailsList-stories.dc91c960.iframe.bundle.js.map