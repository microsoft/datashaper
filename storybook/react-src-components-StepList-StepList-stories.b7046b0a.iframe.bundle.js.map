{"version":3,"file":"react-src-components-StepList-StepList-stories.b7046b0a.iframe.bundle.js","mappings":";;;;;;;AAgBA;AACA;;;;AAMA;;;AAGA;;AAKA;;;;;AAKA;;;;ACZA;;;;AAIA;AAGA;;;;;;;;;;ACCA;;;;;;;;AAUA","sources":["webpack://@datashaper/stories/../react/src/components/StepList/StepHeader.styles.ts","webpack://@datashaper/stories/../react/src/components/StepList/StepList.styles.ts","webpack://@datashaper/stories/../react/src/components/StepEditor/StepEditor.styles.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\n// TODO: this calc is because the CollapsiblePanel doesn't flex properly to constrain the width.\n// so the total width ends up offset by the width of the chevron\nexport const Container = styled.div`\n\twidth: calc(100% - 24px);\n\tdisplay: flex;\n\tgap: 4px;\n\talign-items: center;\n\tjustify-content: flex-start;\n`\n\nexport const Index = styled.div`\n\tcolor: ${({ theme }) => theme.palette.neutralTertiaryAlt};\n\tfont-size: 12px;\n\ttext-align: right;\n\tmin-width: 20px;\n`\n\nexport const Verb = styled.div<{ selected?: boolean }>`\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\tcolor: ${({ selected, theme }) =>\n\t\tselected ? theme.palette.themePrimary : theme.palette.neutralSecondary};\n\twhite-space: nowrap;\n`\n\nexport const Details = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-align: left;\n\tcolor: ${({ theme }) => theme.palette.neutralSecondaryAlt};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { CollapsiblePanelStyles } from '@essex/components'\nimport styled from '@essex/styled-components'\nimport { useTheme } from '@fluentui/react'\nimport { useMemo } from 'react'\n\nexport const buttonStyles = { width: 100 }\n\nexport const icons = {\n\tpreview: { iconName: 'View' },\n\tadd: { iconName: 'Add' },\n\tchevronRight: { iconName: 'ChevronRight' },\n\tchevronDown: { iconName: 'ChevronDown' },\n\tinfo: { iconName: 'Info' },\n}\n\nexport const Container = styled.div`\n\twidth: 100%;\n\theight: 100%;\n`\n\nexport const ButtonContainer = styled.div`\n\tpadding: 8px;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\tborder-bottom: 1px solid ${({ theme }) => theme.palette.neutralQuaternaryAlt};\n`\n\nexport const StepsContainer = styled.div``\n\nexport function useCollapsiblePanelStyles(): CollapsiblePanelStyles {\n\tconst theme = useTheme()\n\treturn useMemo(\n\t\t() => ({\n\t\t\theader: {\n\t\t\t\tbackground: theme.palette.white,\n\t\t\t\tcolor: theme.palette.neutralPrimary,\n\t\t\t\tpadding: '4px 0',\n\t\t\t\tborderBottom: 'none',\n\t\t\t\tborderTop: 'none',\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tborder: 'none',\n\t\t\t\tborderBottom: `1px solid ${theme.palette.neutralQuaternaryAlt}`,\n\t\t\t},\n\t\t}),\n\t\t[theme],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from '@essex/styled-components'\nimport type {\n\tIModalStyleProps,\n\tIModalStyles,\n\tIStyleFunctionOrObject,\n} from '@fluentui/react'\nimport { useTheme } from '@fluentui/react'\nimport merge from 'lodash-es/merge.js'\nimport { useMemo } from 'react'\n\nexport const icons = {\n\tsave: { iconName: 'CheckMark' },\n\tdelete: { iconName: 'Delete' },\n}\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tflex-direction: column;\n\toverflow: auto;\n\tborder: none;\n\twidth: auto;\n\t// extra padding on left leaves room for \"overhanging\" delete buttons\n\t// while still allowing the primary content to remain centered\n\tpadding-left: 32px;\n`\n\nexport const Actions = styled.div`\n\tpadding-right: 32px;\n\tmargin-top: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tgap: 12px;\n\twidth: 100%;\n`\n\nexport function useModalStyles(\n\tstyles?: IStyleFunctionOrObject<IModalStyleProps, IModalStyles>,\n): IStyleFunctionOrObject<IModalStyleProps, IModalStyles> {\n\tconst theme = useTheme()\n\treturn useMemo(\n\t\t() =>\n\t\t\tmerge(\n\t\t\t\t{\n\t\t\t\t\troot: {\n\t\t\t\t\t\tborder: `1px solid ${theme.palette.neutralLighter}`,\n\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\tmaxHeight: 580,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tstyles,\n\t\t\t),\n\t\t[theme, styles],\n\t)\n}\n"],"names":[],"sourceRoot":""}