{"version":3,"file":"main.944aa40683b31846be94.js","mappings":";;AA+FA;AAMA;AAiBA;AC1GA;AACA;AACA;;;;;;ACDA;;;;;AAOA;;AAIA;;;;;AAMA;;;;ACjBA;;;;AAMA;;;AAKA;;;;;AAOA;;;;AClBA;;;AAKA;;;;;AAKA;AAGA;;AAIA;AAGA;;AAEA;;;AC7BA;ACHA;;ACSA;AACA;;;;AAMA;;;AAKA;;;;AAMA;;;AAGA;;;;AAMA;;;;AC3BA;;;;AAgBA;AAEA;ACpBA;;;;AAIA;AAGA;;AAIA;;AAIA;;;;;;ACRA;;;;;AAKA;AAEA;;;;;;;;;;;;;;ACdA;AACA;ACDA;;;;;;ACOA;;;;AAMA;;;;AAMA;;;;;;;;;;ACvBA;;AAIA;;;;;;;;AAQA;;ACFA;ACSA;AAAA;;;ACXA;;AAGA;;;;;ACXA;;;ACSA;;ACZA;;;;ACkBA;AAIA;;;;;AAKA;AAGA;;AApBA;AALA;AA6BA;AAzBA;AA6BA;;;;AA3BA;AAAA;AAAA;AADA;AAAA;;AAwCA;;;AAGA;AAGA;AA5CA;;AA+CA;AAGA;;;;;AAKA;AA1DA;AA8DA;;;;;;AC3DA;;AAGA;;AAIA;;;;ACPA;AACA;AAGA;;AAIA;;;ACZA;;AAIA;;;;ACMA;;ACJA;;;;AAMA;;;;;AAOA;;;;;ACNA;;;;;;ACPA;;AAGA;AAGA;;;ACFA;;ACNA;;;;AAAA;;;;ACPA;;;ACRA;;ACOA;;;;;;AAMA;AACA;AAGA;;;;;;ACJA;AAGA;;;AAGA;AAIA;;ACCA;;;;ACNA;;;ACNA;;;AAKA;;;;;AAKA;AAGA;;;AAKA;;AAIA;;AAIA;;;;ACKA;;;;AC/BA;;;;AAKA;;;;ACMA;;;ACPA;;;;AC6CA;;;AClDA;;;ACAA;;;;AAMA;;;AC8EA;;;;;AAOA;;;ACqDA;;;;AAMA;;;;AAMA;;;AC3JA;;;;AAMA;;AAIA;;;;;AAKA;AAGA;;;;ACUA;;;;;;;;;;ACRA;;;;;;;;ACdA;;;;;;ACLA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;;;;;;AAeA;;AAIA;;;;AAMA;;ACtDA;;;ACAA;;;;;ACQA;;;;AAIA;AAGA;;;AAKA;;;;AAMA;AA3BA;;;AAiCA;;AAEA;;ACvBA;;ACnBA;;;;;;ACaA;AACA;;;;AAMA;;;AAGA;;AAKA;;;;;AAKA;AC8BA;;;AC1CA;;;;AAIA;AAGA;;;;;;AClBA;AAGA;;;AAGA;ACgBA;;;;;;;;;ACpBA;AACA;AACA;AAGA;;AAYA;;;ACrBA;;ACDA;;AAKA;;;;;;AAWA;;;;;;AAMA;AAMA;;;;;AAKA;AClCA;;ACFA;;;;;;AAMA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;;;;;;AAeA;;AAIA;;;;AAMA;;ACvDA;;AAIA;;;ACCA;;ADQA;;ACRA;;;;;;;;;;ACIA","sources":["webpack://@datashaper/webapp/../../.yarn/cache/ajv-npm-8.12.0-3bf6e30741-4dc13714e3.zip/node_modules/ajv/dist/compile/validate/dataType.js","webpack://@datashaper/webapp/../../.yarn/cache/ajv-npm-8.12.0-3bf6e30741-4dc13714e3.zip/node_modules/ajv/dist/vocabularies/applicator/dependencies.js","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/DataTableConfig/DataTableConfig.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/DataTableConfig/Parser/Parser.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/DataTableConfig/Shape/Shape.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/DataTableConfig/Shape/TableLayoutOptions.utils.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroTableHeader/ArqueroTableHeader.constants.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroTableHeader/ArqueroTableHeader.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroTableHeader/TableName.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/GroupHeader.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/ArqueroDetailsList.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/renderers/CommandBarContainer.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/renderers/CommandBarContainer.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/renderers/DefaultColumnHeader.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/renderers/ValidationCellWrapper.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/renderers/ValidationCellWrapper.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/ArqueroDetailsList.constants.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/renderers/StatCell.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/ArqueroDetailsList/renderers/StatsColumnHeader.constants.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/tables/RawTable/RawTable.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/tables/RawTable/RawTable.types.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/tables/ImportTable/ImportTable.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/app/ResourcesPane/ResourcesPane.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/app/ResourcesPane/FileTreeCommands.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/Codebook/CodebookStatsField/CodebookStatsField.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/Codebook/CodebookStatsField/CodebookStatsField.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/controls/CalendarPicker/CalendarPicker.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/controls/CalendarPicker/CalendarPicker.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/shared/DataTypeField.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/shared/DataTypeField.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/hooks/controls/mapping.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@monaco-editor-loader-virtual-521ab79a09/0/cache/@monaco-editor-loader-npm-1.3.2-a1ecf5411f-7a1b65052b.zip/node_modules/@monaco-editor/loader/lib/es/_virtual/_rollupPluginBabelHelpers.js","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/editors/JsonModeEditor/ViewOptions.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/editors/DataTableEditor/TableEditor.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/editors/DataTableEditor/TableEditor.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/forms/VerbForm.styles.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/shared/FilterFunction.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/shared/FilterFunction.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/FilterForm/FilterForm.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/FilterForm/FilterForm.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/SetOperationForm/SetOperationForm.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/SetOperationForm/SetOperationForm.hooks.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/controls/SortInstruction/SortInstruction.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/OrderbyForm/OrderbyForm.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/RecodeForm/RecodeForm.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/RenameForm/RenameForm.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/verbs/forms/SampleForm/Sample.styles.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/StepForm/StepForm.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/StepEditor/StepEditor.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/StepEditor/StepEditor.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/Guidance/Guidance.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/TableCommands/GuidanceExpansion.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/TableCommands/GuidanceExpansion.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/TableCommands/StepEditorModal.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/TableCommands/StepEditorModal.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@fluentui-react-virtual-a64e445ee2/0/cache/@fluentui-react-npm-8.104.6-7e80844282-fcb78a930b.zip/node_modules/@fluentui/react/lib/components/Dialog/DialogContent.types.js","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/StepList/StepHeader.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/StepList/StepHeader.utils.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-18495c3c5e/1/javascript/react/src/components/StepList/StepList.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/editors/TableBundleEditor/BundleEditor.styles.ts","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-app-framework-virtual-2df40eb901/1/javascript/app-framework/src/components/editors/TableBundleEditor/BundleEditor.tsx","webpack://@datashaper/webapp/./src/components/Footer.styles.ts","webpack://@datashaper/webapp/./src/components/Footer.tsx","webpack://@datashaper/webapp/./src/components/Header.styles.ts","webpack://@datashaper/webapp/./src/components/Header.tsx","webpack://@datashaper/webapp/../../.yarn/__virtual__/@datashaper-react-virtual-81089ac0d8/1/javascript/react/src/components/Guidance/Guidance.styles.ts","webpack://@datashaper/webapp/./src/components/SettingsPanel.styles.ts","webpack://@datashaper/webapp/./src/components/SettingsPanel.tsx","webpack://@datashaper/webapp/./src/App/App.tsx"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tgap: 10px;\n\theight: 100%;\n`\nexport const FormatContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n`\n\nexport const ParserContainer = styled.div`\n\twidth: 100%;\n`\n\nexport const ShapeContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 12px;\n`\nexport const buttonChoiceGroupStyles = { alignSelf: 'flex-start' }\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 12px;\n`\n\nexport const FlexContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 12px;\n`\n\nexport const FieldContainer = styled.div`\n\tdisplay: flex;\n\tcolumn-gap: 10px;\n`\n\nexport const DelimiterContainer = styled.div`\n\tdisplay: flex;\n\tgap: 10px;\n\tflex-direction: row;\n\talign-items: flex-end;\n`\n\nexport const expandoStyles = {\n\tcontent: {\n\t\tpaddingTop: 20,\n\t},\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ITheme } from '@fluentui/react'\nimport { Label } from '@fluentui/react'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 12px;\n`\nexport const FieldContainer = styled.div`\n\tdisplay: flex;\n\tcolumn-gap: 10px;\n`\n\nexport const Code = styled.pre`\n\tmargin: 0;\n\tpadding: 4px;\n\tfont-size: 11px;\n\tborder: 1px solid\n\t\t${({ theme }: { theme: ITheme }) => theme.palette.neutralQuaternary};\n`\n\nexport const ExampleContainer = styled.div``\n\nexport const ExampleLabel = styled(Label)`\n\tfont-weight: normal;\n\tcolor: ${({ theme }: { theme: ITheme }) => theme.palette.neutralSecondary};\n`\n\nexport const ExampleDescription = styled.p`\n\tfont-weight: normal;\n\tcolor: ${({ theme }: { theme: ITheme }) => theme.palette.neutralSecondary};\n\tfont-size: 11px;\n\tmargin: 0;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { DataOrientation } from '@datashaper/schema'\n\nexport const DATA_LAYOUT_OPTIONS = Object.keys(DataOrientation).map((d) => {\n\treturn {\n\t\tkey: d.toLowerCase(),\n\t\ttext: d,\n\t}\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nexport const DEFAULT_HEIGHT = 36\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from '@essex/styled-components'\n\nimport { DEFAULT_HEIGHT } from './ArqueroTableHeader.constants.js'\n\nexport const Container = styled.div<{ background: string; color: string }>`\n\theight: ${DEFAULT_HEIGHT}px;\n\twidth: 100%;\n\tbackground-color: ${({ background }) => background};\n\tcolor: ${({ color }) => color};\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`\n\nexport const H3 = styled.h3`\n\tfont-weight: normal;\n\tfont-size: 0.8em;\n`\n\nexport const Left = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n`\n\nexport const Middle = styled.div<{ hasFarCommandBar: boolean }>`\n\tflex: 2;\n\tdisplay: flex;\n\tjustify-content: ${({ hasFarCommandBar }) =>\n\t\thasFarCommandBar ? 'center' : 'end'};\n\talign-items: center;\n\tpadding: 0 8px;\n\tgap: 8px;\n`\nexport const Right = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { memo } from 'react'\n\nimport type { TableNameProps } from './TableName.types.js'\n\n/**\n * Renders the table name if passed, or the option to rename the name if the function\n * onRenameTable is passed to be called when clicking save or pressing enter on the callout\n */\nexport const TableName: React.FC<TableNameProps> = memo(function TableName({\n\tname,\n\tcolor,\n}) {\n\treturn (\n\t\t<Container>\n\t\t\t<H3 color={color}>{name}</H3>\n\t\t</Container>\n\t)\n})\n\nconst H3 = styled.h3<{ color?: string }>`\n\tfont-weight: normal;\n\tfont-size: 0.8em;\n\tmargin-right: 8px;\n\tcolor: ${({ theme, color }) => color || theme.palette.white};\n`\nconst Container = styled.div``\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from '@essex/styled-components'\nimport type { ITheme } from '@fluentui/react'\nimport { IconButton } from '@fluentui/react'\n\nexport const HeaderContainer = styled.div<{ groupLevel: number }>`\n\tpadding-left: ${({ groupLevel }) => `${groupLevel * 12}px`};\n\tdisplay: flex;\n\tgap: 8px;\n\tborder-bottom: 1px solid\n\t\t${({ theme }: { theme: ITheme }) => theme.palette.neutralLight};\n`\n\nexport const LevelButton = styled(IconButton)`\n\twidth: 32px;\n`\n\nexport const HeaderDetailsText = styled.span`\n\talign-self: center;\n`\n\nexport const Bold = styled.b``\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\nimport { DEFAULT_ROW_HEIGHT } from './ArqueroDetailsList.constants.js'\n\nexport const DetailsWrapper = styled.div<{\n\tcompact: boolean\n\tcompactRowHeight: number\n}>`\n\theight: inherit;\n\tmax-height: inherit;\n\toverflow-y: auto;\n\toverflow-x: auto;\n\tspan.ms-DetailsHeader-cellTitle {\n\t\tbackground-color: ${({ theme }) => theme.palette.white};\n\t\tpadding-left: 10px;\n\t}\n\n\t.ms-List-cell {\n\t\tmin-height: ${({ compact, compactRowHeight }) =>\n\t\t\tcompact ? compactRowHeight : DEFAULT_ROW_HEIGHT}px;\n\t\theight: ${({ compact, compactRowHeight }) =>\n\t\t\tcompact ? compactRowHeight : DEFAULT_ROW_HEIGHT}px;\n\t}\n\n\t.ms-CommandBar {\n\t\tpadding: unset;\n\t}\n\n\t.ms-OverflowSet {\n\t\tjustify-content: center;\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tborder-top: 1px solid ${({ theme }) => theme.palette.neutralLighter};\n\tborder-bottom: 1px solid ${({ theme }) => theme.palette.neutralLighter};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { memo } from 'react'\n\nimport { Container } from './CommandBarContainer.styles.js'\nimport type { CommandBarContainerProps } from './CommandBarContainer.types.js'\nexport type { CommandBarContainerProps } from './CommandBarContainer.types.js'\n\nexport const CommandBarContainer: React.FC<CommandBarContainerProps> = memo(\n\tfunction CommandBarContainer({ props, renderers }) {\n\t\treturn (\n\t\t\t<Container className=\"header-command-bar\">\n\t\t\t\t{renderers.map((renderer, i) => (\n\t\t\t\t\t<div key={`${renderer.name}@${i}`}>{renderer(props)}</div>\n\t\t\t\t))}\n\t\t\t</Container>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport type { ITooltipHostStyles } from '@fluentui/react'\nimport { Icon } from '@fluentui/react'\nimport styled from 'styled-components'\n\nexport const HoverContainer = styled.div`\n\twidth: 14px;\n\tmin-height: 14px;\n\ttext-align: right;\n\tdisplay: flex;\n\talign-items: center;\n`\n\nexport const LeftIcon = styled(Icon)`\n\twidth: 14px;\n\tposition: absolute;\n\tleft: 8px;\n`\n\nexport const RightIcon = styled(Icon)`\n\twidth: 14px;\n\tposition: absolute;\n\tright: 8px;\n`\n\nexport const hostStyles: Partial<ITooltipHostStyles> = {\n\troot: { display: 'flex', alignItems: 'center' },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const WarningContainer = styled.div`\n\twidth: 10px;\n`\n\nexport const Warning = styled.div`\n\twidth: 0;\n\theight: 0;\n\tposition: absolute;\n\ttop: 0;\n\tleft: -3px;\n\tborder-left: 6px solid transparent;\n\tborder-right: 6px solid transparent;\n\tborder-bottom: 6px solid ${({ theme }) => theme.application().warning().hex()};\n\ttransform: rotate(-45deg);\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { DirectionalHint } from '@fluentui/react'\nimport type { ITooltipHostStyles } from '@fluentui/react/lib/Tooltip'\nimport { TooltipHost } from '@fluentui/react/lib/Tooltip'\nimport { useId } from '@fluentui/react-hooks'\nimport { memo } from 'react'\n\nimport { getValue } from '../ArqueroDetailsList.utils.js'\nimport { useGetColumnValidationErrors } from '../hooks/useGetColumnValidationErrors.js'\nimport { useValidationErrors } from '../hooks/useValidationErrors.js'\nimport type { FormattedCellProps } from './types.js'\nimport { Warning, WarningContainer } from './ValidationCellWrapper.styles.js'\n\nconst hostStyles: Partial<ITooltipHostStyles> = {\n\troot: { display: 'inline-block' },\n}\nconst calloutProps = { gapSpace: 0 }\n\n/**\n * Wraps any cell rendering with indication of validation errors if present.\n * This statically fixes the left spacing of the contents so there is room for a warning triangle in the corner (like Excel).\n */\nexport const ValidationCellWrapper: React.FC<\n\tReact.PropsWithChildren<FormattedCellProps>\n> = memo(function ValidationCellWrapper({\n\titem,\n\tcolumn,\n\tvalidationResult,\n\tchildren,\n}) {\n\tconst value = getValue(item, column)\n\tconst tooltipId = useId('tooltip')\n\tconst errors = useValidationErrors(value, validationResult)\n\tconst errorMessages = useGetColumnValidationErrors(\n\t\t'This cell value violates the following constraints:',\n\t\terrors,\n\t)\n\treturn (\n\t\t<>\n\t\t\t<WarningContainer>\n\t\t\t\t{errorMessages && (\n\t\t\t\t\t<TooltipHost\n\t\t\t\t\t\tcontent={errorMessages}\n\t\t\t\t\t\tid={tooltipId}\n\t\t\t\t\t\tcalloutProps={calloutProps}\n\t\t\t\t\t\tstyles={hostStyles}\n\t\t\t\t\t\tdirectionalHint={DirectionalHint.bottomRightEdge}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Warning />\n\t\t\t\t\t</TooltipHost>\n\t\t\t\t)}\n\t\t\t</WarningContainer>\n\t\t\t{children}\n\t\t</>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n/**\n * Hard-coded in the fluent DetailsList rows.\n * https://github.com/microsoft/fluentui/blob/547d0184dbf41e4b42ffb13f6db2dac0fd85f70a/packages/react/src/components/DetailsList/DetailsRow.styles.ts#L40\n */\nexport const DEFAULT_ROW_HEIGHT = 42\n/**\n * Hard-coded in the fluent DetailsList rows\n */\nexport const COMPACT_ROW_HEIGHT = 32\n\n/**\n * Hard-coded in the fluent DetailsList cell header\n */\nexport const HEADER_WIDTH_PADDING = 20\n\n/**\n * Includes text height and DetailsList hard-coded padding\n */\nexport const BASE_HEADER_HEIGHT = 33\nexport const DEFAULT_COLUMN_WIDTH = 100\n\nexport const STATS_HEADER_ITEM_HEIGHT = 14\n\nexport const HISTOGRAM_HEADER_PADDING = 8\nexport const HISTOGRAM_HEADER_HEIGHT = 20\nexport const HISTOGRAM_HEADER_COMPACT_HEIGHT = 16\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nimport { STATS_HEADER_ITEM_HEIGHT } from '../ArqueroDetailsList.constants.js'\n\nexport const Container = styled.div`\n\theight: ${STATS_HEADER_ITEM_HEIGHT}px;\n\tline-height: ${STATS_HEADER_ITEM_HEIGHT}px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\nexport const Name = styled.div`\n\ttext-transform: capitalize;\n`\nexport const Value = styled.div`\n\tmax-width: '100%';\n\toverflow: 'hidden';\n\twhite-space: 'nowrap';\n\ttext-overflow: 'ellipsis';\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { StatsColumnType } from '../ArqueroDetailsList.types.js'\n\nexport const pretty: Record<string, string> = {\n\tdistinct: 'unique',\n\tinvalid: 'empty',\n}\n\nexport const DEFAULT_STATS: StatsColumnType[] = [\n\tStatsColumnType.Type,\n\tStatsColumnType.Distinct,\n\tStatsColumnType.Invalid,\n\tStatsColumnType.Min,\n\tStatsColumnType.Max,\n]\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport type { ArqueroTableHeaderStyles } from '@datashaper/react'\nimport { MessageBar, useTheme } from '@fluentui/react'\nimport { useMemo } from 'react'\nimport styled from 'styled-components'\n\nexport const DatasetContainer = styled.div`\n\tmax-height: calc(100% - 36px);\n\theight: 100%;\n`\n\nexport const Message = styled(MessageBar)``\n\nexport const DetailsListContainer = styled.div`\n\theight: 100%;\n`\n\nexport function useHeaderStyles(): ArqueroTableHeaderStyles {\n\tconst theme = useTheme()\n\treturn useMemo(\n\t\t() => ({\n\t\t\troot: {\n\t\t\t\tbackground: theme.palette.white,\n\t\t\t\theight: 36,\n\t\t\t\tborderBottom: `1px solid ${theme.palette.neutralTertiaryAlt}`,\n\t\t\t},\n\t\t}),\n\t\t[theme],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport type { ArqueroDetailsListProps } from '@datashaper/react'\nimport type ColumnTable from 'arquero/dist/types/table/column-table.js'\n\nexport const RawTableDefaultFeatures = {\n\tstatsColumnHeaders: false,\n}\n\nexport interface RawTableProps extends ArqueroDetailsListProps {\n\ttable: ColumnTable\n\terror?: string\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport type { Theme } from '@fluentui/react'\nimport styled from 'styled-components'\n\nconst MODAL_WIDTH = 800\nconst MODAL_HEIGHT = 600\nconst HEADER_HEIGHT = 42\nconst FOOTER_HEIGHT = 52\nconst PADDING = 12\nconst CONTENT_HEIGHT = MODAL_HEIGHT - HEADER_HEIGHT - FOOTER_HEIGHT - 12\nconst SIDEBAR_WIDTH = 240\nconst TABLE_HEIGHT = 280\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 5px 10px;\n\tbackground-color: ${({ theme }: { theme: Theme }) =>\n\t\ttheme.palette.neutralLighter};\n`\n\nexport const HeaderTitle = styled.span`\n\tdisplay: flex;\n\tfont-weight: bold;\n\tflex-direction: column;\n\tjustify-content: center;\n\tcolor: ${({ theme }: { theme: Theme }) => theme.palette.neutralSecondary};\n`\n\nexport const ModalBody = styled.div`\n\tdisplay: flex;\n\theight: ${CONTENT_HEIGHT}\n\twidth: ${MODAL_WIDTH}px;\n\tgap: ${PADDING * 2}px;\n\tpadding: ${PADDING}px;\n`\n\nexport const Sidebar = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 20px;\n\twidth: ${SIDEBAR_WIDTH}px;\n\tmax-width: ${SIDEBAR_WIDTH}px;\n\tmin-width: ${SIDEBAR_WIDTH}px;\n\theight: ${CONTENT_HEIGHT}px;\n\tmax-height: ${CONTENT_HEIGHT}px;\n\toverflow-y: auto;\n`\n\nexport const MainContent = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: ${MODAL_WIDTH - SIDEBAR_WIDTH - PADDING * 4}px;\n`\n\nexport const PreviewContent = styled.div`\n\theight: ${TABLE_HEIGHT}px;\n\tborder: 1px solid\n\t\t${({ theme }: { theme: Theme }) => theme.palette.neutralLighter};\n`\n\nexport const Footer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tgap: ${PADDING * 2}px;\n\tpadding: 0 ${PADDING}px ${PADDING}px 0;\n`\n\nexport const textFieldStyles = {\n\tfield: {\n\t\theight: TABLE_HEIGHT / 2,\n\t\tmaxHeight: TABLE_HEIGHT / 2,\n\t},\n}\n\nexport const modalStyles = {\n\tmain: { width: MODAL_WIDTH, maxHeight: MODAL_HEIGHT, height: MODAL_HEIGHT },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { IconButton } from '@fluentui/react'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\theight: 100%;\n\twidth: auto;\n`\n\nexport const MenuContainer = styled.div`\n\twidth: 100%;\n`\nexport const ExpandButton = styled(IconButton)`\n\twidth: inherit;\n`\n\nexport const icons = {\n\ttable: { iconName: 'Table' },\n\tsave: { iconName: 'Save' },\n\texpand: { iconName: 'DoubleChevronRight12' },\n\tcollapse: { iconName: 'DoubleChevronLeft12' },\n\tproject: { iconName: 'ZipFolder' },\n\topenFile: { iconName: 'FabricOpenFolderHorizontal' },\n\tnewFile: { iconName: 'NewFolder' },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ICommandBarStyles } from '@fluentui/react'\nimport { CommandBar, CommandBarButton, useTheme } from '@fluentui/react'\nimport { useMemo } from 'react'\nimport styled from 'styled-components'\n\nexport const Commands = styled(CommandBar)`\n\t.ms-CommandBar {\n\t\tpadding-left: unset;\n\t}\n`\n\nexport const CollapsedCommands = styled.div`\n\tbackground: ${({ theme }) => theme.palette.neutralLighter};\n`\n\nexport const CollapsedButton = styled(CommandBarButton)`\n\twidth: inherit;\n`\n\nexport const collapsedButtonStyles = {\n\troot: {\n\t\tbackground: 'transparent',\n\t\tminWidth: 'unset',\n\t},\n\tmenuIcon: { display: 'none' },\n\tflexContainer: {\n\t\t// standard fluent button height\n\t\theight: 32,\n\t},\n}\n\nexport const icons = {\n\tnewFile: { iconName: 'NewFolder' },\n\topenFile: { iconName: 'FabricOpenFolderHorizontal' },\n\tsave: { iconName: 'Save' },\n\ttable: { iconName: 'Table' },\n\tgrid: { iconName: 'GridViewSmall' },\n\tfile: { iconName: 'Page' },\n\tproject: { iconName: 'ZipFolder' },\n\topenExpandedView: { iconName: 'DoubleChevronRight12' },\n\tcloseExpandedView: { iconName: 'DoubleChevronLeft12' },\n}\n\nexport function useCommandbarStyles(): ICommandBarStyles {\n\tconst theme = useTheme()\n\treturn useMemo(\n\t\t() => ({\n\t\t\troot: {\n\t\t\t\tbackground: theme.palette.neutralLighter,\n\t\t\t},\n\t\t}),\n\t\t[theme],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { Label } from '@fluentui/react'\n\nexport const Flex = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`\nexport const FieldName = styled(Label)`\n\tmargin: auto;\n`\n\nexport const DataDisplay = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 8px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { IColumn } from '@fluentui/react'\nimport { Checkbox } from '@fluentui/react'\nimport {\n\ttype FormEvent,\n\tmemo,\n\tuseCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react'\n\nimport { StatsColumnType } from '../../ArqueroDetailsList/ArqueroDetailsList.types.js'\nimport { HistogramColumnHeader } from '../../ArqueroDetailsList/renderers/HistogramColumnHeader.js'\nimport { StatsColumnHeader } from '../../ArqueroDetailsList/renderers/StatsColumnHeader.js'\nimport { DataDisplay, FieldName, Flex } from './CodebookStatsField.styles.js'\nimport type { CodebookStatsFieldProps } from './CodebookStatsField.types.js'\n\nconst DEFAULT_STATS = [\n\tStatsColumnType.Count,\n\tStatsColumnType.Min,\n\tStatsColumnType.Max,\n\tStatsColumnType.Example,\n]\n\nexport const CodebookStatsField: React.FC<CodebookStatsFieldProps> = memo(\n\tfunction CodebookStatsField(props) {\n\t\tconst {\n\t\t\tfield,\n\t\t\tmetadata,\n\t\t\tonChangeField,\n\t\t\tstyles,\n\t\t\tcheckbox,\n\t\t\thistogramColumn,\n\t\t} = props\n\t\tconst [column, setColumn] = useState(histogramColumn)\n\t\tconst wrapperRef = useRef<HTMLDivElement | null>(null)\n\n\t\tuseEffect(() => {\n\t\t\tif (!histogramColumn) {\n\t\t\t\tsetColumn({\n\t\t\t\t\tcurrentWidth:\n\t\t\t\t\t\t(wrapperRef?.current?.clientWidth || 0) -\n\t\t\t\t\t\t(Number(styles?.root?.padding || 0) * 2 ?? 0),\n\t\t\t\t} as IColumn)\n\t\t\t}\n\t\t}, [wrapperRef, histogramColumn, styles])\n\n\t\tconst onChangeValue = useCallback(\n\t\t\t(\n\t\t\t\t_?: FormEvent<HTMLElement | HTMLInputElement> | undefined,\n\t\t\t\tchecked?: boolean | undefined,\n\t\t\t) => {\n\t\t\t\tonChangeField?.({ ...field, exclude: !checked })\n\t\t\t\tcheckbox?.onChange?.(_, checked)\n\t\t\t},\n\t\t\t[onChangeField, checkbox, field],\n\t\t)\n\n\t\tconst meta = metadata?.columns?.[field.name]\n\t\treturn (\n\t\t\t<div ref={wrapperRef} style={styles?.root}>\n\t\t\t\t<Flex>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tstyles={styles?.checkbox}\n\t\t\t\t\t\tchecked={!field.exclude}\n\t\t\t\t\t\t{...checkbox}\n\t\t\t\t\t\tonChange={onChangeValue}\n\t\t\t\t\t/>\n\t\t\t\t\t<FieldName disabled={field.exclude}>{field.name}</FieldName>\n\t\t\t\t</Flex>\n\t\t\t\t<DataDisplay>\n\t\t\t\t\t<StatsColumnHeader\n\t\t\t\t\t\tstats={DEFAULT_STATS}\n\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\tmetadata={meta}\n\t\t\t\t\t\tdisabled={field.exclude}\n\t\t\t\t\t/>\n\t\t\t\t\t<HistogramColumnHeader\n\t\t\t\t\t\tcolumn={column}\n\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\tmetadata={meta}\n\t\t\t\t\t\tdisabled={field.exclude}\n\t\t\t\t\t/>\n\t\t\t\t</DataDisplay>\n\t\t\t</div>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { FontIcon, Label, mergeStyles } from '@fluentui/react'\n\nexport const iconClass = mergeStyles({\n\tfontSize: 20,\n\theight: 20,\n\twidth: 20,\n})\n\nexport const Container = styled.div`\n\tdisplay: inline;\n`\n\nexport const CalendarContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`\n\nexport const CalendarButton = styled(FontIcon)`\n\tdisplay: inline;\n\tfloat: left;\n\tmargin-left: 8px;\n\tmargin-right: 4px;\n`\n\nexport const CalendarLabel = styled(Label)`\n\tdisplay: inline;\n\tfloat: left;\n\tmargin-left: 8px;\n\tmargin-right: 3px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tCalendar,\n\tCallout,\n\tdefaultCalendarStrings,\n\tDirectionalHint,\n\tFocusTrapZone,\n\tuseTheme,\n} from '@fluentui/react'\nimport { useBoolean } from '@fluentui/react-hooks'\nimport { memo, useCallback, useMemo, useRef, useState } from 'react'\n\nimport type { CalendarPickerProps } from '../CalendarPicker/index.js'\nimport {\n\tCalendarButton,\n\tCalendarContainer,\n\tCalendarLabel,\n\tContainer,\n\ticonClass,\n} from './CalendarPicker.styles.js'\n\nexport const CalendarPicker: React.FC<CalendarPickerProps> = memo(\n\tfunction CalendarPicker({ onSelectDate, value, disabled, cleanLabel }) {\n\t\tconst [selectedDate, setSelectedDate] = useState<Date>(value ?? new Date())\n\t\tconst [\n\t\t\tshowCalendar,\n\t\t\t{ toggle: toggleShowCalendar, setFalse: hideCalendar },\n\t\t] = useBoolean(false)\n\t\tconst buttonContainerRef = useRef<HTMLDivElement>(null)\n\n\t\tconst onSelectDateChange = useCallback(\n\t\t\t(date: Date): void => {\n\t\t\t\tsetSelectedDate(date)\n\t\t\t\thideCalendar()\n\t\t\t},\n\t\t\t[hideCalendar],\n\t\t)\n\n\t\tconst theme = useTheme()\n\t\tconst iconColors = useMemo(\n\t\t\t() => ({\n\t\t\t\tdisabled: theme.palette.neutralTertiary,\n\t\t\t\tenabled: theme.palette.neutralPrimary,\n\t\t\t}),\n\t\t\t[theme],\n\t\t)\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<CalendarContainer ref={buttonContainerRef}>\n\t\t\t\t\t<CalendarButton\n\t\t\t\t\t\taria-label=\"Compass\"\n\t\t\t\t\t\ticonName=\"Calendar\"\n\t\t\t\t\t\tclassName={iconClass}\n\t\t\t\t\t\tonClick={!disabled ? toggleShowCalendar : undefined}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t? { cursor: 'default', color: iconColors.disabled }\n\t\t\t\t\t\t\t\t: { cursor: 'pointer', color: iconColors.enabled }\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t{selectedDate != null && !cleanLabel ? (\n\t\t\t\t\t\t<CalendarLabel>\n\t\t\t\t\t\t\t{!cleanLabel ? selectedDate?.toLocaleDateString() : ''}\n\t\t\t\t\t\t</CalendarLabel>\n\t\t\t\t\t) : null}\n\t\t\t\t</CalendarContainer>\n\t\t\t\t{showCalendar && (\n\t\t\t\t\t<Callout\n\t\t\t\t\t\tisBeakVisible={false}\n\t\t\t\t\t\tgapSpace={0}\n\t\t\t\t\t\tdoNotLayer={false}\n\t\t\t\t\t\ttarget={buttonContainerRef}\n\t\t\t\t\t\tdirectionalHint={DirectionalHint.bottomLeftEdge}\n\t\t\t\t\t\tonDismiss={hideCalendar}\n\t\t\t\t\t\tsetInitialFocus\n\t\t\t\t\t>\n\t\t\t\t\t\t<FocusTrapZone isClickableOutsideFocusTrap>\n\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\tonDismiss={hideCalendar}\n\t\t\t\t\t\t\t\tshowMonthPickerAsOverlay\n\t\t\t\t\t\t\t\thighlightSelectedMonth\n\t\t\t\t\t\t\t\tshowGoToToday={false}\n\t\t\t\t\t\t\t\tonSelectDate={(date: Date) => {\n\t\t\t\t\t\t\t\t\tonSelectDate(date)\n\t\t\t\t\t\t\t\t\tonSelectDateChange(date)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\t\t// Calendar uses English strings by default. For localized apps, you must override this prop.\n\t\t\t\t\t\t\t\tstrings={defaultCalendarStrings}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FocusTrapZone>\n\t\t\t\t\t</Callout>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nexport { dropdownStyles, narrowDropdownStyles } from '../../styles.js'\n\nexport const LeftAlignedRow = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\talign-items: flex-end;\n`\n\n/**\n * For explanatory text below an input,\n */\nexport const InputExplainer = styled.div`\n\tfont-size: 0.85em;\n\tcolor: ${({ theme }) => theme.palette.neutralSecondary};\n`\n\nexport const checkboxStyles = {\n\troot: {\n\t\twidth: 220,\n\t\tpaddingTop: '10px',\n\t},\n}\n\n/**\n * For very narrow side-by-sides with a delete button for example\n */\nexport const narrowerDropdownStyles = {\n\troot: {\n\t\twidth: 99,\n\t},\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { Label, TextField } from '@fluentui/react'\n\nimport { narrowDropdownStyles } from '../styles.js'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport const leftStyles = {\n\troot: {\n\t\t...narrowDropdownStyles.root,\n\t\tmarginRight: 12,\n\t},\n}\n\nexport const TextValue = styled(TextField)`\n\tdisplay: inline;\n`\n\nexport const OrLabel = styled(Label)`\n\tdisplay: inline;\n\tpadding-left: 10px;\n\tpadding-right: 10px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { DataType } from '@datashaper/schema'\nimport { coerce } from '@datashaper/tables'\nimport type { IDropdownOption } from '@fluentui/react'\nimport { Dropdown, mergeStyleSets, SpinButton } from '@fluentui/react'\nimport { memo, useCallback } from 'react'\n\nimport { CalendarPicker } from '../../../controls/index.js'\nimport { narrowerDropdownStyles } from '../styles.js'\nimport { Container, TextValue } from './DataTypeField.styles.js'\nimport type { DataTypeFieldProps } from './DataTypeField.types.js'\n\nexport const DataTypeField: React.FC<DataTypeFieldProps> = memo(\n\tfunction DataTypeField({\n\t\tdataType,\n\t\tkeyValue,\n\t\tvalue,\n\t\tplaceholder,\n\t\tonKeyChange,\n\t\tonValueChange,\n\t\tisKey,\n\t\tdropdownStyles,\n\t\tdisabled,\n\t}) {\n\t\tconst booleanOptions: IDropdownOption[] = [\n\t\t\t{ key: 'true', text: 'true' },\n\t\t\t{ key: 'false', text: 'false' },\n\t\t]\n\n\t\tconst styles = mergeStyleSets(narrowerDropdownStyles, dropdownStyles)\n\t\tconst onSelectDate = useCallback(\n\t\t\t(date: Date): void => {\n\t\t\t\tconst val = coerce(date, dataType)\n\t\t\t\tisKey\n\t\t\t\t\t? onKeyChange(\n\t\t\t\t\t\t\tnew Date(value).toISOString(),\n\t\t\t\t\t\t\tnew Date(val).toISOString(),\n\t\t\t\t\t  )\n\t\t\t\t\t: onValueChange(\n\t\t\t\t\t\t\tnew Date(keyValue).toISOString(),\n\t\t\t\t\t\t\tnew Date(val).toISOString(),\n\t\t\t\t\t  )\n\t\t\t},\n\t\t\t[onKeyChange, onValueChange, dataType, isKey, value, keyValue],\n\t\t)\n\n\t\tconst onChangeTextFieldValue = useCallback(\n\t\t\t(\n\t\t\t\t_event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t\t\t\tnewValue?: string,\n\t\t\t) => {\n\t\t\t\tconst val = coerce(newValue, dataType)\n\t\t\t\tisKey\n\t\t\t\t\t? onKeyChange(value.toString(), val.toString())\n\t\t\t\t\t: onValueChange(keyValue, val)\n\t\t\t},\n\t\t\t[onKeyChange, onValueChange, dataType, isKey, value, keyValue],\n\t\t)\n\n\t\tconst spinButtonOnChange = useCallback(\n\t\t\t(_event: React.SyntheticEvent<HTMLElement>, newValue?: string) => {\n\t\t\t\tif (newValue != null) {\n\t\t\t\t\tconst val = coerce(newValue, dataType)\n\t\t\t\t\tisKey ? onKeyChange(value, val) : onValueChange(keyValue, val)\n\t\t\t\t}\n\t\t\t},\n\t\t\t[onKeyChange, onValueChange, dataType, isKey, value, keyValue],\n\t\t)\n\n\t\tconst dropDownOnChange = useCallback(\n\t\t\t(\n\t\t\t\t_e: React.FormEvent<HTMLDivElement>,\n\t\t\t\tnewValue?: IDropdownOption<any> | undefined,\n\t\t\t) => {\n\t\t\t\tif (newValue != null) {\n\t\t\t\t\tisKey\n\t\t\t\t\t\t? onKeyChange(value, newValue.key)\n\t\t\t\t\t\t: onValueChange(keyValue, newValue.key === 'true' ? true : false)\n\t\t\t\t}\n\t\t\t},\n\t\t\t[onKeyChange, onValueChange, isKey, value, keyValue],\n\t\t)\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{dataType === DataType.Date ? (\n\t\t\t\t\t<CalendarPicker\n\t\t\t\t\t\tonSelectDate={onSelectDate}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t{dataType === DataType.String ? (\n\t\t\t\t\t<TextValue\n\t\t\t\t\t\tonChange={onChangeTextFieldValue}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstyles={styles}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{dataType === DataType.Number ? (\n\t\t\t\t\t<SpinButton\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tstyles={styles}\n\t\t\t\t\t\tonChange={spinButtonOnChange}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\n\t\t\t\t{dataType === DataType.Boolean ? (\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tselectedKey={value.toString()}\n\t\t\t\t\t\toptions={booleanOptions}\n\t\t\t\t\t\tstyles={styles}\n\t\t\t\t\t\tonChange={dropDownOnChange}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</Container>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport { type Value, DataType } from '@datashaper/schema'\nimport { useCallback } from 'react'\n\nexport function useHandleKeyChange(\n\tmapList: Record<Value, Value>,\n\tonChange?: (mapping: Record<Value, Value>) => void,\n): (previousKey: Value, newKey: Value) => void {\n\treturn useCallback(\n\t\t(previousKey, newKey) => {\n\t\t\tconst mapping: Record<Value, Value> = {}\n\n\t\t\tfor (const key in mapList) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tkey === previousKey.toString()\n\t\t\t\t\t? (mapping[newKey] = mapList[key])\n\t\t\t\t\t: (mapping[key] = mapList[key]!)\n\t\t\t}\n\n\t\t\tonChange?.(mapping)\n\t\t},\n\t\t[mapList, onChange],\n\t)\n}\n\nexport function useHandleValueChange(\n\tmapList: Record<Value, Value>,\n\tdataType?: DataType,\n\tonChange?: (mapping: Record<Value, Value>) => void,\n): (key: Value, newValue: Value) => void {\n\treturn useCallback(\n\t\t(key, newValue) => {\n\t\t\tconst mapping: Record<Value, Value> = {}\n\n\t\t\tfor (const keyElement in mapList) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tkeyElement === key.toString()\n\t\t\t\t\t? (mapping[keyElement] =\n\t\t\t\t\t\t\tdataType === DataType.Date ? new Date(newValue) : newValue)\n\t\t\t\t\t: (mapping[keyElement] = mapList[keyElement]!)\n\t\t\t}\n\n\t\t\tonChange?.(mapping)\n\t\t},\n\t\t[onChange, dataType, mapList],\n\t)\n}\n\nexport function useHandleDelete(\n\tmapList: Record<Value, Value>,\n\tonChange?: (mapping: Record<Value, Value>) => void,\n): (key: Value) => void {\n\treturn useCallback(\n\t\t(key) => {\n\t\t\tconst mapping = { ...mapList }\n\t\t\tmapping[key] = undefined\n\t\t\tonChange?.(mapping)\n\t\t},\n\t\t[mapList, onChange],\n\t)\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _arrayWithHoles as arrayWithHoles, _defineProperty as defineProperty, _iterableToArrayLimit as iterableToArrayLimit, _nonIterableRest as nonIterableRest, _objectSpread2 as objectSpread2, _objectWithoutProperties as objectWithoutProperties, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _slicedToArray as slicedToArray, _unsupportedIterableToArray as unsupportedIterableToArray };\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from 'styled-components'\n\nexport const ViewOptionsContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: end;\n\tmin-height: 45px;\n\talign-items: center;\n\tpadding-right: 5px;\n\tbackground: ${({ theme }) => theme.palette.neutralLighter};\n\tborder-bottom: 1px solid ${({ theme }) => theme.palette.neutralTertiaryAlt};\n`\n\nexport const icons = {\n\trawFile: { iconName: 'CodeEdit' },\n\tinteractive: { iconName: 'PreviewLink' },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ITheme } from '@fluentui/react'\nimport styled from 'styled-components'\n\nexport const DetailsListContainer = styled.div`\n\toverflow: auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100%;\n\tborder-right: 1px solid\n\t\t${({ theme }: { theme: ITheme }) => theme.palette.neutralLighter};\n`\n\nexport const Container = styled.div<{ collapsed: boolean }>`\n\theight: 100%;\n\tdisplay: grid;\n\tgrid-template-columns: ${({ collapsed }) =>\n\t\tcollapsed ? '100% 0' : 'calc(100% - 280px) 280px '};\n`\n\nexport const ConfigContainer = styled.div`\n\tpadding: 10px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { ArqueroDetailsList, ArqueroTableHeader } from '@datashaper/react'\nimport { ToolPanel } from '@essex/components'\nimport { CommandBar } from '@fluentui/react'\nimport { memo } from 'react'\n\nimport { useDataTableSource } from '../../../hooks/index.js'\nimport { DataTableConfig } from '../../DataTableConfig/DataTableConfig.js'\nimport { useToolPanelExpandCollapse } from '../hooks.js'\nimport {\n\tuseTableHeaderColors,\n\tuseTableHeaderStyles,\n\tuseToolPanelStyles,\n} from '../styles.js'\nimport {\n\tConfigContainer,\n\tContainer,\n\tDetailsListContainer,\n} from './TableEditor.styles.js'\nimport type { TableEditorProps } from './TableEditor.types.js'\n\nexport const TableEditor: React.FC<TableEditorProps> = memo(\n\tfunction TableEditor({ resource }) {\n\t\tconst table = useDataTableSource(resource)\n\t\tconst tableHeaderColors = useTableHeaderColors()\n\t\tconst tableHeaderStyles = useTableHeaderStyles()\n\t\tconst toolPanelStyles = useToolPanelStyles()\n\t\tconst { collapsed, onToggleCollapsed, commandBar, iconProps } =\n\t\t\tuseToolPanelExpandCollapse('options-button', 'DataManagementSettings')\n\t\treturn table?.table == null ? null : (\n\t\t\t<Container collapsed={collapsed}>\n\t\t\t\t<DetailsListContainer>\n\t\t\t\t\t<ArqueroTableHeader\n\t\t\t\t\t\tbackground={tableHeaderColors.background}\n\t\t\t\t\t\tstyles={tableHeaderStyles}\n\t\t\t\t\t\tfarCommandBar={<CommandBar {...commandBar} />}\n\t\t\t\t\t\ttable={table.table}\n\t\t\t\t\t/>\n\t\t\t\t\t<ArqueroDetailsList\n\t\t\t\t\t\tcompact\n\t\t\t\t\t\tsortable\n\t\t\t\t\t\tshowColumnBorders\n\t\t\t\t\t\tisHeaderFixed\n\t\t\t\t\t\tfill\n\t\t\t\t\t\tmetadata={table.metadata}\n\t\t\t\t\t\ttable={table?.table}\n\t\t\t\t\t/>\n\t\t\t\t</DetailsListContainer>\n\t\t\t\t<ToolPanel\n\t\t\t\t\theaderText={'Parser options'}\n\t\t\t\t\tonDismiss={onToggleCollapsed}\n\t\t\t\t\theaderIconProps={iconProps}\n\t\t\t\t\tstyles={toolPanelStyles}\n\t\t\t\t>\n\t\t\t\t\t<ConfigContainer>\n\t\t\t\t\t\t<DataTableConfig resource={resource} />\n\t\t\t\t\t</ConfigContainer>\n\t\t\t\t</ToolPanel>\n\t\t\t</Container>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\nexport const dropdownStyles = {\n\troot: {\n\t\twidth: 220,\n\t},\n}\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 8px;\n`\n\nexport const InputsBlock = styled.div``\n\nexport const Row = styled.div``\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { Label, TextField, Toggle } from '@fluentui/react'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport const TextValue = styled(TextField)`\n\tdisplay: inline;\n\twidth: 135px;\n`\n\nexport const OrLabel = styled(Label)`\n\tdisplay: inline;\n\tfont-style: italic;\n\tpadding-left: 10px;\n\tpadding-right: 10px;\n\tborder-left: 1px solid ${({ theme }) => theme.palette.neutralTertiaryAlt};\n`\n\nexport const FilterContainer = styled.div`\n\tmargin-top: 8px;\n\tmargin-left: 16px;\n`\n\nexport const BooleanToggle = styled(Toggle)`\n\tmargin-top: 5px;\n`\n\nexport const InputLabel = styled.div`\n\twidth: 68px;\n`\n\nexport const Input = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tBooleanComparisonOperator,\n\tDataType,\n\tDateComparisonOperator,\n\tFilterCompareType,\n\tNumericComparisonOperator,\n\tStringComparisonOperator,\n} from '@datashaper/schema'\nimport { EnumDropdown } from '@essex/components'\nimport type { IComboBoxOption, IDropdownOption } from '@fluentui/react'\nimport { IconButton, SpinButton } from '@fluentui/react'\nimport { memo, useCallback, useMemo, useState } from 'react'\n\nimport {\n\tuseColumnNames,\n\tuseSimpleDropdownOptions,\n} from '../../../../hooks/index.js'\nimport {\n\tCalendarPicker,\n\tColumnCriteriaComboBox,\n} from '../../../controls/index.js'\nimport { dropdownStyles, narrowDropdownStyles } from '../../../styles.js'\nimport { InputExplainer, LeftAlignedRow } from '../styles.js'\nimport { useColumnTyping, useIsEmpty } from './FilterFunction.hooks.js'\nimport {\n\tBooleanToggle,\n\tContainer,\n\tFilterContainer,\n\tInput,\n\tInputLabel,\n\tOrLabel,\n\tTextValue,\n} from './FilterFunction.styles.js'\nimport type { FilterFunctionProps } from './FilterFunction.types.js'\n\n/**\n * Just the comparison logic/ops for a filter.\n * Input table and source column is expected to be edited elsewhere and configured as the step input.\n * This is split out from FilterInputs to allow just the comparison logic to be reused elsewhere.\n */\nexport const FilterFunction: React.FC<FilterFunctionProps> = memo(\n\tfunction FilterFunction({ table, column, criterion, onChange }) {\n\t\tconst handleOpChange = useCallback(\n\t\t\t(_e: React.FormEvent<HTMLDivElement>, opt?: IDropdownOption) => {\n\t\t\t\tonChange?.({\n\t\t\t\t\t...criterion,\n\t\t\t\t\toperator: opt?.key as\n\t\t\t\t\t\t| StringComparisonOperator\n\t\t\t\t\t\t| NumericComparisonOperator\n\t\t\t\t\t\t| BooleanComparisonOperator\n\t\t\t\t\t\t| DateComparisonOperator,\n\t\t\t\t})\n\t\t\t},\n\t\t\t[criterion, onChange],\n\t\t)\n\n\t\tconst onSelectDate = useCallback(\n\t\t\t(date: Date): void => {\n\t\t\t\tconst update = {\n\t\t\t\t\t...criterion,\n\t\t\t\t\ttype: FilterCompareType.Value,\n\t\t\t\t\tvalue: date,\n\t\t\t\t}\n\t\t\t\tonChange?.(update)\n\t\t\t\tsetCleanLabel(false)\n\t\t\t},\n\t\t\t[criterion, onChange],\n\t\t)\n\n\t\tconst handleDateComboBoxChange = useCallback(\n\t\t\t(\n\t\t\t\t_e: any,\n\t\t\t\toption: IComboBoxOption | undefined,\n\t\t\t\t_index: number | undefined,\n\t\t\t\tvalue: string | undefined,\n\t\t\t) => {\n\t\t\t\tconst update = {\n\t\t\t\t\t...criterion,\n\t\t\t\t\ttype: FilterCompareType.Column,\n\t\t\t\t\tvalue: option ? option.key : value,\n\t\t\t\t}\n\t\t\t\tonChange?.(update)\n\n\t\t\t\tsetCleanLabel(true)\n\t\t\t},\n\t\t\t[criterion, onChange],\n\t\t)\n\n\t\tconst handleComboBoxChange = useCallback(\n\t\t\t(\n\t\t\t\t_e: any,\n\t\t\t\toption: IComboBoxOption | undefined,\n\t\t\t\t_index: number | undefined,\n\t\t\t\tvalue: string | undefined,\n\t\t\t) => {\n\t\t\t\tconst update = {\n\t\t\t\t\t...criterion,\n\t\t\t\t\ttype: FilterCompareType.Column,\n\t\t\t\t\tvalue: option ? option.key : value,\n\t\t\t\t}\n\t\t\t\tonChange?.(update)\n\t\t\t},\n\t\t\t[criterion, onChange],\n\t\t)\n\n\t\tconst onChangeTextFieldValue = useCallback(\n\t\t\t(\n\t\t\t\t_event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t\t\t\tnewValue?: string,\n\t\t\t) => {\n\t\t\t\tconst update = {\n\t\t\t\t\t...criterion,\n\t\t\t\t\ttype: FilterCompareType.Value,\n\t\t\t\t\tvalue: newValue,\n\t\t\t\t}\n\t\t\t\tonChange?.(update)\n\t\t\t},\n\t\t\t[criterion, onChange],\n\t\t)\n\n\t\tconst spinButtonOnChange = useCallback(\n\t\t\t(_event: React.SyntheticEvent<HTMLElement>, newValue?: string) => {\n\t\t\t\tif (newValue != null) {\n\t\t\t\t\tconst update = {\n\t\t\t\t\t\t...criterion,\n\t\t\t\t\t\ttype: FilterCompareType.Value,\n\t\t\t\t\t\tvalue: newValue,\n\t\t\t\t\t}\n\t\t\t\t\tonChange?.(update)\n\t\t\t\t}\n\t\t\t},\n\t\t\t[criterion, onChange],\n\t\t)\n\n\t\tconst onToggleChange = (\n\t\t\t_ev: React.MouseEvent<HTMLElement>,\n\t\t\tchecked?: boolean,\n\t\t) => {\n\t\t\tconst update = {\n\t\t\t\t...criterion,\n\t\t\t\ttype: FilterCompareType.Value,\n\t\t\t\tvalue: checked,\n\t\t\t}\n\t\t\tonChange?.(update)\n\t\t}\n\n\t\tconst { type, columnFilter } = useColumnTyping(table, column)\n\t\tconst [cleanLabel, setCleanLabel] = useState<boolean>(false)\n\n\t\tconst operatorDropdown = useMemo(() => {\n\t\t\tconst shared = {\n\t\t\t\tlabel: '',\n\t\t\t\tplaceholder: 'Choose',\n\t\t\t\tselectedKey: criterion.operator,\n\t\t\t\tonChange: handleOpChange,\n\t\t\t\tstyles: dropdownStyles,\n\t\t\t}\n\t\t\tif (column) {\n\t\t\t\tif (type === DataType.String) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<EnumDropdown enumeration={StringComparisonOperator} {...shared} />\n\t\t\t\t\t)\n\t\t\t\t} else if (type === DataType.Boolean) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<EnumDropdown enumeration={BooleanComparisonOperator} {...shared} />\n\t\t\t\t\t)\n\t\t\t\t} else if (type === DataType.Date) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<EnumDropdown enumeration={DateComparisonOperator} {...shared} />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// map to nicer \"math like\" terse labels for numeric operations\n\t\t\t// (the default will use the friendly enum keys)\n\t\t\tconst labels = {\n\t\t\t\t'=': '=',\n\t\t\t\t'!=': '!=',\n\t\t\t\t'<': '<',\n\t\t\t\t'<=': '<=',\n\t\t\t\t'>': '>',\n\t\t\t\t'>=': '>=',\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<EnumDropdown\n\t\t\t\t\tenumeration={NumericComparisonOperator}\n\t\t\t\t\t{...shared}\n\t\t\t\t\tlabels={labels}\n\t\t\t\t/>\n\t\t\t)\n\t\t}, [type, column, criterion, handleOpChange])\n\n\t\tconst isEmpty = useIsEmpty(criterion)\n\t\tconst handleDeleteClick = useCallback(() => onChange?.(), [onChange])\n\t\tconst columns = useColumnNames(table, columnFilter)\n\t\tconst columnOptions = useSimpleDropdownOptions(columns)\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<LeftAlignedRow>\n\t\t\t\t\t{operatorDropdown}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ttitle={'Remove this criterion'}\n\t\t\t\t\t\ticonProps={deleteIconProps}\n\t\t\t\t\t\tonClick={handleDeleteClick}\n\t\t\t\t\t/>\n\t\t\t\t</LeftAlignedRow>\n\n\t\t\t\t<FilterContainer>\n\t\t\t\t\t<Input>\n\t\t\t\t\t\t<InputLabel>value</InputLabel>\n\t\t\t\t\t\t{type === DataType.Date ? (\n\t\t\t\t\t\t\t<CalendarPicker\n\t\t\t\t\t\t\t\tonSelectDate={onSelectDate}\n\t\t\t\t\t\t\t\tdisabled={isEmpty}\n\t\t\t\t\t\t\t\tcleanLabel={cleanLabel}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{type === DataType.String ? (\n\t\t\t\t\t\t\t<TextValue\n\t\t\t\t\t\t\t\tvalue={criterion.value}\n\t\t\t\t\t\t\t\tonChange={onChangeTextFieldValue}\n\t\t\t\t\t\t\t\tdisabled={isEmpty}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{type === DataType.Number ? (\n\t\t\t\t\t\t\t<SpinButton\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\tvalue={criterion.value}\n\t\t\t\t\t\t\t\tstyles={narrowDropdownStyles}\n\t\t\t\t\t\t\t\tdisabled={isEmpty}\n\t\t\t\t\t\t\t\tonChange={spinButtonOnChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{type === DataType.Boolean ? (\n\t\t\t\t\t\t\t<BooleanToggle\n\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\tonText=\"True\"\n\t\t\t\t\t\t\t\toffText=\"False\"\n\t\t\t\t\t\t\t\tonChange={onToggleChange}\n\t\t\t\t\t\t\t\tdisabled={isEmpty}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Input>\n\t\t\t\t\t<OrLabel>or</OrLabel>\n\t\t\t\t\t<Input>\n\t\t\t\t\t\t<InputLabel>column</InputLabel>\n\t\t\t\t\t\t{type === DataType.Date ? (\n\t\t\t\t\t\t\t<ColumnCriteriaComboBox\n\t\t\t\t\t\t\t\toptions={columnOptions}\n\t\t\t\t\t\t\t\tonChange={handleDateComboBoxChange}\n\t\t\t\t\t\t\t\tdisabled={isEmpty}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ColumnCriteriaComboBox\n\t\t\t\t\t\t\t\toptions={columnOptions}\n\t\t\t\t\t\t\t\tonChange={handleComboBoxChange}\n\t\t\t\t\t\t\t\tdisabled={isEmpty}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Input>\n\t\t\t\t</FilterContainer>\n\n\t\t\t\t{type === DataType.String ? (\n\t\t\t\t\t<InputExplainer>\n\t\t\t\t\t\tString comparisons are not case-sensitive\n\t\t\t\t\t</InputExplainer>\n\t\t\t\t) : null}\n\t\t\t</Container>\n\t\t)\n\t},\n)\n\nconst deleteIconProps = { iconName: 'Delete' }\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n`\n\nexport const Criteria = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 20px;\n`\nexport const Vertical = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 8px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { Criterion, FilterArgs } from '@datashaper/schema'\nimport { BooleanOperator } from '@datashaper/schema'\nimport { EnumDropdown } from '@essex/components'\nimport { ActionButton, Label } from '@fluentui/react'\nimport type ColumnTable from 'arquero/dist/types/table/column-table'\nimport { memo, useCallback } from 'react'\n\nimport { EMPTY_ARRAY } from '../../../../empty.js'\nimport {\n\tuseDropdownChangeHandler,\n\tuseStepInputTable,\n} from '../../../../hooks/index.js'\nimport { FilterFunction } from '../shared/index.js'\nimport { LeftAlignedRow } from '../styles.js'\nimport type { StepFormProps } from '../types.js'\nimport { Container, Criteria, Vertical } from './FilterForm.styles.js'\n\n/**\n * Provides inputs for a Filter step.\n */\nexport const FilterForm: React.FC<StepFormProps<FilterArgs>> = memo(\n\tfunction FilterForm({ step, workflow, input, table, onChange }) {\n\t\tconst dataTable = useStepInputTable(step, workflow, input, table)\n\t\tconst handleButtonClick = useCallback(() => {\n\t\t\tonChange?.({\n\t\t\t\t...step,\n\t\t\t\targs: {\n\t\t\t\t\t...step.args,\n\t\t\t\t\tcriteria: [...(step.args.criteria || EMPTY_ARRAY), {} as Criterion],\n\t\t\t\t},\n\t\t\t})\n\t\t}, [step, onChange])\n\n\t\tconst handleFilterChange = useCallback(\n\t\t\t(criterion: Criterion | undefined, index: number) => {\n\t\t\t\tconst criteria = [...step.args.criteria]\n\t\t\t\tif (criterion == null) {\n\t\t\t\t\tcriteria.splice(index, 1)\n\t\t\t\t} else {\n\t\t\t\t\tcriteria[index] = criterion\n\t\t\t\t}\n\t\t\t\tonChange?.({\n\t\t\t\t\t...step,\n\t\t\t\t\targs: {\n\t\t\t\t\t\t...step.args,\n\t\t\t\t\t\tcriteria,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t},\n\t\t\t[step, onChange],\n\t\t)\n\n\t\tconst handleLogicalChange = useDropdownChangeHandler(\n\t\t\tstep,\n\t\t\t(s, val) => (s.args.logical = val as BooleanOperator),\n\t\t\tonChange,\n\t\t)\n\t\tconst filters = useFilters(\n\t\t\tdataTable,\n\t\t\tstep.args.column,\n\t\t\tstep.args.criteria,\n\t\t\thandleFilterChange,\n\t\t)\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Label>Function</Label>\n\t\t\t\t<Criteria>{filters}</Criteria>\n\t\t\t\t<ActionButton\n\t\t\t\t\tonClick={handleButtonClick}\n\t\t\t\t\ticonProps={addIconProps}\n\t\t\t\t\tdisabled={!dataTable}\n\t\t\t\t>\n\t\t\t\t\tAdd criteria\n\t\t\t\t</ActionButton>\n\t\t\t\t{step.args.criteria.length > 1 ? (\n\t\t\t\t\t<LeftAlignedRow>\n\t\t\t\t\t\t<EnumDropdown\n\t\t\t\t\t\t\tlabel={'Logical combination'}\n\t\t\t\t\t\t\tplaceholder={'Choose boolean'}\n\t\t\t\t\t\t\tenumeration={BooleanOperator}\n\t\t\t\t\t\t\tlabels={{\n\t\t\t\t\t\t\t\tor: 'OR',\n\t\t\t\t\t\t\t\tand: 'AND',\n\t\t\t\t\t\t\t\tnor: 'NOR',\n\t\t\t\t\t\t\t\tnand: 'NAND',\n\t\t\t\t\t\t\t\txor: 'XOR',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tselectedKey={step.args.logical}\n\t\t\t\t\t\t\tonChange={handleLogicalChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</LeftAlignedRow>\n\t\t\t\t) : null}\n\t\t\t</Container>\n\t\t)\n\t},\n)\n\nfunction useFilters(\n\ttable: ColumnTable | undefined,\n\tcolumn: string,\n\tcriteria: Criterion[],\n\tonChange: any,\n) {\n\tif (!table) {\n\t\treturn null\n\t}\n\n\treturn criteria.map((criterion, index) => {\n\t\tconst handleChange = (f?: Criterion) => onChange(f, index)\n\t\treturn (\n\t\t\t<Vertical key={`filter-function-${index}`}>\n\t\t\t\t<FilterFunction\n\t\t\t\t\ttable={table}\n\t\t\t\t\tcolumn={column}\n\t\t\t\t\tcriterion={criterion}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</Vertical>\n\t\t)\n\t})\n}\n\nconst addIconProps = { iconName: 'Add' }\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\nexport const icons = {\n\tadd: { iconName: 'Add' },\n\tdelete: { iconName: 'Delete' },\n}\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport const Tables = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { Step, Workflow } from '@datashaper/workflow'\nimport { IconButton } from '@fluentui/react'\nimport { useMemo } from 'react'\n\nimport { useTableDropdownOptions } from '../../../../hooks/index.js'\nimport { TableDropdown } from '../../../controls/index.js'\nimport { LeftAlignedRow } from '../styles.js'\nimport { icons } from './SetOperationForm.styles.js'\n\nexport function useOthers(\n\tstep: Step,\n\tonChange?: (step: Step) => void,\n\tstore?: Workflow,\n): (JSX.Element | null)[] {\n\tconst tableOptions = useTableDropdownOptions(store)\n\treturn useMemo<(JSX.Element | null)[]>(() => {\n\t\treturn (step.input.others || EMPTY).map((input, index) => {\n\t\t\tconst other = input.node\n\n\t\t\t// on delete, remove the input\n\t\t\tconst handleDeleteClick = () => {\n\t\t\t\tonChange?.({\n\t\t\t\t\t...step,\n\t\t\t\t\tinput: {\n\t\t\t\t\t\t...step.input,\n\t\t\t\t\t\tothers: (step.input.others || EMPTY).filter((o) => o !== input),\n\t\t\t\t\t} as Step['input'],\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (!store) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<LeftAlignedRow key={`set-op-${other}-${index}`}>\n\t\t\t\t\t<TableDropdown\n\t\t\t\t\t\tlabel={''}\n\t\t\t\t\t\toptions={tableOptions}\n\t\t\t\t\t\tselectedKey={other}\n\t\t\t\t\t\tonChange={(_evt, option) => {\n\t\t\t\t\t\t\tconst update = { ...step }\n\t\t\t\t\t\t\tif (option) {\n\t\t\t\t\t\t\t\tinput.node = `${option.key}`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonChange?.(update)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ttitle={'Remove this table'}\n\t\t\t\t\t\ticonProps={icons.delete}\n\t\t\t\t\t\tonClick={handleDeleteClick}\n\t\t\t\t\t/>\n\t\t\t\t</LeftAlignedRow>\n\t\t\t)\n\t\t})\n\t}, [step, store, tableOptions, onChange])\n}\n\nconst EMPTY: any[] = []\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n`\n\nexport const icons = {\n\tdelete: { iconName: 'Delete' },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport const Sorts = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n`\n\nexport const icons = {\n\tadd: { iconName: 'Add' },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { RecodeArgs, Value } from '@datashaper/schema'\nimport { DataType } from '@datashaper/schema'\nimport styled from '@essex/styled-components'\nimport { ActionButton } from '@fluentui/react'\nimport { memo, useCallback } from 'react'\n\nimport { useMappingPairs } from '../../../../hooks/controls/useMappingPairs.js'\nimport {\n\tuseColumnType,\n\tuseHandleDelete,\n\tuseHandleKeyChange,\n\tuseHandleValueChange,\n\tuseStepInputTable,\n} from '../../../../hooks/index.js'\nimport type { StepFormProps } from '../types.js'\nimport {\n\tuseColumnValues,\n\tuseDisabled,\n\tuseHandleAddButtonClick,\n} from './RecodeForm.hooks.js'\n\n/**\n * Provides inputs for a RecodeStep.\n */\nexport const RecodeForm: React.FC<StepFormProps<RecodeArgs>> = memo(\n\tfunction RecodeForm({ step, workflow, input, table, onChange }) {\n\t\tconst dataTable = useStepInputTable(step, workflow, input, table)\n\t\tconst dataType = useColumnType(dataTable, step.args.column)\n\t\tconst initialValues = useColumnValues(step, dataTable)\n\t\tconst values =\n\t\t\tdataType === DataType.Date\n\t\t\t\t? initialValues.map((e) => e.toISOString())\n\t\t\t\t: initialValues\n\n\t\tconst onUpdateMapping = useCallback(\n\t\t\t(mapping: Record<Value, Value>) => {\n\t\t\t\tonChange?.({\n\t\t\t\t\t...step,\n\t\t\t\t\targs: {\n\t\t\t\t\t\t...step.args,\n\t\t\t\t\t\tmapping,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t},\n\t\t\t[onChange, step],\n\t\t)\n\n\t\tconst handleRecodeKeyChange = useHandleKeyChange(\n\t\t\tstep.args.mapping,\n\t\t\tonUpdateMapping,\n\t\t)\n\t\tconst handleRecodeValueChange = useHandleValueChange(\n\t\t\tstep.args.mapping,\n\t\t\tdataType,\n\t\t\tonUpdateMapping,\n\t\t)\n\t\tconst handleRecodeDelete = useHandleDelete(\n\t\t\tstep.args.mapping,\n\t\t\tonUpdateMapping,\n\t\t)\n\t\tconst handleButtonClick = useHandleAddButtonClick(step, values, onChange)\n\n\t\tconst columnPairs = useMappingPairs(\n\t\t\tstep.args.mapping,\n\t\t\tdataType,\n\t\t\thandleRecodeKeyChange,\n\t\t\thandleRecodeValueChange,\n\t\t\thandleRecodeDelete,\n\t\t)\n\n\t\tconst disabled = useDisabled(step, values)\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<ColumnPairs>{columnPairs}</ColumnPairs>\n\t\t\t\t<ActionButton\n\t\t\t\t\tonClick={handleButtonClick}\n\t\t\t\t\ticonProps={addIconProps}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t>\n\t\t\t\t\tAdd mapping\n\t\t\t\t</ActionButton>\n\t\t\t</Container>\n\t\t)\n\t},\n)\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\nconst ColumnPairs = styled.div`\n\tmargin-top: 8px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n`\n\nconst addIconProps = { iconName: 'Add' }\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { RenameArgs } from '@datashaper/schema'\nimport type { Step } from '@datashaper/workflow'\nimport styled from '@essex/styled-components'\nimport type { IDropdownOption } from '@fluentui/react'\nimport {\n\tActionButton,\n\tIcon,\n\tIconButton,\n\tLabel,\n\tTextField,\n} from '@fluentui/react'\nimport type ColumnTable from 'arquero/dist/types/table/column-table'\nimport { memo, useMemo } from 'react'\n\nimport { EMPTY_OBJECT } from '../../../../empty.js'\nimport {\n\tuseColumnNames,\n\tuseOnDeleteStepColumn,\n\tuseSimpleDropdownOptions,\n\tuseStepInputTable,\n} from '../../../../hooks/index.js'\nimport { TableColumnDropdown } from '../../../controls/index.js'\nimport { narrowerDropdownStyles } from '../styles.js'\nimport type { StepFormProps } from '../types.js'\nimport {\n\tuseDisabled,\n\tuseHandleAddButtonClick,\n\tuseHandleColumnChange,\n} from './RenameForm.hooks.js'\n\n/**\n * Provides inputs for a RenameStep.\n */\nexport const RenameForm: React.FC<StepFormProps<RenameArgs>> = memo(\n\tfunction RenameForm({ step, workflow, input, table, onChange }) {\n\t\tconst dataTable = useStepInputTable(step, workflow, input, table)\n\t\tconst handleColumnChange = useHandleColumnChange(step, onChange)\n\t\tconst handleColumnDelete = useOnDeleteStepColumn(step, onChange)\n\t\tconst handleButtonClick = useHandleAddButtonClick(step, dataTable, onChange)\n\t\tconst columnPairs = useColumnPairs(\n\t\t\tdataTable,\n\t\t\tstep,\n\t\t\thandleColumnChange,\n\t\t\thandleColumnDelete,\n\t\t)\n\t\tconst disabled = useDisabled(step, dataTable)\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Label required>Column renames</Label>\n\t\t\t\t<ColumnPairs>{columnPairs}</ColumnPairs>\n\t\t\t\t<ActionButton\n\t\t\t\t\tonClick={handleButtonClick}\n\t\t\t\t\ticonProps={addIconProps}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t>\n\t\t\t\t\tAdd rename\n\t\t\t\t</ActionButton>\n\t\t\t</Container>\n\t\t)\n\t},\n)\n\nfunction useColumnPairs(\n\ttable: ColumnTable | undefined,\n\tstep: Step<RenameArgs>,\n\tonChange: (previous: string, oldName: string, newName: string) => void,\n\tonDelete: (name: string) => void,\n) {\n\treturn useMemo(() => {\n\t\tconst { columns } = step.args\n\t\treturn Object.entries(columns || EMPTY_OBJECT).map((column, index) => {\n\t\t\tconst [oldname] = column\n\t\t\treturn (\n\t\t\t\t<ColumnPair\n\t\t\t\t\tkey={`column-rename-${oldname}-${index}`}\n\t\t\t\t\ttable={table}\n\t\t\t\t\tcolumn={column}\n\t\t\t\t\tstep={step}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonDelete={onDelete}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}, [table, step, onChange, onDelete])\n}\n\nconst ColumnPair: React.FC<{\n\ttable: ColumnTable | undefined\n\tcolumn: [string, string]\n\tstep: Step<RenameArgs>\n\tonChange: (previous: string, oldName: string, newName: string) => void\n\tonDelete: (name: string) => void\n}> = memo(function ColumnPair({ table, column, step, onChange, onDelete }) {\n\tconst [oldname, newname] = column\n\tconst columnFilter = (name: string) => {\n\t\tif (name === oldname) {\n\t\t\treturn true\n\t\t}\n\t\tif (step.args.columns?.[name]) {\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n\tconst handleColumnChange = (\n\t\t_e: React.FormEvent<HTMLDivElement>,\n\t\topt?: IDropdownOption<any> | undefined,\n\t) => onChange(oldname, (opt?.key as string) || oldname, newname)\n\tconst handleTextChange = (\n\t\t_e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t\tnewValue?: string,\n\t) => {\n\t\tonChange(oldname, oldname, newValue ?? '')\n\t}\n\tconst handleDeleteClick = () => onDelete(oldname)\n\tconst columns = useColumnNames(table, columnFilter)\n\tconst options = useSimpleDropdownOptions(columns)\n\n\treturn (\n\t\t<ColumnPairContainer>\n\t\t\t<TableColumnDropdown\n\t\t\t\toptions={options}\n\t\t\t\tlabel={undefined}\n\t\t\t\tselectedKey={oldname}\n\t\t\t\tonChange={handleColumnChange}\n\t\t\t\tstyles={narrowerDropdownStyles}\n\t\t\t/>\n\t\t\t<Icon\n\t\t\t\ticonName={'Forward'}\n\t\t\t\tstyles={{ root: { marginLeft: 4, marginRight: 4 } }}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tplaceholder={'New name'}\n\t\t\t\tvalue={newname}\n\t\t\t\tonChange={handleTextChange}\n\t\t\t\tstyles={narrowerDropdownStyles}\n\t\t\t/>\n\t\t\t<IconButton\n\t\t\t\ttitle={'Remove this rename'}\n\t\t\t\ticonProps={deleteIconProps}\n\t\t\t\tonClick={handleDeleteClick}\n\t\t\t/>\n\t\t</ColumnPairContainer>\n\t)\n})\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nconst ColumnPairs = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n`\n\nconst ColumnPairContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\n\nconst addIconProps = { iconName: 'Add' }\nconst deleteIconProps = { iconName: 'Delete' }\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { Label } from '@fluentui/react'\n\nexport const Container = styled.div`\n\tmargin-top: 8px;\n\tmargin-left: 16px;\n`\n\nexport const Input = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n`\n\nexport const InputLabel = styled.div`\n\twidth: 84px;\n`\n\nexport const OrLabel = styled(Label)`\n\tdisplay: inline;\n\tfont-style: italic;\n\tpadding-left: 10px;\n\tpadding-right: 10px;\n\tborder-left: 1px solid ${({ theme }) => theme.palette.neutralTertiaryAlt};\n`\n\nexport const spinStyles = {\n\troot: {\n\t\twidth: 120,\n\t},\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tInputColumnArgs,\n\tInputColumnListArgs,\n\tOutputColumnArgs,\n} from '@datashaper/schema'\nimport {\n\tisInputColumnListStep,\n\tisInputColumnStep,\n\tisOutputColumnStep,\n\tNodeInput,\n} from '@datashaper/workflow'\nimport { MultiDropdown } from '@essex/components'\nimport { TextField } from '@fluentui/react'\nimport { memo } from 'react'\n\nimport { useColumnNames } from '../../hooks/columns/useColumnNames.js'\nimport { useSimpleDropdownOptions } from '../../hooks/fluent/useSimpleDropdownOptions.js'\nimport { useWorkflowDataTable } from '../../hooks/index.js'\nimport { TableColumnDropdown } from '../controls/TableColumnDropdown/TableColumnDropdown.js'\nimport { dropdownStyles } from '../styles.js'\nimport {\n\tgetSimpleDropdownOptions,\n\tuseColumnFilter,\n\tuseDefaultOutputNameInitially,\n\tuseInputColumnChanged,\n\tuseInputColumnListAllChanged,\n\tuseInputColumnListChanged,\n\tuseOutputColumnChanged,\n\tuseStepArgsComponent,\n\tuseStepChangeHandler,\n} from './StepForm.hooks.js'\nimport { Container } from './StepForm.styles.js'\nimport type { StepFormProps } from './StepForm.types.js'\n\n/**\n * Let's us render the Steps in a loop while memoing all the functions\n */\nexport const StepForm: React.FC<StepFormProps> = memo(function StepForm({\n\tstep: s,\n\toutput,\n\tworkflow: g,\n\tmetadata,\n\tindex,\n\tonChange,\n\tonChangeOutput: changeOutput,\n\thideInputColumn,\n}) {\n\t/* Current Table Selection */\n\tconst tableId = s.input[NodeInput.Source]?.node\n\tconst table = useWorkflowDataTable(tableId, g)\n\n\t/* Column Options */\n\tconst columns = useColumnNames(table, useColumnFilter(s, table))\n\tconst columnOptions = useSimpleDropdownOptions(columns)\n\n\t/* The step args component */\n\tconst StepArgs = useStepArgsComponent(s)\n\n\t/* Change Events */\n\tconst change = useStepChangeHandler(index, onChange)\n\tconst onInputColumnChange = useInputColumnChanged(s, change, table)\n\tconst onInputColumnListChange = useInputColumnListChanged(s, change)\n\tconst onInputColumnListChangeAll = useInputColumnListAllChanged(s, change)\n\tconst onOutputColumnChange = useOutputColumnChanged(s, change)\n\n\t/* Side Effects */\n\tuseDefaultOutputNameInitially(s, output, changeOutput)\n\n\treturn StepArgs == null ? null : (\n\t\t<Container className=\"step-component\">\n\t\t\t{/* Input Column List */}\n\t\t\t{isInputColumnListStep(s) ? (\n\t\t\t\t<MultiDropdown\n\t\t\t\t\trequired={true}\n\t\t\t\t\tlabel={'Columns'}\n\t\t\t\t\tplaceholder={'Choose columns'}\n\t\t\t\t\tstyles={dropdownStyles}\n\t\t\t\t\tselectedKeys={(s.args as InputColumnListArgs).columns}\n\t\t\t\t\toptions={getSimpleDropdownOptions(columns)}\n\t\t\t\t\tonChange={onInputColumnListChange}\n\t\t\t\t\tonChangeAll={onInputColumnListChangeAll}\n\t\t\t\t/>\n\t\t\t) : null}\n\n\t\t\t{/* Input Column */}\n\t\t\t{!hideInputColumn && isInputColumnStep(s) ? (\n\t\t\t\t<TableColumnDropdown\n\t\t\t\t\trequired\n\t\t\t\t\toptions={columnOptions}\n\t\t\t\t\tlabel={`Column to ${s.verb}`}\n\t\t\t\t\tselectedKey={(s.args as InputColumnArgs).column}\n\t\t\t\t\tonChange={onInputColumnChange}\n\t\t\t\t/>\n\t\t\t) : null}\n\n\t\t\t<StepArgs\n\t\t\t\tstep={s}\n\t\t\t\tworkflow={g}\n\t\t\t\tmetadata={metadata}\n\t\t\t\toutput={output}\n\t\t\t\tonChangeOutput={changeOutput}\n\t\t\t\tonChange={change}\n\t\t\t/>\n\n\t\t\t{/* Output Column */}\n\t\t\t{isOutputColumnStep(s) ? (\n\t\t\t\t<TextField\n\t\t\t\t\trequired\n\t\t\t\t\tlabel={'New column name'}\n\t\t\t\t\tplaceholder={'Column name'}\n\t\t\t\t\tvalue={(s.args as OutputColumnArgs).to}\n\t\t\t\t\tstyles={dropdownStyles}\n\t\t\t\t\tonChange={onOutputColumnChange}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</Container>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from '@essex/styled-components'\nimport type {\n\tIModalStyleProps,\n\tIModalStyles,\n\tIStyleFunctionOrObject,\n} from '@fluentui/react'\nimport { useTheme } from '@fluentui/react'\nimport merge from 'lodash-es/merge.js'\nimport { useMemo } from 'react'\n\nexport const icons = {\n\tsave: { iconName: 'CheckMark' },\n\tdelete: { iconName: 'Delete' },\n}\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tflex-direction: column;\n\toverflow: auto;\n\tborder: none;\n\twidth: auto;\n\t// extra padding on left leaves room for \"overhanging\" delete buttons\n\t// while still allowing the primary content to remain centered\n\tpadding-left: 32px;\n`\n\nexport const Actions = styled.div`\n\tpadding-right: 32px;\n\tmargin-top: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tgap: 12px;\n\twidth: 100%;\n`\n\nexport function useModalStyles(\n\tstyles?: IStyleFunctionOrObject<IModalStyleProps, IModalStyles>,\n): IStyleFunctionOrObject<IModalStyleProps, IModalStyles> {\n\tconst theme = useTheme()\n\treturn useMemo(\n\t\t() =>\n\t\t\tmerge(\n\t\t\t\t{\n\t\t\t\t\troot: {\n\t\t\t\t\t\tborder: `1px solid ${theme.palette.neutralLighter}`,\n\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\tmaxHeight: 580,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tstyles,\n\t\t\t),\n\t\t[theme, styles],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { Step } from '@datashaper/workflow'\nimport { isEqual } from 'lodash-es'\nimport { memo, useMemo, useState } from 'react'\n\nimport { EMPTY_OBJECT } from '../../empty.js'\nimport { Action } from '../controls/index.js'\nimport { StepForm } from '../StepForm/StepForm.js'\nimport {\n\tuseHandleSaveClick,\n\tuseStepOutputHandling,\n} from './StepEditor.hooks.js'\nimport { Actions, Container, icons } from './StepEditor.styles.js'\nimport type { StepEditorProps } from './StepEditor.types.js'\n\nexport const StepEditor: React.FC<StepEditorProps> = memo(function StepEditor({\n\tworkflow,\n\tonSave: execSave,\n\tmetadata,\n\tindex,\n\tstep,\n\tstyle = EMPTY_OBJECT,\n\tonDelete,\n\thideInputColumn,\n}) {\n\tconst [internal, setInternal] = useState<Step | undefined>(step)\n\tconst { output, outputHasChanged, onOutputChanged } = useStepOutputHandling(\n\t\tworkflow,\n\t\tstep,\n\t)\n\tconst onSave = useHandleSaveClick(internal, execSave)\n\tconst noSave = useMemo<boolean>(\n\t\t() => isEqual(step, internal) && !outputHasChanged,\n\t\t[step, internal, outputHasChanged],\n\t)\n\n\treturn (\n\t\t<Container style={style}>\n\t\t\t{internal && (\n\t\t\t\t<>\n\t\t\t\t\t<StepForm\n\t\t\t\t\t\tstep={internal}\n\t\t\t\t\t\tworkflow={workflow}\n\t\t\t\t\t\tmetadata={metadata}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\toutput={output}\n\t\t\t\t\t\thideInputColumn={hideInputColumn}\n\t\t\t\t\t\tonChange={setInternal}\n\t\t\t\t\t\tonChangeOutput={onOutputChanged}\n\t\t\t\t\t/>\n\t\t\t\t\t<Actions>\n\t\t\t\t\t\t<Action onClick={onSave} disabled={noSave} iconProps={icons.save}>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</Action>\n\t\t\t\t\t\t<Action onClick={onDelete} iconProps={icons.delete}>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Action>\n\t\t\t\t\t</Actions>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Container>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { IconButton } from '@fluentui/react'\n\nexport const Container = styled.div`\n\tposition: relative;\n\n\th1 {\n\t\tmargin-top: 0;\n\t\ttext-transform: uppercase;\n\t\tcolor: ${({ theme }) => theme.palette.neutralTertiary};\n\t}\n\n\th2 {\n\t\tcolor: ${({ theme }) => theme.palette.neutralTertiary};\n\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 1rem;\n\n\t\t&.active + .details {\n\t\t\topacity: 1;\n\t\t\theight: auto;\n\t\t\ttransform: translateX(0);\n\t\t\toverflow-x: auto;\n\t\t}\n\t}\n\n\ttable {\n\t\tborder-collapse: collapse;\n\n\t\tth {\n\t\t\tfont-weight: bold;\n\t\t}\n\n\t\ttd,\n\t\tth {\n\t\t\tborder: 1px solid ${({ theme }) => theme.palette.neutralTertiaryAlt};\n\t\t\tpadding: 5px;\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\n\t.details {\n\t\topacity: 0;\n\t\theight: 0;\n\t\ttransition: transform 0.5s ease-in-out;\n\t\ttransform: translateX(100%);\n\t\toverflow-x: hidden;\n\t}\n`\n\nexport const Icon = styled(IconButton as any)`\n\tfont-size: 2.5rem;\n`\n\nexport const ButtonWrapper = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n`\n\nexport const icons = {\n\tback: { iconName: 'Back' },\n\thome: { iconName: 'Home' },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from '@essex/styled-components'\n\nconst MAX_HEIGHT = 700\n\nexport const Container = styled.div`\n\twidth: 400px;\n\tmax-height: ${MAX_HEIGHT - 20}px;\n\toverflow: hidden auto;\n\tpadding: 0 12px 12px 8px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { default as guidanceIndex } from '@datashaper/verb-guidance'\nimport { memo } from 'react'\n\nimport { Guidance } from '../Guidance/Guidance.js'\nimport { Container } from './GuidanceExpansion.styles.js'\nimport type { GuidanceExpansionProps } from './GuidanceExpansion.types.js'\n\nexport const GuidanceExpansion: React.FC<GuidanceExpansionProps> = memo(\n\tfunction GuidanceExpansion({ verb }) {\n\t\treturn verb ? (\n\t\t\t<Container>\n\t\t\t\t<Guidance name={verb} index={guidanceIndex} />\n\t\t\t</Container>\n\t\t) : null\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport styled from '@essex/styled-components'\nimport type { IIconProps } from '@fluentui/react'\nimport { useTheme } from '@fluentui/react'\nimport { useMemo } from 'react'\n\nconst MAX_HEIGHT = 700\n\nexport const ContainerBody = styled.div`\n\tpadding: 0;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tgap: 12px;\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbackground: ${({ theme }) => theme.palette.neutralLighter};\n`\n\nexport const Title = styled.h3`\n\tpadding-left: 12px;\n\tmargin: 8px 0 8px 0;\n`\n\nexport const HeaderButtons = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n`\n\nexport const StepComponentContainer = styled.div`\n\tmax-height: ${MAX_HEIGHT}px;\n\toverflow: hidden auto;\n\twidth: 284px;\n`\n\nexport const GuidanceContainer = styled.div`\n\twidth: 400px;\n\tmax-height: ${MAX_HEIGHT - 20}px;\n\toverflow: hidden auto;\n`\n\nexport function useIconProps(): Record<string, IIconProps> {\n\tconst theme = useTheme()\n\treturn useMemo(\n\t\t() => ({\n\t\t\tcancel: {\n\t\t\t\ticonName: 'Cancel',\n\t\t\t\tstyles: {\n\t\t\t\t\troot: {\n\t\t\t\t\t\tcolor: theme.palette.neutralPrimary,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\thelp: {\n\t\t\t\ticonName: 'Help',\n\t\t\t\tstyles: {\n\t\t\t\t\troot: {\n\t\t\t\t\t\tcolor: theme.palette.neutralPrimary,\n\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}),\n\t\t[theme],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Callout, DirectionalHint, IconButton } from '@fluentui/react'\nimport { useBoolean } from '@fluentui/react-hooks'\nimport { memo } from 'react'\n\nimport { StepEditor } from '../StepEditor/StepEditor.js'\nimport { useModalStyles } from '../StepEditor/StepEditor.styles.js'\nimport { GuidanceExpansion } from './GuidanceExpansion.js'\nimport { useTitle } from './StepEditorModal.hooks.js'\nimport {\n\tContainerBody,\n\tHeader,\n\tHeaderButtons,\n\tStepComponentContainer,\n\tTitle,\n\tuseIconProps,\n} from './StepEditorModal.styles.js'\nimport type { StepEditorModalProps } from './StepEditorModal.types.js'\n\nexport const StepEditorModal: React.FC<StepEditorModalProps> = memo(\n\tfunction StepEditorModal({\n\t\tonDismiss,\n\t\tworkflow,\n\t\tmetadata,\n\t\tonSave,\n\t\tindex,\n\t\tstep,\n\t\tstyles,\n\t\t...props\n\t}) {\n\t\tconst [showGuidance, { toggle: toggleGuidance }] = useBoolean(false)\n\t\tconst adaptedStyles = useModalStyles(styles)\n\t\tconst title = useTitle(step)\n\t\tconst icons = useIconProps()\n\t\treturn (\n\t\t\t<Callout\n\t\t\t\tstyles={adaptedStyles}\n\t\t\t\tdirectionalHint={DirectionalHint.rightBottomEdge}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<Header>\n\t\t\t\t\t<Title>{title}</Title>\n\t\t\t\t\t<HeaderButtons>\n\t\t\t\t\t\t{step?.verb ? (\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tonClick={toggleGuidance}\n\t\t\t\t\t\t\t\ticonProps={icons['help']}\n\t\t\t\t\t\t\t\tariaLabel=\"Expand verb guidance\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={onDismiss}\n\t\t\t\t\t\t\ticonProps={icons['cancel']}\n\t\t\t\t\t\t\tariaLabel=\"Close verb creation modal\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</HeaderButtons>\n\t\t\t\t</Header>\n\t\t\t\t<ContainerBody>\n\t\t\t\t\t<StepComponentContainer>\n\t\t\t\t\t\t<StepEditor\n\t\t\t\t\t\t\thideInputColumn\n\t\t\t\t\t\t\tworkflow={workflow}\n\t\t\t\t\t\t\tmetadata={metadata}\n\t\t\t\t\t\t\tonSave={onSave}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tstep={step}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</StepComponentContainer>\n\t\t\t\t\t{showGuidance && <GuidanceExpansion verb={step?.verb} />}\n\t\t\t\t</ContainerBody>\n\t\t\t</Callout>\n\t\t)\n\t},\n)\n","/**\n * {@docCategory Dialog}\n */\nexport var DialogType;\n(function (DialogType) {\n    /** Standard dialog */\n    DialogType[DialogType[\"normal\"] = 0] = \"normal\";\n    /** Dialog with large header banner */\n    DialogType[DialogType[\"largeHeader\"] = 1] = \"largeHeader\";\n    /** Dialog with an 'x' close button in the upper-right corner */\n    DialogType[DialogType[\"close\"] = 2] = \"close\";\n})(DialogType || (DialogType = {}));\n//# sourceMappingURL=DialogContent.types.js.map","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\n\n// TODO: this calc is because the CollapsiblePanel doesn't flex properly to constrain the width.\n// so the total width ends up offset by the width of the chevron\nexport const Container = styled.div`\n\twidth: calc(100% - 24px);\n\tdisplay: flex;\n\tgap: 4px;\n\talign-items: center;\n\tjustify-content: flex-start;\n`\n\nexport const Index = styled.div`\n\tcolor: ${({ theme }) => theme.palette.neutralTertiaryAlt};\n\tfont-size: 12px;\n\ttext-align: right;\n\tmin-width: 20px;\n`\n\nexport const Verb = styled.div<{ selected?: boolean }>`\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\tcolor: ${({ selected, theme }) =>\n\t\tselected ? theme.palette.themePrimary : theme.palette.neutralSecondary};\n\twhite-space: nowrap;\n`\n\nexport const Details = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-align: left;\n\tcolor: ${({ theme }) => theme.palette.neutralSecondaryAlt};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type {\n\tDeriveArgs,\n\tInputColumnArgs,\n\tInputColumnListArgs,\n\tInputColumnRecordArgs,\n\tOrderbyArgs,\n\tOutputColumnArgs,\n\tPivotArgs,\n\tSampleArgs,\n} from '@datashaper/schema'\nimport { Verb } from '@datashaper/schema'\nimport type { Step } from '@datashaper/workflow'\nimport {\n\tisInputColumnListStep,\n\tisInputColumnRecordStep,\n\tisInputColumnStep,\n\tisInputKeyValueStep,\n\tisInputTableListStep,\n\tisOutputColumnStep,\n} from '@datashaper/workflow'\nimport { format } from 'd3-format'\n\n/**\n * Create reasonable short detail text for a step.\n * For most this will be the column or columns operated on,\n * but we have a few special cases too.\n * @param step\n * @returns\n */\nexport function deriveDetails(step: Step): string | undefined {\n\tconst { verb, args } = step\n\n\t// handle special case verbs first\n\tswitch (verb) {\n\t\tcase Verb.Derive:\n\t\t\treturn `from ${(args as DeriveArgs).column1} & ${\n\t\t\t\t(args as DeriveArgs).column2\n\t\t\t}`\n\t\tcase Verb.Orderby:\n\t\t\treturn (args as OrderbyArgs).orders.map((o) => o.column).join(',')\n\t\tcase Verb.Sample:\n\t\t\treturn sample(step)\n\t}\n\n\tif (isInputColumnStep(step)) {\n\t\treturn (args as InputColumnArgs).column\n\t} else if (isInputColumnListStep(step)) {\n\t\treturn (args as InputColumnListArgs).columns.join(',')\n\t} else if (isInputColumnRecordStep(step)) {\n\t\treturn Object.keys((args as InputColumnRecordArgs).columns).join(',')\n\t} else if (isInputKeyValueStep(step)) {\n\t\treturn `${(args as PivotArgs).key} & ${(args as PivotArgs).value}`\n\t} else if (isOutputColumnStep(step)) {\n\t\treturn (args as OutputColumnArgs).to\n\t} else if (isInputTableListStep(step)) {\n\t\tconst others = step.input['other']\n\t\t\t? step.input['other'].node\n\t\t\t: step.input.others?.map((o) => o.node).join(',')\n\t\treturn `with ${others}`\n\t}\n}\n\nconst whole = format('d')\n\nfunction sample(step: Step): string {\n\tconst args = step.args as SampleArgs\n\treturn args.proportion\n\t\t? `${whole(args.proportion * 100)}% of rows`\n\t\t: `${args.size} rows`\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { CollapsiblePanelStyles } from '@essex/components'\nimport styled from '@essex/styled-components'\nimport { useTheme } from '@fluentui/react'\nimport { useMemo } from 'react'\n\nexport const buttonStyles = { width: 100 }\n\nexport const icons = {\n\tpreview: { iconName: 'View' },\n\tadd: { iconName: 'Add' },\n\tchevronRight: { iconName: 'ChevronRight' },\n\tchevronDown: { iconName: 'ChevronDown' },\n\tinfo: { iconName: 'Info' },\n}\n\nexport const Container = styled.div`\n\twidth: 100%;\n\theight: 100%;\n`\n\nexport const ButtonContainer = styled.div`\n\tpadding: 8px;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\tborder-bottom: 1px solid ${({ theme }) => theme.palette.neutralQuaternaryAlt};\n`\n\nexport const StepsContainer = styled.div``\n\nexport function useCollapsiblePanelStyles(): CollapsiblePanelStyles {\n\tconst theme = useTheme()\n\treturn useMemo(\n\t\t() => ({\n\t\t\theader: {\n\t\t\t\tbackground: theme.palette.white,\n\t\t\t\tcolor: theme.palette.neutralPrimary,\n\t\t\t\tpadding: '4px 0',\n\t\t\t\tborderBottom: 'none',\n\t\t\t\tborderTop: 'none',\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tborder: 'none',\n\t\t\t\tborderBottom: `1px solid ${theme.palette.neutralQuaternaryAlt}`,\n\t\t\t},\n\t\t}),\n\t\t[theme],\n\t)\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport type { ITheme } from '@fluentui/react'\nimport styled from 'styled-components'\n\nexport const DetailsListContainer = styled.div`\n\toverflow: auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100%;\n\tborder-right: 1px solid\n\t\t${({ theme }: { theme: ITheme }) => theme.palette.neutralLighter};\n`\n\nexport const Container = styled.div<{ collapsed: boolean }>`\n\theight: 100%;\n\tdisplay: grid;\n\tgrid-template-columns: ${({ collapsed }) =>\n\t\tcollapsed ? '100% 0' : 'calc(100% - 284px) 284px '};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport {\n\tArqueroDetailsList,\n\tArqueroTableHeader,\n\tDisplayOrder,\n\tStepList,\n\tTableCommands,\n} from '@datashaper/react'\nimport { KnownProfile } from '@datashaper/schema'\nimport { Workflow } from '@datashaper/workflow'\nimport { ToolPanel } from '@essex/components'\nimport { CommandBar } from '@fluentui/react'\nimport { useObservableState } from 'observable-hooks'\nimport { memo, useCallback, useMemo, useState } from 'react'\n\nimport { useToolPanelExpandCollapse } from '../hooks.js'\nimport {\n\tuseTableHeaderColors,\n\tuseTableHeaderStyles,\n\tuseToolPanelStyles,\n} from '../styles.js'\nimport {\n\tuseColumnState,\n\tuseOnCreateStep,\n\tuseOnDeleteStep,\n\tuseOnSaveStep,\n\tuseSelectedTable,\n\tuseTableCommandProps,\n} from './BundleEditor.hooks.js'\nimport { Container, DetailsListContainer } from './BundleEditor.styles.js'\nimport type { BundleEditorProps } from './BundleEditor.types.js'\n\nexport const BundleEditor: React.FC<BundleEditorProps> = memo(\n\tfunction BundleEditor({ resource }) {\n\t\tconst [workflow, isWorkflowAttached] = useMemo<[Workflow, boolean]>(() => {\n\t\t\tconst result = resource\n\t\t\t\t.getSourcesWithProfile(KnownProfile.Workflow)\n\t\t\t\t.find((t) => !!t) as Workflow | undefined\n\t\t\tconst defaultWorkflow = () => {\n\t\t\t\tconst result = new Workflow()\n\t\t\t\tresult.input$ = resource.output$\n\t\t\t\treturn result\n\t\t\t}\n\t\t\treturn [result ?? defaultWorkflow(), !!result]\n\t\t\t/* eslint-disable-next-line react-hooks/exhaustive-deps */\n\t\t}, [resource, resource.sources])\n\n\t\tconst [selectedId, setSelectedId] = useState<string | undefined>(undefined)\n\t\tconst [isLatestSelected, setIsLatestSelected] = useState(true)\n\t\tconst [isInputSelected, setIsInputSelected] = useState(false)\n\t\tconst [selectedColumn, onColumnClick] = useColumnState()\n\n\t\t// Derived State\n\t\tconst numSteps = useObservableState(workflow.length$, workflow.length)\n\t\tconst toolPanelHeader = useMemo(\n\t\t\t() => `Workflow steps (${numSteps})`,\n\t\t\t[numSteps],\n\t\t)\n\t\tconst selectedTable = useSelectedTable(\n\t\t\tresource,\n\t\t\tselectedId,\n\t\t\tisInputSelected,\n\t\t\tisLatestSelected,\n\t\t)\n\t\tconst { collapsed, onToggleCollapsed, commandBar, iconProps } =\n\t\t\tuseToolPanelExpandCollapse(\n\t\t\t\t'history-button',\n\t\t\t\t'History',\n\t\t\t\t`(${numSteps ?? '0'})`,\n\t\t\t)\n\n\t\tconst toolPanelStyles = useToolPanelStyles()\n\t\tconst tableHeaderColors = useTableHeaderColors()\n\t\tconst tableHeaderStyles = useTableHeaderStyles()\n\t\tconst tableCommandProps = useTableCommandProps()\n\n\t\t// Event Handlers\n\t\tconst onSave = useOnSaveStep(workflow, resource, isWorkflowAttached)\n\t\tconst onCreate = useOnCreateStep(onSave, setSelectedId)\n\t\tconst onDelete = useOnDeleteStep(workflow, resource)\n\n\t\tconst onSelectTable = useCallback(\n\t\t\t(id: string) => {\n\t\t\t\tsetSelectedId(id)\n\t\t\t\tsetIsLatestSelected(false)\n\t\t\t\tsetIsInputSelected(false)\n\t\t\t},\n\t\t\t[setSelectedId],\n\t\t)\n\t\tconst onSelectInputTable = useCallback(() => {\n\t\t\tsetSelectedId(undefined)\n\t\t\tsetIsLatestSelected(false)\n\t\t\tsetIsInputSelected(true)\n\t\t}, [setSelectedId])\n\t\tconst onSelectLatestTable = useCallback(() => {\n\t\t\tsetSelectedId(undefined)\n\t\t\tsetIsLatestSelected(true)\n\t\t\tsetIsInputSelected(false)\n\t\t}, [setSelectedId])\n\n\t\treturn selectedTable?.table == null ? null : (\n\t\t\t<Container collapsed={collapsed}>\n\t\t\t\t<DetailsListContainer>\n\t\t\t\t\t<ArqueroTableHeader\n\t\t\t\t\t\tbackground={tableHeaderColors.background}\n\t\t\t\t\t\tstyles={tableHeaderStyles}\n\t\t\t\t\t\tcommandBar={\n\t\t\t\t\t\t\t<TableCommands\n\t\t\t\t\t\t\t\t{...tableCommandProps}\n\t\t\t\t\t\t\t\tworkflow={workflow}\n\t\t\t\t\t\t\t\tselectedColumn={selectedColumn}\n\t\t\t\t\t\t\t\tonAddStep={onCreate}\n\t\t\t\t\t\t\t\tonRemoveStep={onDelete}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfarCommandBar={workflow ? <CommandBar {...commandBar} /> : null}\n\t\t\t\t\t\tname={`${resource.name}${selectedId ? `@${selectedId}` : ''}${\n\t\t\t\t\t\t\tisInputSelected ? '@input' : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\ttable={selectedTable.table}\n\t\t\t\t\t/>\n\t\t\t\t\t<ArqueroDetailsList\n\t\t\t\t\t\tcompact\n\t\t\t\t\t\tsortable\n\t\t\t\t\t\tshowColumnBorders\n\t\t\t\t\t\tisHeaderFixed\n\t\t\t\t\t\tfill\n\t\t\t\t\t\tselectedColumn={selectedColumn}\n\t\t\t\t\t\tmetadata={selectedTable.metadata}\n\t\t\t\t\t\ttable={selectedTable?.table}\n\t\t\t\t\t\tonColumnSelect={onColumnClick}\n\t\t\t\t\t\tfeatures={{\n\t\t\t\t\t\t\tstatsColumnHeaders: true,\n\t\t\t\t\t\t\thistogramColumnHeaders: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</DetailsListContainer>\n\t\t\t\t{\n\t\t\t\t\t<ToolPanel\n\t\t\t\t\t\theaderText={toolPanelHeader}\n\t\t\t\t\t\tonDismiss={onToggleCollapsed}\n\t\t\t\t\t\theaderIconProps={iconProps}\n\t\t\t\t\t\tstyles={toolPanelStyles}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StepList\n\t\t\t\t\t\t\torder={DisplayOrder.LastOnTop}\n\t\t\t\t\t\t\tselectedKey={selectedId}\n\t\t\t\t\t\t\tworkflow={workflow}\n\t\t\t\t\t\t\tonSave={onSave}\n\t\t\t\t\t\t\tonDelete={onDelete}\n\t\t\t\t\t\t\tonSelect={onSelectTable}\n\t\t\t\t\t\t\tonSelectInputTable={onSelectInputTable}\n\t\t\t\t\t\t\tonSelectLatestTable={onSelectLatestTable}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolPanel>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const Container = styled.footer`\n\twidth: 100%;\n\theight: 32px;\n\tfont-size: 12px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tgap: 18px;\n\talign-items: center;\n\tcolor: ${({ theme }) => theme.palette.neutralTertiary};\n\tbackground: ${({ theme }) => theme.palette.neutralLight};\n\tborder-top: 1px solid ${({ theme }) => theme.palette.neutralTertiaryAlt};\n`\n\nexport const constants = {\n\tprivacyUrl: 'https://go.microsoft.com/fwlink/?LinkId=521839',\n\ttermsOfUseUrl: 'https://go.microsoft.com/fwlink/?LinkID=206977',\n\ttrademarksUrl: 'https://www.microsoft.com/trademarks',\n\tmicrosoft: 'https://www.microsoft.com',\n\tcopyright: `©️ ${new Date().getFullYear()} Microsoft`,\n\tgithub: 'https://github.com/microsoft/datashaper',\n}\n\nexport const LinkDiv = styled.div`\n\tcursor: pointer;\n`\nexport const LinkA = styled.a`\n\tcursor: pointer;\n\ttext-decoration: none !important;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { useMicrosoftConsentBanner } from '@essex/hooks'\nimport { useTheme } from '@fluentui/react'\nimport type { FC } from 'react'\nimport { memo } from 'react'\n\nimport { constants, Container, LinkA, LinkDiv } from './Footer.styles.js'\n\nexport const Footer: FC = memo(function Footer() {\n\tconst theme = useTheme()\n\tconst CONSENT_CONF = {\n\t\ttheme: theme.isInverted ? 'dark' : 'light',\n\t\telementId: 'cookie-banner',\n\t\tonChange: (c: any) => console.log('consent changed', c),\n\t}\n\tconst [, manageConsent] = useMicrosoftConsentBanner(CONSENT_CONF)\n\n\treturn (\n\t\t<Container>\n\t\t\t<Link href={constants.privacyUrl}>Privacy</Link>\n\t\t\t{' | '}\n\t\t\t<Link\n\t\t\t\tid={'managecookies'}\n\t\t\t\tonClick={manageConsent}\n\t\t\t\tstyle={{ color: theme.palette.themePrimary }}\n\t\t\t>\n\t\t\t\tCookies\n\t\t\t</Link>\n\t\t\t{' | '}\n\t\t\t<Link href={constants.termsOfUseUrl}>Terms of Use</Link>\n\t\t\t{' | '}\n\t\t\t<Link href={constants.trademarksUrl}>Trademarks</Link>\n\t\t\t{' | '}\n\t\t\t<Link href={constants.microsoft}>{constants.copyright}</Link>\n\t\t\t{' | '}\n\t\t\t<Link href={constants.github}>GitHub</Link>\n\t\t</Container>\n\t)\n})\n\nconst Link: FC<\n\tReact.PropsWithChildren<{\n\t\thref?: string\n\t\tid?: string\n\t\tclassName?: string\n\t\tstyle?: React.CSSProperties\n\t\tonClick?: () => void\n\t}>\n> = memo(function Link({ id, className, children, href, style, onClick }) {\n\treturn href == null ? (\n\t\t<LinkDiv style={style} className={className} id={id} onClick={onClick}>\n\t\t\t{children}\n\t\t</LinkDiv>\n\t) : (\n\t\t<LinkA\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noreferrer\"\n\t\t\thref={href}\n\t\t\tstyle={style}\n\t\t\tclassName={className}\n\t\t\tid={id}\n\t\t>\n\t\t\t{children}\n\t\t</LinkA>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { FontIcon } from '@fluentui/react'\nimport styled from 'styled-components'\n\n// always ensure the header is dark, regardless of mode\nexport const Container = styled.div`\n\tpadding: 0 16px 0 16px;\n\tbackground: ${({ theme }) =>\n\t\ttheme.isInverted\n\t\t\t? theme.palette.neutralQuaternary\n\t\t\t: theme.palette.neutralPrimary};\n\tborder-bottom: 1px solid\n\t\t${({ theme }) =>\n\t\t\ttheme.isInverted\n\t\t\t\t? theme.palette.neutralTertiary\n\t\t\t\t: theme.palette.neutralSecondary};\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 42px;\n`\n\nexport const Title = styled.h1`\n\ttext-transform: uppercase;\n\tfont-size: 25px;\n\talign-self: center;\n\tmargin: 0;\n\tpadding: 0;\n\tcolor: ${({ theme }) =>\n\t\ttheme.isInverted\n\t\t\t? theme.palette.neutralSecondary\n\t\t\t: theme.palette.neutralTertiaryAlt};\n`\n\nexport const StyledFontIcon = styled(FontIcon)`\n\tfont-size: 18px;\n\theight: 18px;\n\twidth: 18px;\n\tcursor: pointer;\n\tcolor: ${({ theme }) =>\n\t\ttheme.isInverted ? theme.palette.neutralPrimary : theme.palette.white};\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { memo } from 'react'\n\nimport { Container, StyledFontIcon, Title } from './Header.styles.js'\nimport type { HeaderProps } from './Header.types.js'\n\nexport const Header: React.FC<HeaderProps> = memo(function Header({\n\tonSettingsClick,\n}) {\n\treturn (\n\t\t<Container>\n\t\t\t<Title>DataShaper</Title>\n\t\t\t<StyledFontIcon\n\t\t\t\taria-label=\"Settings\"\n\t\t\t\ticonName=\"Settings\"\n\t\t\t\tonClick={onSettingsClick}\n\t\t\t/>\n\t\t</Container>\n\t)\n})\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from '@essex/styled-components'\nimport { IconButton } from '@fluentui/react'\n\nexport const Container = styled.div`\n\tposition: relative;\n\n\th1 {\n\t\tmargin-top: 0;\n\t\ttext-transform: uppercase;\n\t\tcolor: ${({ theme }) => theme.palette.neutralTertiary};\n\t}\n\n\th2 {\n\t\tcolor: ${({ theme }) => theme.palette.neutralTertiary};\n\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 1rem;\n\n\t\t&.active + .details {\n\t\t\topacity: 1;\n\t\t\theight: auto;\n\t\t\ttransform: translateX(0);\n\t\t\toverflow-x: auto;\n\t\t}\n\t}\n\n\ttable {\n\t\tborder-collapse: collapse;\n\n\t\tth {\n\t\t\tfont-weight: bold;\n\t\t}\n\n\t\ttd,\n\t\tth {\n\t\t\tborder: 1px solid ${({ theme }) => theme.palette.neutralTertiaryAlt};\n\t\t\tpadding: 5px;\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\n\t.details {\n\t\topacity: 0;\n\t\theight: 0;\n\t\ttransition: transform 0.5s ease-in-out;\n\t\ttransform: translateX(100%);\n\t\toverflow-x: hidden;\n\t}\n`\n\nexport const Icon = styled(IconButton as any)`\n\tfont-size: 2.5rem;\n`\n\nexport const ButtonWrapper = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n`\n\nexport const icons = {\n\tback: { iconName: 'Back' },\n\thome: { iconName: 'Home' },\n}\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const SettingsSection = styled.div`\n\tmargin-left: 10px;\n`\n\nexport const H3 = styled.h3`\n\tmargin-bottom: 10px;\n`\n\nexport const HelpSection = styled.div`\n\tmargin-left: 10px;\n\tmargin-top: 20px;\n`\n\nexport const Heading = styled.h2`\n\tmargin-bottom: 10px;\n`\n\nexport const Container = styled.div`\n\tmargin: 8px;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport { Guidance } from '@datashaper/react'\nimport { Panel, Toggle } from '@fluentui/react'\nimport { memo, useCallback } from 'react'\n\nimport { useGuidanceIndex } from '../hooks/index.js'\nimport { useSettings } from '../states/settings.js'\nimport { useSetDarkMode } from './SettingsPanel.hooks.js'\nimport { H3, HelpSection, SettingsSection } from './SettingsPanel.styles.js'\nimport type { SettingsPanelProps } from './SettingsPanel.types.js'\n\nexport const SettingsPanel: React.FC<SettingsPanelProps> = memo(\n\tfunction SettingsPanel({ isOpen, onDismiss }: SettingsPanelProps) {\n\t\tconst index = useGuidanceIndex()\n\t\tconst [settings, setSettings] = useSettings()\n\t\tconst setDarkMode = useSetDarkMode(settings, setSettings)\n\t\tconst handleDarkModeChange = useCallback(\n\t\t\t(_ev: unknown, checked?: boolean) => void setDarkMode(checked),\n\t\t\t[setDarkMode],\n\t\t)\n\n\t\treturn (\n\t\t\t<Panel\n\t\t\t\tisLightDismiss\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonDismiss={onDismiss}\n\t\t\t\tcloseButtonAriaLabel=\"Close\"\n\t\t\t\theaderText=\"Menu\"\n\t\t\t>\n\t\t\t\t<SettingsSection>\n\t\t\t\t\t<H3>Settings</H3>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tlabel=\"Dark Mode\"\n\t\t\t\t\t\tonText=\"On\"\n\t\t\t\t\t\toffText=\"Off\"\n\t\t\t\t\t\tonChange={handleDarkModeChange}\n\t\t\t\t\t\tchecked={settings.isDarkMode}\n\t\t\t\t\t/>\n\t\t\t\t</SettingsSection>\n\n\t\t\t\t<HelpSection>\n\t\t\t\t\t<H3>Help</H3>\n\t\t\t\t\t<Guidance name={'prepareDataPage'} index={index} />\n\t\t\t\t</HelpSection>\n\t\t\t</Panel>\n\t\t)\n\t},\n)\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport 'allotment/dist/style.css'\n\nimport { type ProfilePlugin, DataShaperApp } from '@datashaper/app-framework'\nimport { Spinner } from '@fluentui/react'\nimport { useConst } from '@fluentui/react-hooks'\nimport { memo, Suspense } from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport { RecoilRoot } from 'recoil'\n\nimport { Layout } from '../components/Layout.js'\nimport { TestAppProfile } from '../profiles/index.js'\nimport { About } from './About.js'\nimport { ErrorBoundary } from './ErrorBoundary.js'\nimport { StyleContext } from './StyleContext.js'\n\nexport const App: React.FC = memo(function App() {\n\tconst customProfiles = useConst<ProfilePlugin[]>(\n\t\t() => [new TestAppProfile()] as ProfilePlugin<any, any>[],\n\t)\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<RecoilRoot>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t<StyleContext>\n\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t<DataShaperApp examples={examples} profiles={customProfiles}>\n\t\t\t\t\t\t\t\t\t<About />\n\t\t\t\t\t\t\t\t</DataShaperApp>\n\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t</StyleContext>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</HashRouter>\n\t\t\t</RecoilRoot>\n\t\t</ErrorBoundary>\n\t)\n})\n\nconst examples = [\n\t{ name: 'Smoking', url: 'examples/smoking.json' },\n\t{ name: 'Companies', url: 'examples/companies.json' },\n]\n"],"names":[],"sourceRoot":""}