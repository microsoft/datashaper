{
	"search.exclude": {
		"**/.yarn": true,
		"**/.pnp.*": true
	},
	"[javascript]": {
		"editor.defaultFormatter": "rome.rome"
	},
	"[javascriptreact]": {
		"editor.defaultFormatter": "rome.rome"
	},
	"[typescript]": {
		"editor.defaultFormatter": "rome.rome"
	},
	"[typescriptreact]": {
		"editor.defaultFormatter": "rome.rome"
	},
	"[python]": {
		"editor.formatOnSave": true,
		"editor.defaultFormatter": "charliermarsh.ruff"
	},
	"eslint.nodePath": ".yarn/sdks",
	"prettier.prettierPath": ".yarn/sdks/prettier/index.js",
	"typescript.tsdk": ".yarn/sdks/typescript/lib",
	"typescript.enablePromptUseWorkspaceTsdk": true,
	"appService.showBuildDuringDeployPrompt": false,
	"javascript.preferences.importModuleSpecifier": "relative",
	"javascript.preferences.importModuleSpecifierEnding": "js",
	"typescript.preferences.importModuleSpecifier": "relative",
	"typescript.preferences.importModuleSpecifierEnding": "js",
	"explorer.fileNesting.enabled": true,
	"explorer.fileNesting.patterns": {
		"*.ts": "${capture}.ts, ${capture}.hooks.ts, ${capture}.hooks.tsx, ${capture}.stories.tsx, ${capture}.story.tsx, ${capture}.spec.tsx, ${capture}.base.ts, ${capture}.base.tsx, ${capture}.types.ts, ${capture}.styles.ts, ${capture}.styles.tsx, ${capture}.utils.ts, ${capture}.utils.tsx, ${capture}.constants.ts, ${capture}.module.scss, ${capture}.module.css, ${capture}.md",
		"*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
		"*.jsx": "${capture}.js",
		"*.tsx": "${capture}.ts, ${capture}.hooks.ts, ${capture}.hooks.tsx, ${capture}.stories.tsx, ${capture}.story.tsx, ${capture}.spec.tsx, ${capture}.base.ts, ${capture}.base.tsx, ${capture}.types.ts, ${capture}.styles.ts, ${capture}.styles.tsx, ${capture}.utils.ts, ${capture}.utils.tsx, ${capture}.constants.ts, ${capture}.module.scss, ${capture}.module.css, ${capture}.md, ${capture}.css",
		"tsconfig.json": "tsconfig.*.json",
		"package.json": "package-lock.json, turbo.json, tsconfig.json, rome.json, .npmignore, dictionary.txt, cspell.config.yaml",
		"README.md": "SECURITY.md, SUPPORT.md, CODE_OF_CONDUCT.md, LICENSE, CODEOWNERS",
		".eslintrc": ".eslintignore",
		".prettierrc": ".prettierignore",
		".gitattributes": ".gitignore",
		".yarnrc.yml": "yarn.lock, .pnp.*",
		"jest.config.js": "jest.setup.mjs"
	},

	"python.testing.pytestArgs": ["tests"],
	"python.testing.unittestEnabled": false,
	"python.testing.pytestEnabled": true,
	"autoDocstring.docstringFormat": "numpy",
	"cSpell.customDictionaries": {
		"project-words": {
			"name": "project-words",
			"path": "${workspaceRoot}/dictionary.txt",
			"description": "Words used in this project",
			"addWords": true
		},
		"custom": true,
		"internal-terms": true
	}
}
