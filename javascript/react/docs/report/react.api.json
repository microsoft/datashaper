{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.29.2",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@datashaper/react!",
  "docComment": "",
  "name": "@datashaper/react",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@datashaper/react!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!ArqueroDetailsList:var",
          "docComment": "/**\n * Renders an arquero table using a fluent DetailsList.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ArqueroDetailsList: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ArqueroDetailsListProps",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ArqueroDetailsList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures:interface",
          "docComment": "/**\n * Feature flags and configuration for the Arquero Details List component\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArqueroDetailsListFeatures "
            }
          ],
          "releaseTag": "Public",
          "name": "ArqueroDetailsListFeatures",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#commandBar:member",
              "docComment": "/**\n * Receive elements to render in the column header as commands, passing the column details to be used in the component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandBar?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRenderFunction",
                  "canonicalReference": "@fluentui/utilities!IRenderFunction:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDetailsColumnProps",
                  "canonicalReference": "@fluentui/react!IDetailsColumnProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commandBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#histogramColumnHeaders:member",
              "docComment": "/**\n * Include histograms in the headers of numeric columns.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "histogramColumnHeaders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "histogramColumnHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#lazyLoadGroups:member",
              "docComment": "/**\n * Collapse most groups so we can lazy load them. Default as true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lazyLoadGroups?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lazyLoadGroups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#showBooleanSymbol:member",
              "docComment": "/**\n * Without smartCells, if datatype is boolean, shows a symbol\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showBooleanSymbol?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showBooleanSymbol",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#showCategoricalBar:member",
              "docComment": "/**\n * Without smartCells, if datatype is array, shows a categorical bar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showCategoricalBar?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showCategoricalBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#showDateFormatted:member",
              "docComment": "/**\n * Without smartCells, if datatype is date, shows the date formatted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showDateFormatted?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showDateFormatted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#showDropdown:member",
              "docComment": "/**\n * Without smartCells, If datatype is array, shows a dropdown with the values\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showDropdown?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showDropdown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#showNumberMagnitude:member",
              "docComment": "/**\n * Without smartCells, if datatype is number, shows the magnitude of the value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showNumberMagnitude?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showNumberMagnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#showSparkbar:member",
              "docComment": "/**\n * Without smartCells, if datatype is array, shows a sparkbar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showSparkbar?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showSparkbar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#showSparkline:member",
              "docComment": "/**\n * Without smartCells, if datatype is array, shows a sparkline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showSparkline?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showSparkline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#smartCells:member",
              "docComment": "/**\n * Use embedded charts and vis based on data types and cell contents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smartCells?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "smartCells",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#smartHeaders:member",
              "docComment": "/**\n * Includes stats and histograms in the headers of columns\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smartHeaders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "smartHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#statsColumnHeaders:member",
              "docComment": "/**\n * Include stats in the headers of columns.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statsColumnHeaders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "statsColumnHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures#statsColumnTypes:member",
              "docComment": "/**\n * If statsColumnHeaders or smartHeaders is true the user can pass which stats he wants\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statsColumnTypes?: "
                },
                {
                  "kind": "Reference",
                  "text": "StatsColumnType",
                  "canonicalReference": "@datashaper/react!StatsColumnType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "statsColumnTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ArqueroDetailsListProps:interface",
          "docComment": "/**\n * Props for the Arquero Details List component\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArqueroDetailsListProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IDetailsListProps",
              "canonicalReference": "@fluentui/react!IDetailsListProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'items'>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ArqueroDetailsListProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#compactRowHeight:member",
              "docComment": "/**\n * If compact = true, override the default height. FluentUI hard-codes the compact height, so this gives us a way to customize how dense the rows are. Note that if compact = false (the default), this has no effect.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compactRowHeight?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compactRowHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#defaultSortColumn:member",
              "docComment": "/**\n * Default sort column\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultSortColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultSortColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#defaultSortDirection:member",
              "docComment": "/**\n * Resizable sort direction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultSortDirection?: "
                },
                {
                  "kind": "Reference",
                  "text": "SortDirection",
                  "canonicalReference": "@datashaper/schema!SortDirection:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultSortDirection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#features:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "features?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArqueroDetailsListFeatures",
                  "canonicalReference": "@datashaper/react!ArqueroDetailsListFeatures:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "features",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#fields:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fields?: "
                },
                {
                  "kind": "Reference",
                  "text": "Field",
                  "canonicalReference": "@datashaper/schema!Field:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#fill:member",
              "docComment": "/**\n * Indicates that the table should fill its container space, including the use of pseudo columns and rows to present a \"spreadsheet-like\" view.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fill?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fill",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#isHeaderFixed:member",
              "docComment": "/**\n * Fixed headers on top when scrolling\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHeaderFixed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isHeaderFixed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#limit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#metadata:member",
              "docComment": "/**\n * Optional metadata to use for column smart features. Use this if you need to cache expensive stats computes separately to prevent recompute on remounting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableMetadata",
                  "canonicalReference": "@datashaper/tables!TableMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#offset:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "offset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#onCellDropdownSelect:member",
              "docComment": "/**\n * If array cells are displayed with a dropdown, this will fire when a value is selected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCellDropdownSelect?: "
                },
                {
                  "kind": "Reference",
                  "text": "DropdownOptionSelect",
                  "canonicalReference": "@datashaper/react!DropdownOptionSelect:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCellDropdownSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#onColumnSelect:member",
              "docComment": "/**\n * Fires a column-wide select event for all columns, including headers. If you need custom behavior, use the built-in table-level onColumnHeaderClick and per-column onClick\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onColumnSelect?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnSelectFunction",
                  "canonicalReference": "@datashaper/react!ColumnSelectFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onColumnSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#onRenderGroupHeader:member",
              "docComment": "/**\n * Passthrough to the group header rendering, when using the group by verb\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRenderGroupHeader?: "
                },
                {
                  "kind": "Reference",
                  "text": "GroupHeaderFunction",
                  "canonicalReference": "@datashaper/react!GroupHeaderFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRenderGroupHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#resizable:member",
              "docComment": "/**\n * Resizable columns\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resizable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resizable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#selectedColumn:member",
              "docComment": "/**\n * Key for a selected column - this is not normally an option in DetailsList\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#showColumnBorders:member",
              "docComment": "/**\n * Indicates to use borders between columns so the cells look more like a spreadsheet (row borders are always on).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showColumnBorders?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showColumnBorders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#sortable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#striped:member",
              "docComment": "/**\n * Indicates whether to use even/odd row coloring.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "striped?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "striped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#style:member",
              "docComment": "/**\n * Style to pass to the container. Use the regular DetailsList.styles prop for deeper customization of the table itself.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "style?: "
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "style",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#table:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "table: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnTable",
                  "canonicalReference": "arquero!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "table",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroDetailsListProps#validationResult:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validationResult?: "
                },
                {
                  "kind": "Reference",
                  "text": "ValidationResult",
                  "canonicalReference": "@datashaper/schema!ValidationResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "validationResult",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!ArqueroTableHeader:var",
          "docComment": "/**\n * Renders a header for an Arquero table\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ArqueroTableHeader: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ArqueroTableHeaderProps",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ArqueroTableHeader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps:interface",
          "docComment": "/**\n * Props for the ArqueroTableHeader component\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArqueroTableHeaderProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ArqueroTableHeaderProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#background:member",
              "docComment": "/**\n * The table background color\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#color:member",
              "docComment": "/**\n * The table color\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#commandBar:member",
              "docComment": "/**\n * The optional command bar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandBar?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commandBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#farCommandBar:member",
              "docComment": "/**\n * The optional far-command bar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "farCommandBar?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "farCommandBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#name:member",
              "docComment": "/**\n * The table name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#showColumnCount:member",
              "docComment": "/**\n * Whether to show the column count\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showColumnCount?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showColumnCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#showRowCount:member",
              "docComment": "/**\n * Whether to show the row count\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showRowCount?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showRowCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#styles:member",
              "docComment": "/**\n * The table styles\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "ArqueroTableHeaderStyles",
                  "canonicalReference": "@datashaper/react!ArqueroTableHeaderStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#table:member",
              "docComment": "/**\n * The arquero table to render\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "table: "
                },
                {
                  "kind": "Reference",
                  "text": "ColumnTable",
                  "canonicalReference": "arquero!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "table",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderProps#visibleColumns:member",
              "docComment": "/**\n * Column-names that are visible\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visibleColumns?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "visibleColumns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!ArqueroTableHeaderStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArqueroTableHeaderStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "ArqueroTableHeaderStyles",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!ArqueroTableHeaderStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root?: "
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!Codebook:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Codebook: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CodebookProps",
              "canonicalReference": "@datashaper/react!CodebookProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Codebook",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!CodebookProps:interface",
          "docComment": "/**\n * Props for the CodebookEditor component\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CodebookProps "
            }
          ],
          "releaseTag": "Public",
          "name": "CodebookProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CodebookProps#fields:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fields: "
                },
                {
                  "kind": "Reference",
                  "text": "Field",
                  "canonicalReference": "@datashaper/schema!Field:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CodebookProps#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableMetadata",
                  "canonicalReference": "@datashaper/tables!TableMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CodebookProps#onChangeFields:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChangeFields: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "Field",
                  "canonicalReference": "@datashaper/schema!Field:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChangeFields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CodebookProps#styles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "CodebookTableStyles",
                  "canonicalReference": "@datashaper/react!CodebookTableStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!CodebookTableStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CodebookTableStyles extends "
            },
            {
              "kind": "Reference",
              "text": "CodebookStyles",
              "canonicalReference": "@datashaper/react!CodebookStyles:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CodebookTableStyles",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CodebookTableStyles#labelWrapper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelWrapper?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "labelWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CodebookTableStyles#tableWrapper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableWrapper?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tableWrapper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!ColumnRenderFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ColumnRenderFunction = "
            },
            {
              "kind": "Content",
              "text": "(item?: any, index?: number, column?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": ") => any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ColumnRenderFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!ColumnSelectFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ColumnSelectFunction = "
            },
            {
              "kind": "Content",
              "text": "(evt?: "
            },
            {
              "kind": "Reference",
              "text": "React.MouseEvent",
              "canonicalReference": "@types/react!~React.MouseEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">, column?: "
            },
            {
              "kind": "Reference",
              "text": "IColumn",
              "canonicalReference": "@fluentui/react!IColumn:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ColumnSelectFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!CommandBarColors:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandBarColors "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandBarColors",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CommandBarColors#background:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CommandBarColors#border:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "border: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "border",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CommandBarColors#checked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CommandBarColors#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CommandBarColors#disabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CommandBarColors#hovered:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!CommandBarColors#pressed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pressed: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@datashaper/react!DisplayOrder:enum",
          "docComment": "/**\n * The vertical display ordering for workflow steps.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DisplayOrder "
            }
          ],
          "releaseTag": "Public",
          "name": "DisplayOrder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!DisplayOrder.FirstOnTop:member",
              "docComment": "/**\n * Render the first step on the top of the view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FirstOnTop = "
                },
                {
                  "kind": "Content",
                  "text": "\"first-on-top\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FirstOnTop"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!DisplayOrder.LastOnTop:member",
              "docComment": "/**\n * Render the last step on top of the view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LastOnTop = "
                },
                {
                  "kind": "Content",
                  "text": "\"last-on-top\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "LastOnTop"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!DropdownOptionSelect:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DropdownOptionSelect = "
            },
            {
              "kind": "Content",
              "text": "((event: "
            },
            {
              "kind": "Reference",
              "text": "React.FormEvent",
              "canonicalReference": "@types/react!~React.FormEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">, option?: "
            },
            {
              "kind": "Reference",
              "text": "IDropdownOption",
              "canonicalReference": "@fluentui/react!IDropdownOption:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | undefined, index?: number | undefined) => void) | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DropdownOptionSelect",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!GroupHeaderFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GroupHeaderFunction = "
            },
            {
              "kind": "Content",
              "text": "(field?: "
            },
            {
              "kind": "Reference",
              "text": "Field",
              "canonicalReference": "@datashaper/schema!Field:interface"
            },
            {
              "kind": "Content",
              "text": ", columnName?: string, props?: "
            },
            {
              "kind": "Reference",
              "text": "IDetailsGroupDividerProps",
              "canonicalReference": "@fluentui/react!IDetailsGroupDividerProps:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GroupHeaderFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@datashaper/react!SaveMetadataFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SaveMetadataFunction = "
            },
            {
              "kind": "Content",
              "text": "(metadata: "
            },
            {
              "kind": "Reference",
              "text": "TableMetadata",
              "canonicalReference": "@datashaper/tables!TableMetadata:interface"
            },
            {
              "kind": "Content",
              "text": ", table: "
            },
            {
              "kind": "Reference",
              "text": "ColumnTable",
              "canonicalReference": "arquero!default:class"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SaveMetadataFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@datashaper/react!StatsColumnType:enum",
          "docComment": "/**\n * Available column statistics to show in the Arquero Details List\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum StatsColumnType "
            }
          ],
          "releaseTag": "Public",
          "name": "StatsColumnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Count:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Count = "
                },
                {
                  "kind": "Content",
                  "text": "\"count\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Count"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Distinct:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Distinct = "
                },
                {
                  "kind": "Content",
                  "text": "\"distinct\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Distinct"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Example:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Example = "
                },
                {
                  "kind": "Content",
                  "text": "\"example\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Example"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Invalid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Invalid = "
                },
                {
                  "kind": "Content",
                  "text": "\"invalid\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Invalid"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Max = "
                },
                {
                  "kind": "Content",
                  "text": "\"maximum\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Max"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Mean:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Mean = "
                },
                {
                  "kind": "Content",
                  "text": "\"mean\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Mean"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Median:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Median = "
                },
                {
                  "kind": "Content",
                  "text": "\"median\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Median"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Min:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Min = "
                },
                {
                  "kind": "Content",
                  "text": "\"minimum\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Min"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Mode = "
                },
                {
                  "kind": "Content",
                  "text": "\"mode\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Mode"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Stdev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Stdev = "
                },
                {
                  "kind": "Content",
                  "text": "\"stdev\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Stdev"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@datashaper/react!StatsColumnType.Type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Type = "
                },
                {
                  "kind": "Content",
                  "text": "\"type\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Type"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!StepList:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "StepList: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepListProps",
              "canonicalReference": "@datashaper/react!StepListProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StepList",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepListProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepListProps "
            }
          ],
          "releaseTag": "Public",
          "name": "StepListProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onDelete:member",
              "docComment": "/**\n * Deletes a workflow step at the specified index\n *\n * @param index - The index of the step to delete\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDelete?: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDelete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onSave:member",
              "docComment": "/**\n * Event handler for when a step needs to be saved\n *\n * @param step - The step to save\n *\n * @param index - The step index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSave?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", index?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSave",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onSelect:member",
              "docComment": "/**\n * Event handler for when a step is selected.\n *\n * @param name - The step name that was selected\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelect?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onSelectInputTable:member",
              "docComment": "/**\n * Event handler for when the input table is selected. 'Original' button will not be shown if this is not provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelectInputTable: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSelectInputTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#onSelectLatestTable:member",
              "docComment": "/**\n * Event handler for when the latest output table is selected. 'Latest' button will not be shown if this is not provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelectLatestTable: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSelectLatestTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#order:member",
              "docComment": "/**\n * The order to render the steps in. Default = latest on top\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "order?: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayOrder",
                  "canonicalReference": "@datashaper/react!DisplayOrder:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "order",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#selectedKey:member",
              "docComment": "/**\n * Id of the selected step\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#styles:member",
              "docComment": "/**\n * Styling for the step list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styles?: "
                },
                {
                  "kind": "Reference",
                  "text": "StepListStyles",
                  "canonicalReference": "@datashaper/react!StepListStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "styles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListProps#workflow:member",
              "docComment": "/**\n * The input workflow containing the step list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workflow: "
                },
                {
                  "kind": "Reference",
                  "text": "Workflow",
                  "canonicalReference": "@datashaper/workflow!Workflow:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "workflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!StepListStyles:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StepListStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "StepListStyles",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListStyles#buttonContainer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonContainer?: "
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buttonContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListStyles#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root?: "
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListStyles#stepHeaders:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stepHeaders?: "
                },
                {
                  "kind": "Reference",
                  "text": "StepHeaderStyles",
                  "canonicalReference": "@datashaper/react!StepHeaderStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stepHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!StepListStyles#stepsContainer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stepsContainer?: "
                },
                {
                  "kind": "Reference",
                  "text": "CSSProperties",
                  "canonicalReference": "@types/react!~React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stepsContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@datashaper/react!TableCommands:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TableCommands: "
            },
            {
              "kind": "Reference",
              "text": "React.FC",
              "canonicalReference": "@types/react!~React.FC:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableCommandsProps",
              "canonicalReference": "@datashaper/react!TableCommandsProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TableCommands",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@datashaper/react!TableCommandsProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableCommandsProps "
            }
          ],
          "releaseTag": "Public",
          "name": "TableCommandsProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#background:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#commandBarProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandBarProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ICommandBarProps",
                  "canonicalReference": "@fluentui/react!ICommandBarProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commandBarProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#inputTable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputTable?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableContainer",
                  "canonicalReference": "@datashaper/tables!TableContainer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inputTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableMetadata",
                  "canonicalReference": "@datashaper/tables!TableMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#onAddStep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAddStep?: "
                },
                {
                  "kind": "Content",
                  "text": "(step: "
                },
                {
                  "kind": "Reference",
                  "text": "Step",
                  "canonicalReference": "@datashaper/workflow!Step:interface"
                },
                {
                  "kind": "Content",
                  "text": ", output: string | undefined, index: number | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onAddStep",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#onRemoveStep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRemoveStep?: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRemoveStep",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#selectedColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedColumn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@datashaper/react!TableCommandsProps#workflow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workflow: "
                },
                {
                  "kind": "Reference",
                  "text": "Workflow",
                  "canonicalReference": "@datashaper/workflow!Workflow:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "workflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useDefaultCodebookStyles:function(1)",
          "docComment": "/**\n * Generates the default codebook styles\n *\n * @param styles - The styles input object\n *\n * @param heights - The field heights to use\n *\n * @returns - A set of codebook styles to use\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDefaultCodebookStyles(heights?: "
            },
            {
              "kind": "Reference",
              "text": "FieldHeights",
              "canonicalReference": "@datashaper/react!FieldHeights:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "CodebookStyles",
              "canonicalReference": "@datashaper/react!CodebookStyles:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "heights",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "useDefaultCodebookStyles"
        },
        {
          "kind": "Function",
          "canonicalReference": "@datashaper/react!useHeaderCommandBarDefaults:function(1)",
          "docComment": "/**\n * Helper to create the props necessary for the default inverted management bar. Basic colors can be customized, but note that if you do not want an always-inverted bar like that used in the DataShaper webapp, you may want to just tweak the Fluent styles as normal.\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useHeaderCommandBarDefaults(props?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ICommandBarProps",
              "canonicalReference": "@fluentui/react!ICommandBarProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", far?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", colors?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommandBarColors",
              "canonicalReference": "@datashaper/react!CommandBarColors:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICommandBarProps",
              "canonicalReference": "@fluentui/react!ICommandBarProps:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "props",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": true
            },
            {
              "parameterName": "far",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "colors",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "isOptional": true
            }
          ],
          "name": "useHeaderCommandBarDefaults"
        }
      ]
    }
  ]
}
