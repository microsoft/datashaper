[tool.poetry]
name = "datashaper"
version = "0.0.34"
description = "This project provides a collection of utilities for doing lightweight data wrangling."
authors = [
    "Nathan Evans <naevans@microsoft.com>",
    "Andres Morales <andresmor@microsoft.com>",
]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<4"
pandas = "^2.2.0"
jsonschema = "^4.21.1"
pyarrow = "^15.0.0"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.7"
black = "^23.12.1"
codespell = "^2.2.6"
flake8 = "^7.0.0"
isort = "^5.13.2"
poethepoet = "^0.24.4"
pydocstyle = "^6.3.0"
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
semversioner = "^2.0.1"
toml = "^0.10.2"
coverage = "^7.4.0"
pyright = "^1.1.349"
pytest-asyncio = "^0.23.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
py_version = 36
profile = "black"
force_single_line = false
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["datashaper", "tests"]
extend_skip = ["setup.py"]


[tool.black]
target-version = ['py36']
force-exclude = '''
.*/setup\.py$
'''

[tool.coverage.run]
omit = ["tests/*", ".*", "data/*"]

[tool.poe.tasks]
_flake8 = 'flake8 datashaper'
_bandit = 'bandit -r datashaper'
_black = 'black datashaper tests'
_isort = 'isort datashaper tests'
_black_check = 'black --check datashaper tests'
_isort_check = 'isort --check datashaper tests'
_pydocstyle = 'pydocstyle datashaper'
_codespell = 'codespell dodiscover/ doc/ examples/ --ignore-words=.codespellignore --skip "**/_build/*,**/auto_examples/*"'
_changelog = 'semversioner changelog > CHANGELOG.md'
_apply_version = 'semversioner release'
_test_with_coverage = 'coverage run -m pytest'
_coverage_report = 'coverage report --show-missing'
_pyright = "pyright"

# Pass in a test pattern
test_only = "pytest -k"

[[tool.poe.tasks.test]]
sequence = ['_test_with_coverage', '_coverage_report']
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.check]]
sequence = ['_pyright', '_flake8', '_bandit', '_codespell', 'check_format', '_pydocstyle']
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.format]]
sequence = ['_black', '_isort']
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.check_format]]
sequence = ['_black_check', '_isort_check']
ignore_fail = 'return_non_zero'

[tool.pydocstyle]
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^datashaper.*'

[tool.pytest]
asyncio_mode = "auto"

[tool.pyright]
include = ["datashaper"]
exclude = ["**/node_modules", "**/__pycache__"]

[tool.pytest.ini_options]
asyncio_mode = "auto"